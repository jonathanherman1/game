%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: patt3.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Fox
%%CreationDate: 9/19/2019
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.0 x243 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 35994 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45AC578257AC81AC7BA65782ABCD812E81CD572757CD57272D7C0527
%0028002700280027002800270028002700280027282F0027002800270028
%0027002E578227A6578257AC81AC7BA65782ABCD812E81CD572757CD5727
%2D7C05270028002700280027002800270028002700280027282F00270028
%002700280027002E57A62727AC518257AC7BAC515881AC815181AC5158AB
%AC2705575700050005002700050027000500270005002700050027002828
%0500050027000500050505007C578227AC518257AC7BAC515881AC815181
%AC5158ABAC27055757000500050027000500270005002700050027000500
%270028280500050027000500050505007C5782527B827B82A58281AC81AC
%A55181CD5782AB7C00528158000500270027002700270027002700270027
%0027002700270553002700270027002700525100517C81587B827B82A582
%81AC81ACAB5181CD5782AB7C005281580005002700270027002700270027
%002700270027002700270553002700270027002700525100517C81A55181
%57817BAB7B7B817B5181AC51ACAB2D008281572D05000500050005000500
%05000500050005000500050005000529280005000500050005007C27057B
%5781518157817BAB7B7B817B5181AC51ACAB2D008281572D050005000500
%050005000500050005000500050005000500052928000500050005000500
%7C27057B51A6818281828182ACAC8152A5AC57ACAC5227CDA57C57280027
%00280027002800270028002700280027002800270028002F282700270028
%0027002857A600825782818281828182ACAC8152A5AC57ACAC5227CDA57C
%5728002700280027002800270028002700280027002800270028002F2827
%002700280027002857A600825727AC57AC57AC5158815181AC51ACA52D51
%CD8182572700270005002700050027000500270005002700050027000500
%052853F8270005002700050051AB5705AC2DAC57AC57AC5158815181AC51
%ACA52D51CD7B825727002700050027000500270005002700050027000500
%27000500052853F8270005002700050051AB5700AC7C57AC57AC57AC5182
%ACA651ACAB517BCD7B82817C510500270027002700270027002700270027
%00270027002700270028532700270027002700270082AB2D7B8257AC57AC
%57AC5182ACA651ACAB517BCD7B82817C5105002700270027002700270027
%0027002700270027002700270028532700270027002700270082AB2D57AB
%518182818251ACAB822DAC815181AC57A6817B5705000500050005000500
%05000500050005000500050005000500050053050000050005000500002D
%AC812D81518182818251ACAB822DAC815181AC57A6817B57050005000500
%050005000500050005000500050005000500050005005305000005000500
%0500002DA681277CA552AB82AC5851822DCD8158ACAC57ACA5827B280027
%00280027002800270028002700280027002800270028002700272F2F0028
%00270028002700287BAC7B7CA552AB82AC5851822DCD8158ACAC57ACA582
%7B2800270028002700280027002800270028002700280027002800270027
%2F2F002800270028002700287BAC812D827B7BAB82AB5757AC8157ABA651
%AC81827B0000510505002700050027000500270005002700050027000500
%270005F82F2900002700050005000500587BAC51827B7BAB82AB5757AC81
%57ABA651AC81827B00005105050027000500270005002700050027000500
%27000500270005F82F29000027000500050005005857ACAC2DAC57AC8182
%ACAC577CAC8251AC817C812E057C57270027002700270027002700270027
%00270027002700270027000528540027002700272727000505827BAC2DAC
%57AC8182ACAC577CAC8251AC817C812E057C572700270027002700270027
%002700270027002700270027002700052854002700270027272700050582
%57817B2DAC51AC51825157AB7C2DAC8182812757AC570000050005000500
%0500050005000500050005000500050005000500052F2700050005005151
%2700005782817B2DAC51AC51825157AB7C2DAC8182812757AC5700000500
%050005000500050005000500050005000500050005000500052F27000500
%0500515127000057827CAB52818257AC7B82AB5851CD8182AC2E2DCD8127
%00280027002800270028002700280027002800270028002700280027005A
%28270028002700527B2E002EA57CAB52818257AC7B82AB5851CD8182AC2E
%2DCD81270028002700280027002800270028002700280027002800270028
%0027005A28270028002700527B2E0028AB81A67B27AB2D57CDAB5151CD7B
%7BAB2D05AC81270005002700050027000500270005002700050027000500
%270005002700002F2F00050027000500278151008281A67B27AB2D57CDAB
%5151CD7B7BAB2D05AC812700050027000500270005002700050027000500
%27000500270005002700002F2F00050027000500278151007CCD81AC2782
%8127812E57CD577CAC5227CDA52700270027002700270027002700270027
%002700270027002700270027002700532F050027002700270028AB5205CD
%81AC27828127812E57CD577CAC5227CDA527002700270027002700270027
%00270027002700270027002700270027002700532F050027002700270028
%AB520557ACA58100AC575757CD5757AB572DAC8127000500050005000500
%05000500050005000500050005000500050005000500002854F805000500
%050005002DAB2D57ACA58100AC575757CD5757AB572DAC81270005000500
%0500050005000500050005000500050005000500050005000500002854F8
%05000500050005002DAB2D58ACACAB5257CDABCD5158AB8257CDAB2E0027
%002800270028002700280027002800270028002700280027002800270028
%002854280027002800270028007CAB58ACACAB5257CDABCD5158AB8257CD
%AB2E00270028002700280027002800270028002700280027002800270028
%002700280028542800270028002700280058AB7B82ABAC81277B810558AB
%8157CDAB5100270005002700050027000500270005002700050027000500
%270005002700050005055B0005000500270005000500A68182ABAC81277B
%810558AB8157CDAB51002700050027000500270005002700050027000500
%27000500270005002700050005055B000500050027000500050082CD7BAC
%ABCD51522758AB8281CDAB7C002700270027002700270027002700270027
%0027002700270027002700270027002700285A2800270027002700270005
%27CD7BACABCD51522758AB8281CDAB7C0027002700270027002700270027
%002700270027002700270027002700270027002700285A28002700270027
%002700052757AC57AC81AC81ACAB8181ACAB810005000500050005000500
%05000500050005000500050005000500050005000500050005005A280000
%05000500050005000057AC57AC81AC81ACAB8181ACAB8100050005000500
%050005000500050005000500050005000500050005000500050005000500
%5A28000005000500050005000528AB8281A657AC7B82ABCDACAC00280027
%002800270028002700280027002800270028002700280027002800270028
%002700275453002800270028002700280027AB8281A657AC7B82ABCDACAC
%002800270028002700280027002800270028002700280027002800270028
%002700280027002754530028002700280027002800007BA558AB575151AB
%AC7BAC270000270005002700050005000500270005002700050027000500
%270005002700050027000500542F0000270005002700050027007BA558AB
%575151ABAC7BAC2700002700050027000500050005002700050027000500
%27000500270005002700050027000500542F000027000500270005002705
%27CD5182ACACAB822DAC5100002700270027002800280505282800280527
%00280027002705280027002700270027002700052F540027002700270027
%0027000527CD5182ACACAB822DAC51000027002700270028002805052828
%0028052700280027002705280027002700270027002700052F5400270027
%0027002700270000007BAC0082A55100A681000005000500050528052800
%2F05282F28F8280000002800050028280000050005000500050005F8532F
%000005000500050005000500007BAC0082A55100A6810000050005000505
%280528002F05282F28F82800000028000500282800000500050005000500
%05F8532F0000050005000500050005280052AB522D520082AC2700280027
%0028002728532F2F285328285328282F0027282800280553002828270028
%0027002800052F5A0027002800270028002700280052AB522D520082AC27
%002800270028002728532F2F285328285328282F00272828002805530028
%282700280027002800052F5A0027002800270028002700000500AC575805
%2DAB7C0005002700050027050000282953282F28282F282828F828290500
%05292800280005002700050027002F540500050027000500270005000500
%AC5758052DAB7C0005002700050027050000282953282F28282F282828F8
%2829050005292800280005002700050027002F5405000500270005002700
%0527000057AC572EABAC0527002700272828002F2828002728532F532F2F
%2F28282FF85328050053282728280027002700270027285A002700270027
%002700270027000057AC572EABAC0527002700272828002F282800272853
%2F532F2F2F28282FF85328050053282728280027002700270027285A0027
%00270027002700270000050027ABA681CD2D00000500050028282F28532F
%2F2828062F29532F532F282928005300002853002F2805000500050005F8
%282F050005000500050005000500050027ABA681CD2D0000050005002828
%2F28532F2F2828062F29532F532F282928005300002853002F2805000500
%050005F8282F05000500050005000500052700280082ACCD570500280027
%002800270028282F2F5454542F545354535A54282F282F28002F54272F53
%0027002828270028002800280027002800270028002700280082ACCD5705
%00280027002800270028282F2F5454542F545354535A54282F282F28002F
%54272F530027002828270028002800280027002800270028000005000027
%A62D05000500270005002700050000F8000028062F2F5B5B542F5A2F2829
%282F00065B00532F27000028280005002700050027000500270005002700
%05000027A62D05000500270005002700050000F8000028062F2F5B5B542F
%5A2F2829282F00065B00532F270000282800050027000500270005002700
%0500272700270052510000270027002700270027272FFD04280027000528
%5A5B5A537F2953285428285A28535A002705540027002700270027002700
%2700270027002700270052510000270027002700270027272FFD04280027
%0005285A5B5A537F2953285428285A28535A002705540027002700270027
%002700270027002700000500002D57000500050005000500050028000500
%28282F29532928F8282F5A2F5A28542853005B05545428F8292F00F82F05
%00000500050005000500050005000500002D570005000500050005000500
%2800050028282F29532928F8282F5A2F5A28542853005B05545428F8292F
%00F82F050000050005000500050005000528002700585105002800270028
%002700272853282E28280027052F2F5A2F2828545A532F5354285A2F545B
%2805535300282F2700280027002800270028002700280027005851050028
%00270028002700272853282E28280027052F2F5A2F2828545A532F535428
%5A2F545B2805535300282F27002800270028002700280027000027000051
%510005002700050027000500050028282F2953292F2827002F5353285453
%2F2F5A285A285A5428F85A2800282F000500270005002700050027000500
%27000051510005002700050027000500050028282F2953292F2827002F53
%532854532F2F5A285A285A5428F85A2800282F0005002700050027000500
%270005270027007C2D05002700270027002700270027282906FD04285354
%5A2F532F54537F295A5453542F547F282754280054052728280027002700
%270027002700270027007C2D05002700270027002700270027282906FD04
%2853545A2F532F54537F295A5453542F547F282754280054052728280027
%002700270027002700000500057B51000500050005000500050005000528
%2F282F28280028002F545A2F2F2F7F54542854285A542F055B00282F0005
%53000500050005000500050005000500057B510005000500050005000500
%050005282F282F28280028002F545A2F2F2F7F54542854285A542F055B00
%282F00055300050005000500050005000527002800822D28002700280027
%002800270028002805532F532F5453532828285A5A542F5454535453545A
%2F2F5A272953F853282F282700270028002700280027002800822D280027
%00280027002800270028002805532F532F5453532828285A5A542F545453
%5453545A2F2F5A272953F853282F2827002700280027002800000500057B
%5100270005002700050027000500270005002F2F5429532F545354282F54
%5A295A285A29542F53295AF854280529282F050027000500270005002700
%0500057B5100270005002700050027000500270005002F2F5429532F5453
%54282F545A295A285A29542F53295AF854280529282F0500270005002700
%05002727002700A62D050027002700270027002700270027000500282853
%535A53542F5A5454537F5B53FD04542F54542754282853282F0027002700
%27002700270027002700A62D050027002700270027002700270027000500
%282853535A53542F5A5454537F5B53FD04542F54542754282853282F0027
%002700270027002700000500058151000500050005000500050005000500
%0500050505002829542F542F5329542F54545B29542F532F530554F82F28
%530005000500050005000500050005000581510005000500050005000500
%050005000500050505002829542F542F5329542F54545B29542F532F5305
%54F82F285300050005000500050005000528002700A65105002800270028
%00270028002700280027002F2F5328282854545A54542954547F54535454
%2F7F2F53542753532F27002700280027002800270028002700A651050028
%0027002800270028002700280027002F2F5328282854545A54542954547F
%545354542F7F2F53542753532F2700270028002700280027000027000581
%58000500270005002700050027000500270005F8282953292F00282F5A54
%542F53282854545353542F2F2F00542F2928050005002700050027000500
%2700058158000500050005002700050027000500270005F8282953292F00
%282F5A54542F53282854545353542F2F2F00542F29280500050027000500
%270005270027008251050027005227270027002700270027002700270028
%282F28542F27055A5A545354285B285A537F287F282F2F532F5300270027
%002700270027002700270082510500270058270500270027002700270027
%00270028282F28542F27055A5A545354285B285A537F287F282F2F532F53
%0027002700270027002700000500007B7B000500052D2700270500000500
%05000500050005F8272F53282F532F00285454295454285454542F542829
%532954050000050005000500050005000500007B7B000500275727005127
%0000050005000500050005F8272F53282F532F0028545429545428545454
%2F542829532954050000050005000500050005270028005857060027277C
%002751282D270028002700280027002800282F7F2F2F2F7F53282F7F5453
%547F2F7F2F7F05542F5A5327002800270028002700280027002800585706
%0027277C0027572851280028002700280027002800282F7F2F2F2F7F5328
%2F7F5453547F2F7F2F7F05542F5A53270028002700280027002800000500
%2D0005002700515100275100580005002700050027000500270000285A53
%2F06545A542853547F292F5A542F28535454530005002700050027000500
%050005005100050027005751002D57058200050027000500270005002700
%00285A532F06545A542853547F292F5A542F285354545300050027000500
%27000500052700275728002700055758007C277C27050027002700270027
%0027002E0000285454542928537F542F282F547F5B53285A545A28270027
%0027002700270027272700277B2800270000577C008227822D0500270027
%002700270027002E0000285454542928537F542F282F547F5B53285A545A
%282700270027002700270027270500007B2DFD0400822727572D57000005
%000005270005000500050653280000532F532F2F05545B5A537F2F7F062F
%545A5428F805000500050005000500572700007B2DFD0400A62D277B5181
%000005000027270005000500050653280000532F532F2F05545B5A537F2F
%7F062F545A5428F8050005000500050005005782000051A600270028A527
%577C7B52002800052D520027002800270027052F2F2F002F5453535A2828
%547F54545B28547F545B0027002700280027002800052782000051AC0027
%0028AC27578281580028000551580027002800270027052F2F2F002F5453
%535A2828547F54545B28547F545B00270027002800270028002700577C00
%27A52D000027AC00825782000500002D5700050005002700050027052828
%530528545328542F28002F5454287F545A54050027000500270005000527
%2757820027AB5100002DAC05827BAC00050000517B000500050027000500
%27052828530528545328542F28002F5454287F545A540500270005002700
%050005272D51AB52008257050058812E81A62D05000027820005002E0027
%002700270028292F285329282F5A0528545A547F28547F7F545A00270027
%002700270027002E7B52AB5200AC7B05007C8152ABAC510000002DAC0505
%00520027002700270028292F285329282F5A0528545A547F28547F7F545A
%00270027002700270027002E81278281002DAC00007B572DAC8105000000
%A62700002D2D00000500050005F805285328282929297F2800285429285A
%7F545A29000005000500050005000500825182810551AC00007B7B51AC81
%27000005AC270000515100000500050005F805285328282929297F280028
%5429285A7F545A29000005000500050005000500828251CD5727AB2800AC
%5182AC580028008257060027572800270028002700280027005353282854
%2F7F54280053547F7F535A5300270028002700280027510657AC57CD572E
%AB2E00AC57A6CD7C002800AC8106002E8128002700280027002800270053
%532828542F7F54280053547F7F535A5300270028002700280027510651AB
%5781AC27AC2D27815181AC05000058AB2700277B27002700050027000500
%270005F8282F2F05532F54545A545A547F287F0505000500270005000505
%7B0027AB8181AC27AC2D05A55781AC2700007CAB27002781270027000500
%27000500270005F8282F2F05532F54545A545A547F287F05050005002700
%050005057B00277CAB82AB82817C05AC51CD7B050027AB5800278152007C
%2727002700270027002700270027285A282F53542953547F28535B270027
%002700270027002757520082AC82AB82817C27AC57CD8127002DAB7C0027
%A55800822727002700270027002700270027285A282F53542953547F2853
%5B270027002700270027002757580000AC81AC818281518182AB51000581
%A60027815700822D0000050005000500050005000500000054542F2F5428
%7F54005454000500050005000500002D51812700AC81AC818281578182AB
%57000581AC0027AB7B00AC2D000005000500050005000500050000005454
%2F2F54287F54005454000500050005000500002D51812D2857AC81CD7BAC
%81ACA5AC270157CD2728AC8227AC2D000028002700280027002800270028
%002700537F5428545B2F00852F05002800270028002700288182812857CD
%ABCD81ACABACACAC270057CD2728AC8227AC510000280027002800270028
%00270028002700537F5428545B2F00852F05002800270028002700288182
%817B2781ACABAC57CD81AC810005CD5727A5A62DAC510000572705000500
%2700050027000500270005F828545B0528282F5B28000500270005002700
%05007C57578127A5ACABAC7BACABAC810027CD5727ABAC57AC5700007B27
%000005002700050027000500270005F828545B0528282F5B280005002700
%0500270005007C5757AC5758ACACAB5851ACAB7C00A68127A5AC57CD7B00
%007C57050027002700270027002700270027002700272F7F54545B5A0027
%0027002700270027000505AC2DA67B7CACACAB7C57ACAB7C00AC812EABAC
%81CD8100008257050027002700270027002700270027002700272F7F5454
%5B5A00270027002700270027000505AC2D05AC5182ABAC812781AC2751AB
%2D7BAC57AC8100007B570000050005000500050005000500050005000500
%00065B5B7F28000005000500050005002D2D0081AC27AC57A6ABAC812781
%AC2D57AB5181AC81AC810500817B00000500050005000500050005000500
%0500050000065B5B7F28000005000500050005002D2D0081AC7C2DAC57AC
%ABCD7B528152AC7C7BCD81CD812805A68128000500280027002800270028
%00270028002700280005005A5327002800270028002700282782007CAC82
%51CD7BACABCD817C8158AC8281CD81CDA52827AC81280005002800270028
%0027002800270028002700280005005A5327002800270028002700282782
%007CAC815757A681ACABAC81577BA657AC7BAC810027AC810000052D2D00
%27000500270005002700050027000500270000052F000500270005002700
%050000572D27A681577BAC81ACABAC818181AC7BAC81AC81272DCD810500
%0551510027000500270005002700050027000500270000052F0005002700
%05002700050000572D27AC588158AB82ABAC818257AC57AC81AC812757CD
%8127002D7B7C002700270027002700270027002700270027002700282928
%00270027002700270027007C81058182A57CABACACACA5AC7BAC7BACABCD
%812E57CD8127002D81820027002700270027002700270027002700270027
%0028292800270027002700270027007C8105817B577B818182ABAC7B8251
%AC81AC812757CD7B00008281510027000500050005000500050005000500
%0500050005002F00050005000500050005000051AC5151817C818181ACAB
%AC81AC57ACABAC812D7BCD81000582AB5100270005000500050005000500
%050005000500050005002F00050005000500050005000051AC512DAC5782
%57AC81AC7BA65782ABCD812D81CD572757CD7B27277C2727002800270028
%0027002800270028002700280005282F00270028002700280027005281AC
%27AC7BA681AC81AC81AC7B82ABCDA55281CD7B2E7BCD81272D8227270028
%002700280027002800270028002700280005282F00270028002700280027
%005281AC2727AC518257AC7BAC515881AC815181AC5158ABAC2705575700
%050005002700050027000500270005002700050027002828050005002700
%0500052727008281822DAC57AC81AC81AC5758A5AC815881AC577CABAC27
%275781000500050027000500270005002700050027000500270028280500
%05002700050005272700827BAC527B827B82A58281AC81ACA55181CD5782
%AB7C00528158000500270027002700270027002700270027002700270027
%05530027002700270027005857005782817C81A681ACABACA5AC81ACAB58
%81CD81A6AB820058817C0005002700270027002700270027002700270027
%002700270553002700270027002700585700578281A5518157817BAB7B7B
%817B5181AC51ACAB2D008281572D05000500050005000500050005000500
%05000500050005000529280005000500050000008227278157AB57818281
%82AB8281A6815781AC57ACAB510082AB8151050005000500050005000500
%0500050005000500050005000529280005000500050000008227278157A6
%818281828182ACAC8152A5AC57ACAC5227CDA57C57280027002800270028
%00270028002700280027002800270028002F2827002700280027002881AC
%00827B8281A6A5AC81A6ACAC8158ACAC7BACAC522DCDAC82572800270028
%0027002800270028002700280027002800270028002F2827002700280027
%002881AC00827B27AC57AC57AC5158815181AC51ACA52D51CD7B82572700
%270005002700050027000500270005002700050027000500052853F82700
%05002700050058AB5727AC51AC7BAC81AC577C8157A5AC57ACAB5157CD81
%A67B51002700050027000500270005002700050027000500270005000528
%53F8270005002700050058AB5705AC7C57AC57AC57AC5182ACA651ACAB51
%7BCD7B82817C510500270027002700270027002700270027002700270027
%002700285327002700270027000500ACAC527B8257AC81AC7BAC51ACACAC
%57ACAC5881CD81AC81825705002700270027002700270027002700270027
%00270027002700285327002700270027000500ACAC517BAB518182818251
%ACAB822DAC815181AC57A6817B5705000500050005000500050005000500
%050005000500050005000500530500000500050005000051AC8151AB5781
%AC818257ACAB8257AC817C81AC7BAC818157050005000500050005000500
%05000500050005000500050005000500530500000500050005000051AC81
%517CA552AB82AC5851822DCD8158ACAC57ACA5827B280027002800270028
%00270028002700280027002800270028002700272F2F0028002700280027
%002881AC8182AC7CABACAC7C518251CDAB82ACAC7BACACAC812800270028
%0027002800270028002700280027002800270028002700272F2F00280027
%00280027002881AC812D827B7BAB82AB5757AC8157ABA651AC81827B0000
%510505002700050027000500270005002700050027000500270005F82F29
%000027000500050005007C81AC57A68182AB82AB817BAC8181ABAC57AC81
%A68100005805000027000500270005002700050027000500270005002700
%05F82F29000027000500050005007C81ACAC2DAC57AC8182ACAC577CAC82
%51AC817C812E057C57270027002700270027002700270027002700270027
%00270027000528540027002700272727000505AC81AC51AC7BAC81A6ACCD
%7B82AC8257AC8182815227827B2700270027002700270027002700270027
%0027002700270027000528540027002700272727000505AC7B817B2DAC51
%AC51825157AB7C2DAC8182812757AC570000050005000500050005000500
%0500050005000500050005000500052F2700050005005157270000578281
%8151AC57AC5782577BAB8257AC81A6AB2757AC8100000500050005000500
%050005000500050005000500050005000500052F27000500050051572700
%0057A67CAB52818257AC7B82AB5851CD8182AC2E2DCD8127002800270028
%00270028002700280027002800270028002700280027005A282700280027
%00528152002EAC82AB5281A67BCD81ACAB7C57CD81A6AC2E51CD81270028
%0027002800270028002700280027002800270028002700280027005A2827
%0028002700528152002EAC81A67B27AB2D57CDAB5151CD7B7BAB2D05AC81
%270005002700050027000500270005002700050027000500270005002700
%002F2F000500270005002781510082A5AC812DAB517BCDAB5757CD8182AB
%5127CD812700050027000500270005002700050027000500270005002700
%05002700002F2F000500270005002781510082CD81AC27828127812E57CD
%577CAC5227CDA52700270027002700270027002700270027002700270027
%002700270027002700532F05002700270027002EAC5227CDABCD27828127
%815257CD7B82AC5827CDAB27002700270027002700270027002700270027
%00270027002700270027002700532F05002700270027002EAC582757ACA5
%8100AC575757CD5757AB572DAC8127000500050005000500050005000500
%05000500050005000500050005000500002854F8050005000500050051AB
%5157ACAB8105AC577B57CD5757AB7C51AC81270005000500050005000500
%0500050005000500050005000500050005000500002854F8050005000500
%050051AB5158ACACAB5257CDABCD5158AB8257CDAB2E0027002800270028
%002700280027002800270028002700280027002800270028002854280027
%002800270028007CAB7CACACAB5257CDABCD577CAB827BCDAB2E00270028
%002700280027002800270028002700280027002800270028002700280028
%54280027002800270028007CAB7B82ABAC81277B810558AB8157CDAB5100
%270005002700050027000500270005002700050027000500270005002700
%050005055B0005000500270005000500AC8182ABAC812781822758AB827B
%CDAB51002700050027000500270005002700050027000500270005002700
%05002700050005055B0005000500270005000500ACCD7BACABCD51522758
%AB8281CDAB7C002700270027002700270027002700270027002700270027
%0027002700270027002700285A28002700270027002700052DCD81ACACCD
%5158517CABAC81ACAB820027002700270027002700270027002700270027
%002700270027002700270027002700285A28002700270027002700052D57
%AC57AC81AC81ACAB8181ACAB810005000500050005000500050005000500
%05000500050005000500050005000500050005005A280000050005000500
%0500007BAC81ACA5AC81ACABAC81ACAB8100050005000500050005000500
%0500050005000500050005000500050005000500050005005A2800000500
%0500050005000528AB8281A657AC7B82ABCDACAC00280027002800270028
%002700280027002800270028002700280027002800270028002700275453
%00280027002800270028002EABACACAC7BCD81A6ABCDACAC052800270028
%002700280027002800270028002700280027002800270028002700280027
%002754530028002700280027002800007BA558AB575151ABAC7BAC270000
%270005002700050005000500270005002700050027000500270005002700
%050027000500542F0000270005002700050027007BAB82AB575758ABAC81
%AC2700002700050027000500050005002700050027000500270005002700
%05002700050027000500542F00002700050027000500270527CD5182ACAC
%AB822DAC5100002700270027002800280505282800280527002800270027
%05280027002700270027002700052F5400270027002700270027000527CD
%5782ACACABA657AC57000027002700270028002805052828002805270028
%0027002705280027002700270027002700052F5400270027002700270027
%0000007BAC0082A55100A6810000050005000505280528002F05282F28F8
%280000002800050028280000050005000500050005F8532F000005000500
%050005000500007BAC0582AB5700AC810000050005000505280528002F05
%282F28F8280000002800050028280000050005000500050005F8532F0000
%050005000500050005280052AB522D520082AC2700280027002800272853
%2F2F285328285328282F0027282800280553002828270028002700280005
%2F5A0027002800270028002700280052CD5251580082AC2E002800270028
%002728532F2F285328285328282F00272828002805530028282700280027
%002800052F5A0027002800270028002700000500AC5758052DAB7C000500
%2700050027050000282953282F28282F282828F828290500052928002800
%05002700050027002F540500050027000500270005000500AC7B58272DAB
%820005002700050027050000282953282F28282F282828F8282905000529
%2800280005002700050027002F54050005002700050027000527000057AC
%572EABAC0527002700272828002F2828002728532F532F2F2F28282FF853
%28050053282728280027002700270027285A002700270027002700270027
%000057CD7B2EABAC2705002700272828002F2828002728532F532F2F2F28
%282FF85328050053282728280027002700270027285A0027002700270027
%00270000050027ABA681CD2D00000500050028282F28532F2F2828062F29
%532F532F282928005300002853002F2805000500050005F8282F05000500
%050005000500050005002DABAC81CD5100000500050028282F28532F2F28
%28062F29532F532F282928005300002853002F2805000500050005F8282F
%05000500050005000500052700280082ACCD570500280027002800270028
%282F2F5454542F545354535A54282F282F28002F54272F53002700282827
%00280028002800270028002700280027002800A6ABCD7B05002800270028
%00270028282F2F5454542F545354535A54282F282F28002F54272F530027
%002828270028002800280027002800270028000005000027A62D05000500
%270005002700050000F8000028062F2F5B5B542F5A2F2829282F00065B00
%532F270000282800050027000500270005002700050027000500002DAC51
%05000500270005002700050000F8000028062F2F5B5B542F5A2F2829282F
%00065B00532F270000282800050027000500270005002700050027270027
%0052510000270027002700270027272FFD042800270005285A5B5A537F29
%53285428285A28535A002705540027002700270027002700270027002700
%2700270058570000270027002700270027272FFD042800270005285A5B5A
%537F2953285428285A28535A002705540027002700270027002700270027
%002700000500002D5700050005000500050005002800050028282F295329
%28F8282F5A2F5A28542853005B05545428F8292F00F82F05000005000500
%0500050005000500050000517C0005000500050005000500280005002828
%2F29532928F8282F5A2F5A28542853005B05545428F8292F00F82F050000
%050005000500050005000528002700585105002800270028002700272853
%282E28280027052F2F5A2F2828545A532F5354285A2F545B280553530028
%2F2700280027002800270028002700280027007C57000028002700280027
%00272853282E28280027052F2F5A2F2828545A532F5354285A2F545B2805
%535300282F27002800270028002700280027000027000051510005002700
%050027000500050028282F2953292F2827002F53532854532F2F5A285A28
%5A5428F85A2800282F000500270005002700050027000500270000575800
%05002700050027000500050028282F2953292F2827002F53532854532F2F
%5A285A285A5428F85A2800282F0005002700050027000500270005270027
%007C2D05002700270027002700270027282906FD042853545A2F532F5453
%7F295A5453542F547F282754280054052728280027002700270027002700
%27002700825105002700270027002700270027282906FD042853545A2F53
%2F54537F295A5453542F547F282754280054052728280027002700270027
%002700000500057B510005000500050005000500050005282F282F282800
%28002F545A2F2F2F7F54542854285A542F055B00282F0005530005000500
%050005000500050005000581510005000500050005000500050005282F28
%2F28280028002F545A2F2F2F7F54542854285A542F055B00282F00055300
%050005000500050005000527002800822D28002700280027002800270028
%002805532F532F5453532828285A5A542F5454535453545A2F2F5A272953
%F853282F282700270028002700280027002805AC51060027002800270028
%00270028002805532F532F5453532828285A5A542F5454535453545A2F2F
%5A272953F853282F2827002700280027002800000500057B510027000500
%2700050027000500270005002F2F5429532F545354282F545A295A285A29
%542F53295AF854280529282F050027000500270005002700050027815100
%270005002700050027000500270005002F2F5429532F545354282F545A29
%5A285A29542F53295AF854280529282F0500270005002700050027270027
%00A62D050027002700270027002700270027000500282853535A53542F5A
%5454537F5B53FD04542F54542754282853282F0027002700270027002700
%27000500AC51000027002700270027002700270027000500282853535A53
%542F5A5454537F5B53FD04542F54542754282853282F0027002700270027
%002700000500058151000500050005000500050005000500050005050500
%2829542F542F5329542F54545B29542F532F530554F82F28530005000500
%050005000500050005000581510005000500050005000500050005000500
%050505002829542F542F5329542F54545B29542F532F530554F82F285300
%050005000500050005000528002700A65105002800270028002700280027
%00280027002F2F5328282854545A54542954547F545354542F7F2F535427
%53532F27002700280027002800270028002700AC57000028002700280027
%0028002700280027002F2F5328282854545A54542954547F545354542F7F
%2F53542753532F2700270028002700280027000027000581580005002700
%05002700050027000500270005F8282953292F00282F5A54542F53282854
%545353542F2F2F00542F2928050005002700050027000500270005815800
%0500050005002700050027000500270005F8282953292F00282F5A54542F
%53282854545353542F2F2F00542F29280500050027000500270005270027
%008251050027005227270027002700270027002700270028282F28542F27
%055A5A545354285B285A537F287F282F2F532F5300270027002700270027
%0027002700AC57000027005827050027002700270027002700270028282F
%28542F27055A5A545354285B285A537F287F282F2F532F53002700270027
%0027002700000500007B7B000500052D2700270500000500050005000500
%05F8272F53282F532F00285454295454285454542F542829532954050000
%050005000500050005000500007B7B000500275727005127000005000500
%0500050005F8272F53282F532F00285454295454285454542F5428295329
%54050000050005000500050005270028005857060027277C002751282D27
%0028002700280027002800282F7F2F2F2F7F53282F7F5453547F2F7F2F7F
%05542F5A53270028002700280027002800270028007C57060027277C0027
%572851280028002700280027002800282F7F2F2F2F7F53282F7F5453547F
%2F7F2F7F05542F5A532700280027002800270028000005002D0005002700
%515100275100580005002700050027000500270000285A532F06545A5428
%53547F292F5A542F28535454530005002700050027000500050005005100
%050027005751002D5705820005002700050027000500270000285A532F06
%545A542853547F292F5A542F285354545300050027000500270005000527
%00275728002700055758007C277C270500270027002700270027002E0000
%285454542928537F542F282F547F5B53285A545A28270027002700270027
%0027272700277B2800270000577C008227822D0500270027002700270027
%002E0000285454542928537F542F282F547F5B53285A545A282700270027
%002700270027270500007B2DFD0400822727572D57000005000005270005
%000500050653280000532F532F2F05545B5A537F2F7F062F545A5428F805
%000500050005000500572700007B2DFD0400A62D277B5181000005000027
%270005000500050653280000532F532F2F05545B5A537F2F7F062F545A54
%28F8050005000500050005005782000051A600270028A527577C7B520028
%00052D520027002800270027052F2F2F002F5453535A2828547F54545B28
%547F545B0027002700280027002800052782000051AC00270028AC275782
%81580028000551580027002800270027052F2F2F002F5453535A2828547F
%54545B28547F545B00270027002800270028002700577C0027A52D000027
%AC00825782000500002D5700050005002700050027052828530528545328
%542F28002F5454287F545A540500270005002700050005272757820027AB
%5100002DAC05827BAC00050000517B000500050027000500270528285305
%28545328542F28002F5454287F545A540500270005002700050005272D51
%AB52008257050058812E81A62D05000027820005002E0027002700270028
%292F285329282F5A0528545A547F28547F7F545A00270027002700270027
%002E7B52AB5200AC7B05007C8152ABAC510000002DAC0505005200270027
%00270028292F285329282F5A0528545A547F28547F7F545A002700270027
%00270027002E81278281002DAC00007B572DAC8105000000A62700002D2D
%00000500050005F805285328282929297F2800285429285A7F545A290000
%05000500050005000500825182810551AC00007B7B51AC8127000005AC27
%0000515100000500050005F805285328282929297F2800285429285A7F54
%5A29000005000500050005000500828251CD5727AB2800AC5182AC580028
%0082570600275728002700280027002800270053532828542F7F54280053
%547F7F535A5300270028002700280027510657AC57CD572EAB2E00AC57A6
%CD7C002800AC8106002E8128002700280027002800270053532828542F7F
%54280053547F7F535A5300270028002700280027510651AB5781AC27AC2D
%27815181AC05000058AB2700277B27002700050027000500270005F8282F
%2F05532F54545A545A547F287F05050005002700050005057B0027AB8181
%AC27AC2D05A55781AC2700007CAB27002781270027000500270005002700
%05F8282F2F05532F54545A545A547F287F05050005002700050005057B00
%277CAB82AB82817C05AC51CD7B050027AB5800278152007C272700270027
%0027002700270027285A282F53542953547F28535B270027002700270027
%002757520082AC82AB82817C27AC57CD8127002DAB7C0027A55800822727
%002700270027002700270027285A282F53542953547F28535B2700270027
%00270027002757580000AC81AC818281518182AB51000581A60027815700
%822D0000050005000500050005000500000054542F2F54287F5400545400
%0500050005000500002D51812700AC81AC818281578182AB57000581AC00
%27AB7B00AC2D0000050005000500050005000500000054542F2F54287F54
%005454000500050005000500002D51812D2857AC81CD7BAC81ACA5AC2701
%57CD2728AC8227AC2D000028002700280027002800270028002700537F54
%28545B2F00852F05002800270028002700288182812857CDABCD81ACABAC
%ACAC270057CD2728AC8227AC510000280027002800270028002700280027
%00537F5428545B2F00852F05002800270028002700288182817B2781ACAB
%AC57CD81AC810005CD5727A5A62DAC510000572705000500270005002700
%0500270005F828545B0528282F5B2800050027000500270005007C575781
%27A5ACABAC7BACABAC810027CD5727ABAC57AC5700007B27000005002700
%050027000500270005F828545B0528282F5B280005002700050027000500
%7C5757AC5758ACACAB5851ACAB7C00A68127A5AC57CD7B00007C57050027
%002700270027002700270027002700272F7F54545B5A0027002700270027
%0027000505AC2DA67B7CACACAB7C57ACAB7C00AC812EABAC81CD81000082
%57050027002700270027002700270027002700272F7F54545B5A00270027
%002700270027000505AC2D05AC5182ABAC812781AC2751AB2D7BAC57AC81
%00007B57000005000500050005000500050005000500050000065B5B7F28
%000005000500050005002D2D0081AC27AC57A6ABAC812781AC2D57AB5181
%AC81AC810500817B00000500050005000500050005000500050005000006
%5B5B7F28000005000500050005002D2D0081AC7C2DAC57ACABCD7B528152
%AC7C7BCD7BCD812805A68128000500280027002800270028002700280027
%00280005005A5327002800270028002700282782007CAC8251CD81ACABCD
%817C8158AC8281CD81CDA52827AC81280005002800270028002700280027
%0028002700280005005A5327002800270028002700282782007CAC815757
%A681ACABAC81577BA657AC7BAC810027AC810000052D2D00270005002700
%05002700050027000500270000052F000500270005002700050000572D27
%A681577BAC81ACABAC818181AC7BAC81AC81272DCD810500055151002700
%0500270005002700050027000500270000052F0005002700050027000500
%00572D27AC588158AB82ABAC818257AC57AC81AC812757CD8127002D7B7C
%002700270027002700270027002700270027002700282928002700270027
%00270027007C81058182A57CABACACACA5AC7BAC7BACABAC812E57CD8127
%002D81820027002700270027002700270027002700270027002829280027
%0027002700270027007C81058157577B818182ABAC578251A681AC812757
%CD8100007B81510027000500050005000500050005000500050005000500
%2F0005000500050005000500002DAC5151817C818181A6ABAC81A657ACA5
%AC812D7BCD81050082AB5700270005000500050005000500050005000500
%050005002F0005000500050005000500002DAC512D
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator CC 22.0 (Windows)"
   xmp:CreateDate="2019-09-19T20:25:03+03:00"
   xmp:ModifyDate="2019-09-19T20:25:05+03:00"
   xmp:MetadataDate="2019-09-19T21:24:42+03:00"
   xmpMM:RenditionClass="proof:pdf"
   xmpMM:OriginalDocumentID="uuid:65E6390686CF11DBA6E2D887CEACB407"
   xmpMM:DocumentID="xmp.did:06ceed1d-c1ba-e74d-87fe-1bb6da318f4b"
   xmpMM:InstanceID="xmp.iid:20f0f5e7-2183-1547-9c48-8f4dbf639cae"
   illustrator:StartupProfile="Web"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Vector seamless tropical pattern. Summer exotic plants ornament. Jungle hand drawn texture. Nature illustration. Botanical background.</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Fox</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Vector seamless tropical pattern. Summer exotic plants ornament. Jungle hand drawn texture. Nature illustration. Botanical background.</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>vector</rdf:li>
     <rdf:li>seamless</rdf:li>
     <rdf:li>pattern</rdf:li>
     <rdf:li>leaf</rdf:li>
     <rdf:li>leaves</rdf:li>
     <rdf:li>summer</rdf:li>
     <rdf:li>nature</rdf:li>
     <rdf:li>palm</rdf:li>
     <rdf:li>plant</rdf:li>
     <rdf:li>jungle</rdf:li>
     <rdf:li>exotic</rdf:li>
     <rdf:li>tropical</rdf:li>
     <rdf:li>floral</rdf:li>
     <rdf:li>botanical</rdf:li>
     <rdf:li>ornament</rdf:li>
     <rdf:li>repeatable</rdf:li>
     <rdf:li>texture</rdf:li>
     <rdf:li>textile</rdf:li>
     <rdf:li>fabric</rdf:li>
     <rdf:li>background</rdf:li>
     <rdf:li>wildlife</rdf:li>
     <rdf:li>natural</rdf:li>
     <rdf:li>beautiful</rdf:li>
     <rdf:li>ecology</rdf:li>
     <rdf:li>color</rdf:li>
     <rdf:li>colorful</rdf:li>
     <rdf:li>bright</rdf:li>
     <rdf:li>design</rdf:li>
     <rdf:li>event</rdf:li>
     <rdf:li>art</rdf:li>
     <rdf:li>graphic</rdf:li>
     <rdf:li>vacation</rdf:li>
     <rdf:li>travel</rdf:li>
     <rdf:li>hot</rdf:li>
     <rdf:li>tree</rdf:li>
     <rdf:li>south</rdf:li>
     <rdf:li>modern</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>cartoon</rdf:li>
     <rdf:li>cute</rdf:li>
     <rdf:li>silhouette</rdf:li>
     <rdf:li>hand</rdf:li>
     <rdf:li>drawn</rdf:li>
     <rdf:li>flora</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="256"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AP7aG5iSX9NkveaeiaJ5u&#xA;KEr69k5JsNUUj9qOtS/Vf3n8mcZOQNeH9MvXj8pfx4/j3dfT3uKyl7jjZ3E2qDn6MZ0/zKF+H92q&#xA;kx3qhfsrwfmePRW3NY6ZrhH1AQ6+qH6Y/o94/pKlti1noWoXmr6nq5vkigtbRtQashWERr6NrBx5&#xA;GSe5kPrSFamhUU3DC/JxZoiEIcO8jXLe95HujEekfHzCqgguLjUrXXNftTPrFWbyz5YRhS1UCnrT&#xA;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"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:0d314171-a799-425a-a3da-3e180b1c3276"
    stRef:documentID="xmp.did:1838e25b-e1df-d541-a159-724625e79a9a"
    stRef:originalDocumentID="uuid:65E6390686CF11DBA6E2D887CEACB407"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:89f3b3a8-1ecd-584e-a9f4-212a848200e8"
      stEvt:when="2019-09-19T19:46:34+03:00"
      stEvt:softwareAgent="Adobe Illustrator CC 22.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:06ceed1d-c1ba-e74d-87fe-1bb6da318f4b"
      stEvt:when="2019-09-19T20:25:05+03:00"
      stEvt:softwareAgent="Adobe Illustrator CC 22.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:20f0f5e7-2183-1547-9c48-8f4dbf639cae"
      stEvt:when="2019-09-19T21:24:42+03:00"
      stEvt:softwareAgent="Adobe Bridge CC 2018 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="2000.000000"
    stDim:h="2000.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=184 G=251 B=60"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="184"
         xmpG:green="251"
         xmpG:blue="60"/>
        <rdf:li
         xmpG:swatchName="R=120 G=152 B=251"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="120"
         xmpG:green="152"
         xmpG:blue="251"/>
        <rdf:li
         xmpG:swatchName="R=0 G=20 B=55"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="0"
         xmpG:green="20"
         xmpG:blue="55"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Grays"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                            
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
2000 2000 mo
0 2000 li
0 0 li
2000 0 li
2000 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 .0784314 .215686 rgb
f
1485.43 492.28 mo
1485.43 492.267 1485.44 492.254 1485.44 492.242 cv
1489.53 495.097 1493.52 498.054 1497.48 501.056 cv
1497.54 501.188 1497.6 501.321 1497.66 501.453 cv
1493.45 498.538 1489.32 495.542 1485.43 492.28 cv
cp
1827.35 564.445 mo
1797.39 609.802 1785.76 662.108 1770.06 713.331 cv
1762.11 739.273 1753.95 764.744 1743.94 789.972 cv
1734.49 813.812 1722.78 835.525 1711.3 858.15 cv
1710.31 854.87 1709.34 851.586 1708.33 848.311 cv
1709.4 846.328 1709.53 843.806 1708.73 841.635 cv
1709.85 841.271 1710.95 840.586 1711.94 839.398 cv
1744.8 800.062 1752.27 751.404 1762.89 702.95 cv
1769.18 674.239 1776.04 645.616 1783.65 617.225 cv
1791.18 589.132 1798.33 560.467 1813.61 535.413 cv
1814.71 533.613 1812.03 531.411 1810.63 533.107 cv
1794.99 552.033 1788.15 575.64 1780.97 598.705 cv
1772.24 626.776 1763.97 654.979 1756.52 683.418 cv
1743.76 732.135 1734.46 787.357 1701.85 827.457 cv
1699.14 819.013 1696.37 810.589 1693.5 802.202 cv
1693.92 802.024 1694.34 801.812 1694.75 801.523 cv
1714.05 788.146 1718.12 756.14 1723.4 734.877 cv
1730.33 706.918 1734.95 678.602 1740.05 650.274 cv
1744.99 622.854 1749.78 595.214 1756.36 568.138 cv
1763.29 539.583 1772.8 512.169 1782.9 484.612 cv
1783.46 483.067 1781 482.047 1780.24 483.494 cv
1755.34 530.904 1741 585.631 1728.22 637.371 cv
1721.71 663.705 1714.7 689.899 1708.16 716.219 cv
1704.85 729.542 1701.56 742.891 1697.72 756.074 cv
1694.98 765.504 1690.31 774.51 1687.05 783.796 cv
1684.4 776.407 1681.7 769.04 1678.9 761.717 cv
1679.26 761.547 1679.63 761.339 1679.99 761.085 cv
1699.33 747.539 1700.15 715.087 1703.12 693.743 cv
1706.84 667.025 1708.98 640.193 1711.46 613.343 cv
1716.59 557.752 1720.51 502.124 1738.18 448.805 cv
1738.94 446.522 1735.29 444.919 1734.25 447.146 cv
1712.58 493.505 1701.49 544.428 1695.46 595.02 cv
1692.37 620.978 1689.52 646.965 1686.41 672.923 cv
1684.71 687.175 1682.83 701.463 1680.21 715.581 cv
1678.41 725.268 1674.58 734.232 1671.71 743.459 cv
1668.08 734.493 1664.35 725.572 1660.45 716.744 cv
1661 715.357 1661.12 713.819 1660.71 712.405 cv
1662.86 712.427 1665 711.473 1666.25 709.257 cv
1677.38 689.583 1678.3 661.419 1679.07 639.235 cv
1679.91 615.027 1678.87 590.492 1677.58 566.314 cv
1674.87 515.567 1668.05 464.928 1663.3 414.331 cv
1663.11 412.379 1660.14 412.3 1660.19 414.331 cv
1661.44 463.351 1661.28 512.475 1663.61 561.448 cv
1664.76 585.827 1665.43 610.061 1663.4 634.4 cv
1662.39 646.524 1661.29 658.581 1659.48 670.624 cv
1657.87 681.305 1654.73 691.827 1654.08 702.606 cv
1648.68 690.992 1643.06 679.5 1637.08 668.2 cv
1638.95 669.865 1642.28 670.064 1643.94 668.068 cv
1650.7 659.983 1649.83 649.941 1650.82 639.697 cv
1651.95 628.083 1652.94 616.454 1653.79 604.816 cv
1655.55 580.746 1656.97 556.534 1656.57 532.394 cv
1655.74 483.217 1651.27 433.935 1646.41 384.997 cv
1646.26 383.486 1643.92 383.432 1644.01 384.997 cv
1646.68 433.464 1645.21 481.485 1642.33 529.895 cv
1640.94 553.2 1640.05 576.531 1638.49 599.828 cv
1637.7 611.468 1636.78 623.1 1635.72 634.718 cv
1634.83 644.452 1631.77 654.882 1634.93 664.117 cv
1629.12 653.296 1623.03 642.633 1616.61 632.157 cv
1618.45 632.223 1620.4 631.316 1621.45 629.806 cv
1627.51 621.051 1627.02 608.231 1627.69 597.852 cv
1628.43 586.392 1628.67 574.874 1628.79 563.395 cv
1629.06 539.606 1628.5 515.732 1626.3 492.039 cv
1621.94 445.01 1609.25 398.733 1596.4 353.4 cv
1596.07 352.216 1594.31 352.714 1594.57 353.906 cv
1604.68 401.162 1607.27 448.854 1609.93 496.951 cv
1611.2 519.919 1612.14 542.846 1611.86 565.856 cv
1611.73 577.356 1611.12 588.821 1610.73 600.311 cv
1610.48 607.854 1609.46 615.589 1610.82 622.882 cv
1607.4 617.514 1603.92 612.179 1600.32 606.916 cv
1598.22 603.848 1596.09 600.806 1593.92 597.788 cv
1596.57 596.972 1598.75 594.788 1598.79 591.201 cv
1599.03 570.983 1599.11 550.753 1596.58 530.654 cv
1594.11 511.011 1587.42 494.603 1578.9 476.901 cv
1560.15 437.917 1539.9 399.705 1519.77 361.416 cv
1519.04 360.023 1517.08 361.246 1517.7 362.629 cv
1534.12 399.365 1551.36 435.729 1567.82 472.435 cv
1583.67 507.777 1584.77 546.917 1584.44 585.084 cv
1580.68 580.196 1576.85 575.361 1572.91 570.623 cv
1574.09 570.018 1575.01 568.912 1575.25 567.19 cv
1581.02 526.614 1556.54 486.486 1534.11 454.763 cv
1522.78 438.749 1510.32 423.543 1496.84 409.296 cv
1481.85 393.446 1463.85 378.781 1458.81 356.516 cv
1458.5 355.188 1456.53 355.758 1456.78 357.075 cv
1459.84 372.985 1469.28 385.272 1479.88 397.078 cv
1493.84 412.622 1507.39 428.15 1519.37 445.332 cv
1544 480.677 1562.48 517.214 1564.17 560.404 cv
1559.18 554.753 1554.07 549.213 1548.82 543.822 cv
1549.42 543.059 1549.73 542.043 1549.46 540.832 cv
1531.45 459.799 1459.41 406.518 1401.53 353.417 cv
1399.71 351.755 1397.2 354.285 1398.84 356.106 cv
1449.98 413.068 1520.16 458.102 1540.79 535.745 cv
1539.1 534.11 1537.39 532.5 1535.66 530.912 cv
1532.47 527.889 1529.26 524.895 1525.97 521.986 cv
1527.51 521.707 1528.97 520.28 1528.42 518.5 cv
1517.47 483.27 1488.9 454.021 1461.06 431.227 cv
1427.2 403.505 1389.12 381.447 1355.28 353.693 cv
1353.61 352.327 1351.21 354.628 1352.87 356.101 cv
1384.08 383.765 1420.07 404.905 1452.55 430.923 cv
1483.21 455.48 1506.45 483.226 1522.52 518.968 cv
1516.35 513.638 1510.04 508.479 1503.55 503.535 cv
1503.59 503.193 1503.57 502.821 1503.39 502.404 cv
1471.91 426.175 1383.63 407.357 1322.46 363.106 cv
1320.93 362 1319.53 364.503 1320.99 365.613 cv
1378.1 409.14 1463.41 428.556 1496.12 498.02 cv
1492.43 495.343 1488.71 492.707 1484.91 490.163 cv
1484.97 489.563 1484.82 488.911 1484.39 488.249 cv
1465.67 459.453 1435.73 441.645 1405.83 426.244 cv
1367.1 406.299 1328.25 386.581 1289.42 366.834 cv
1288.45 366.341 1287.59 367.768 1288.56 368.304 cv
1323.82 387.922 1359.22 407.302 1394.46 426.978 cv
1418.82 440.586 1444.34 453.481 1463.89 473.225 cv
1440.39 458.727 1414.62 447.483 1388.36 439.527 cv
1371.28 434.354 1353.94 431.055 1336.33 428.341 cv
1316.84 425.337 1296.14 420.872 1285.71 402.18 cv
1284.89 400.702 1282.73 402.002 1283.46 403.494 cv
1298.71 434.704 1341.07 431.736 1370.03 438.937 cv
1404.28 447.455 1435.61 461.817 1465.32 480.14 cv
1432.59 464.086 1397.37 452.22 1362.03 444.314 cv
1323.51 435.696 1276.38 438.442 1243.65 413.683 cv
1242.04 412.458 1239.88 415.22 1241.47 416.513 cv
1271.65 441.142 1312.87 439.728 1349.27 447.039 cv
1395.79 456.378 1438.98 473.281 1481.08 494.866 cv
1482.13 495.408 1483.14 495.266 1483.92 494.78 cv
1493.01 503.377 1504.06 509.988 1513.87 517.775 cv
1528.38 529.286 1540.89 542.318 1553.73 555.509 cv
1514.78 531.701 1471.34 511.387 1428.2 498.357 cv
1404.88 491.316 1380.84 488.104 1356.62 486.166 cv
1328.92 483.95 1301.37 482.548 1275.43 471.628 cv
1274.09 471.061 1273.08 473.418 1274.43 474.007 cv
1295 482.961 1316.86 486.109 1338.99 488.684 cv
1366.6 491.896 1392.81 496.522 1419.46 504.516 cv
1471.66 520.17 1516.55 547.88 1564.65 572.328 cv
1566.59 573.312 1568.38 572.808 1569.54 571.672 cv
1574.64 577.996 1579.58 584.47 1584.38 591.051 cv
1584.38 591.101 1584.38 591.151 1584.38 591.201 cv
1584.33 594.846 1586.54 597.038 1589.23 597.821 cv
1590.47 599.579 1591.67 601.367 1592.89 603.141 cv
1570.65 587.49 1544.45 575.618 1520.68 562.538 cv
1495.56 548.717 1471.01 539.212 1442.71 534.223 cv
1413.64 529.098 1384.52 524.253 1355.44 519.186 cv
1327.74 514.357 1296.88 512.316 1271.84 498.571 cv
1269.97 497.548 1268.35 500.321 1270.17 501.424 cv
1292.27 514.803 1318.78 518.335 1343.64 523.76 cv
1373.29 530.232 1403.18 536.071 1432.65 543.338 cv
1461.29 550.399 1487.47 560.942 1513.29 575.182 cv
1538.46 589.066 1563.4 605.976 1590.02 616.861 cv
1590.77 617.167 1591.46 617.29 1592.12 617.333 cv
1598.03 623.063 1604.33 628.489 1610.13 634.33 cv
1595.72 632.553 1585.28 624.942 1572.47 617.988 cv
1560.61 611.548 1548.48 605.547 1536.08 600.187 cv
1512.2 589.856 1487.61 580.677 1462.47 573.886 cv
1409.86 559.671 1356.56 548.203 1303.5 535.827 cv
1301.88 535.447 1301.19 537.902 1302.81 538.337 cv
1358.46 553.241 1414.02 567.331 1468.23 587 cv
1495.3 596.823 1522 607.28 1547.91 619.897 cv
1560.74 626.145 1572.9 633.457 1585.46 640.172 cv
1594.71 645.116 1605.84 649.757 1615.15 643.085 cv
1615.92 642.536 1616.42 641.848 1616.77 641.122 cv
1623.57 652.847 1629.98 664.824 1636.08 676.961 cv
1635.79 676.784 1635.5 676.614 1635.16 676.477 cv
1582.22 654.942 1534.21 623.339 1480.88 602.393 cv
1427.53 581.442 1371.74 568.225 1316.62 552.906 cv
1315.12 552.491 1314.5 554.778 1315.98 555.223 cv
1370.86 571.713 1425.18 590.328 1478.16 612.256 cv
1531.03 634.141 1578.81 666.92 1632.18 687.29 cv
1636.09 688.78 1638.64 685.873 1638.88 682.623 cv
1642.72 690.423 1646.42 698.292 1650 706.209 cv
1598.31 689.298 1554.93 657.285 1505.81 634.425 cv
1454.06 610.34 1398.78 592.548 1345.38 572.462 cv
1343.75 571.849 1342.56 574.609 1344.18 575.298 cv
1398.68 598.496 1453.4 620.911 1506.11 648.042 cv
1553.67 672.525 1599.54 709.889 1652.88 720.797 cv
1654.17 721.06 1655.32 720.958 1656.35 720.64 cv
1660.41 730.089 1664.29 739.599 1668.02 749.141 cv
1619.55 723.231 1568.23 701.427 1518.15 678.92 cv
1470.92 657.693 1424.56 631.246 1372.97 622.169 cv
1371.04 621.829 1370.17 624.714 1372.15 625.162 cv
1423.55 636.83 1471.09 665.768 1517.18 690.496 cv
1565.53 716.441 1614.09 743.835 1664.25 766.149 cv
1667.97 767.804 1671.51 766.802 1673.92 764.656 cv
1675.32 768.431 1676.71 772.207 1678.06 775.986 cv
1680.18 781.93 1682.22 787.903 1684.27 793.875 cv
1684.22 794.184 1684.26 794.493 1684.26 794.803 cv
1672.57 790.401 1661.2 786.538 1649.83 780.688 cv
1638.26 774.735 1626.76 768.653 1615.31 762.481 cv
1590.98 749.362 1567.04 735.549 1542.86 722.157 cv
1495.19 695.755 1447.72 668.977 1400.04 642.605 cv
1398.74 641.887 1397.6 643.838 1398.88 644.594 cv
1447.9 673.574 1495.56 704.734 1544.41 733.998 cv
1568.11 748.194 1592.16 761.853 1616.35 775.202 cv
1629.03 782.202 1641.74 789.221 1654.65 795.795 cv
1664.54 800.828 1675.57 806.822 1686.91 805.946 cv
1687.41 805.908 1687.85 805.802 1688.28 805.667 cv
1691.72 815.982 1695.04 826.344 1698.31 836.725 cv
1674.35 834.732 1653.94 821.723 1634.31 808.529 cv
1612.43 793.825 1590.83 778.741 1569.02 763.934 cv
1524.71 733.846 1480.9 703.039 1436.51 673.07 cv
1434.88 671.965 1433.51 674.522 1435 675.665 cv
1480.37 710.411 1526.56 744.101 1571.81 779.011 cv
1592.97 795.335 1614.19 812.056 1636.24 827.143 cv
1656.11 840.729 1677.76 850.943 1702.16 851.687 cv
1702.44 851.695 1702.69 851.65 1702.96 851.632 cv
1704.46 856.526 1705.89 861.441 1707.36 866.345 cv
1706.73 868.546 1706.97 870.752 1707.76 872.718 cv
1701.21 871.11 1694.47 869.837 1688.24 867.258 cv
1676.37 862.345 1665.23 855.737 1654.22 849.169 cv
1630.97 835.3 1608.07 820.886 1584.67 807.277 cv
1537.31 779.739 1489.4 752.897 1439.74 729.713 cv
1437.55 728.692 1435.62 731.844 1437.82 732.998 cv
1488.48 759.616 1538.91 786.5 1587.44 816.896 cv
1610.88 831.572 1633.54 847.238 1656.51 862.604 cv
1669.86 871.53 1691.46 885.923 1709.99 886.747 cv
1711.06 887.586 1712.41 888.136 1713.82 888.318 cv
1717.08 899.555 1720.28 910.809 1723.44 922.073 cv
1717.55 917.719 1711.05 913.94 1705.24 909.965 cv
1693.83 902.166 1682.31 894.534 1670.76 886.956 cv
1648.3 872.228 1624.55 859.844 1601.26 846.521 cv
1558.14 821.852 1516.67 790.169 1468.26 776.572 cv
1466.75 776.15 1466.17 778.386 1467.62 778.889 cv
1491.89 787.34 1513.82 800.482 1535.42 814.195 cv
1557.36 828.124 1579.86 841.499 1601 856.626 cv
1622.24 871.827 1642.89 887.791 1664.51 902.462 cv
1675.28 909.769 1686.01 917.144 1696.75 924.488 cv
1706.53 931.174 1715.99 939.422 1727.26 943.298 cv
1728.03 943.563 1728.75 943.67 1729.43 943.684 cv
1732.35 954.283 1735.24 964.885 1738.09 975.487 cv
1756.86 1045.21 1772.77 1115.76 1785.01 1186.93 cv
1798.81 1267.14 1805.42 1348.21 1809.78 1429.38 cv
1810.25 1438.14 1823.55 1438.28 1823.5 1429.38 cv
1822.55 1281.66 1786.44 1134.91 1748.65 993.01 cv
1744.51 977.476 1740.35 961.823 1736.12 946.132 cv
1737.29 946.099 1738.51 945.846 1739.74 945.259 cv
1750.19 940.26 1754.42 926.009 1758.78 915.96 cv
1763.83 904.328 1768.1 892.459 1771.69 880.297 cv
1779.25 854.691 1783.87 828.485 1787.99 802.144 cv
1796.32 748.878 1804.09 697.063 1822.56 646.206 cv
1823.49 643.669 1819.56 642.115 1818.26 644.393 cv
1792.91 688.876 1783.46 741.981 1773 791.45 cv
1767.65 816.77 1762.06 842.151 1754.64 866.958 cv
1751.06 878.901 1746.95 890.69 1742.29 902.257 cv
1739.37 909.521 1733.81 917.717 1730.62 925.909 cv
1727.03 912.773 1723.36 899.622 1719.59 886.476 cv
1719.88 886.199 1720.16 885.904 1720.42 885.56 cv
1722.2 884.92 1723.31 883.187 1723.44 881.409 cv
1726.67 876.75 1729.48 871.879 1731.82 866.654 cv
1732.21 865.784 1732.62 864.879 1733.05 863.96 cv
1760.94 824.989 1770.63 771.902 1779.74 726.543 cv
1790.8 671.542 1804.23 616.31 1830.89 566.518 cv
1832.14 564.176 1828.8 562.246 1827.35 564.445 cv
cp
.470588 .596078 .984314 rgb
f
1121.35 1159.52 mo
1116.59 1152.97 1110.17 1146.93 1105.85 1141.2 cv
1097.47 1130.11 1089.52 1118.7 1081.86 1107.1 cv
1066.05 1083.13 1051.33 1058.67 1036.59 1034.04 cv
1015.39 998.626 991.478 962.31 979.642 922.502 cv
982.427 926.831 985.254 931.149 988.171 935.462 cv
1004.36 959.4 1021.25 982.802 1035.48 1008 cv
1048.35 1030.78 1058.99 1054.82 1072.89 1077.01 cv
1079.56 1087.65 1086.84 1097.93 1094.98 1107.5 cv
1102.74 1116.61 1111.74 1127.63 1123.28 1131.62 cv
1123.7 1131.76 1124.12 1131.85 1124.53 1131.9 cv
1123.56 1141.11 1122.48 1150.31 1121.35 1159.52 cv
cp
1133.76 1354.29 mo
1144.73 1347.42 1154.57 1339.13 1164.6 1330.97 cv
1170.61 1326.08 1176.58 1321.15 1182.53 1316.19 cv
1182.02 1316.84 1181.5 1317.48 1180.99 1318.13 cv
1162.29 1341.97 1144.41 1366.51 1127.17 1391.42 cv
1119.45 1402.57 1112.44 1414.41 1103.15 1424.37 cv
1099.19 1428.62 1093.63 1432.08 1088.77 1435.95 cv
1091.19 1416.56 1093.95 1397.22 1096.75 1377.94 cv
1097 1376.26 1097.27 1374.56 1097.52 1372.87 cv
1098.1 1372.93 1098.72 1372.92 1099.36 1372.81 cv
1111.28 1370.81 1123.6 1360.67 1133.76 1354.29 cv
cp
1104.27 985.934 mo
1110.96 994.731 1118.88 1002.59 1128.37 1007.07 cv
1129.33 1007.52 1130.27 1007.72 1131.18 1007.75 cv
1131.29 1018.7 1131.17 1029.64 1130.89 1040.58 cv
1125.1 1021.63 1113.97 1003.16 1104.27 985.934 cv
cp
1128.52 974.972 mo
1129.09 975.076 1129.66 975.032 1130.18 974.876 cv
1130.46 980.334 1130.67 985.789 1130.84 991.243 cv
1124.44 983.932 1118.26 976.824 1112.48 969.257 cv
1112.44 968.349 1112.25 967.406 1111.83 966.449 cv
1111.52 965.728 1111.21 965.006 1110.89 964.286 cv
1115.92 969.69 1121.72 973.74 1128.52 974.972 cv
cp
1016.1 783.079 mo
1014.87 780.341 1013.62 777.608 1012.4 774.87 cv
1013.79 777.014 1015.2 779.095 1016.61 781.209 cv
1016.23 781.723 1016.03 782.355 1016.1 783.079 cv
cp
1393.36 958.471 mo
1349.93 990.692 1297.45 1006.66 1253.95 1038.5 cv
1229.83 1056.15 1208.9 1078.28 1187.32 1098.87 cv
1176 1109.67 1164.32 1120.75 1154.2 1132.69 cv
1146.43 1141.84 1137.75 1150.68 1130.24 1160.21 cv
1131.52 1149.58 1132.69 1138.94 1133.72 1128.29 cv
1135.56 1128.72 1137.56 1128.54 1139.44 1127.49 cv
1151.36 1120.81 1161.1 1109.92 1170.99 1100.61 cv
1181.7 1090.52 1192.47 1080.49 1203.28 1070.5 cv
1225.47 1050 1248.83 1030.6 1271.58 1010.66 cv
1292.59 992.251 1312.06 973.171 1330.48 952.136 cv
1348.22 931.876 1366.21 913.948 1381.03 891.328 cv
1382.11 889.689 1379.56 887.66 1378.28 889.205 cv
1360.73 910.39 1339.63 929.974 1317.05 945.571 cv
1294.36 961.233 1272.54 976.04 1251.76 994.296 cv
1230.16 1013.27 1210.36 1033.57 1189.66 1053.42 cv
1179.04 1063.6 1168.49 1073.85 1157.96 1084.11 cv
1150.64 1091.24 1142.48 1098.31 1135.66 1106.23 cv
1136.16 1099.72 1136.61 1093.2 1136.99 1086.68 cv
1137.78 1086.57 1138.56 1086.24 1139.21 1085.59 cv
1149.06 1076 1157.28 1065.64 1168.07 1057.03 cv
1179.29 1048.08 1188.85 1038.01 1198.61 1027.53 cv
1217.07 1007.7 1235.78 988.097 1254.75 968.739 cv
1272.37 950.747 1292.09 933.171 1306.71 912.575 cv
1315.46 900.251 1323.73 888.451 1334.28 877.498 cv
1344 867.398 1353.62 857.356 1362.68 846.654 cv
1364.29 844.75 1361.9 842.473 1359.99 843.963 cv
1337.69 861.351 1318.24 881.323 1295 897.532 cv
1273.04 912.851 1254.86 934.704 1236.86 954.341 cv
1218.53 974.34 1200.42 994.54 1182.53 1014.94 cv
1174.22 1024.42 1166.46 1033.62 1159.78 1044.33 cv
1153.16 1054.92 1145.3 1064.12 1137.68 1073.77 cv
1137.68 1073.74 1137.69 1073.72 1137.69 1073.69 cv
1137.89 1069.05 1138.03 1064.4 1138.13 1059.75 cv
1138.52 1059.51 1138.91 1059.21 1139.25 1058.81 cv
1149.47 1046.81 1157.4 1033.24 1169.26 1022.66 cv
1179.93 1013.14 1188.66 1003.12 1197.61 991.95 cv
1216.71 968.092 1236.6 944.942 1256.59 921.833 cv
1273.99 901.718 1292.3 882.059 1308.47 860.93 cv
1325.05 839.264 1342.31 816.046 1354.67 791.693 cv
1355.68 789.689 1352.84 787.998 1351.64 789.925 cv
1344.01 802.175 1336.1 814.417 1326.95 825.598 cv
1318.09 836.415 1307.34 845.433 1297.23 855.028 cv
1277.13 874.112 1256.36 892.618 1237.4 912.86 cv
1217.63 933.969 1199.31 956.436 1181.34 979.072 cv
1172.37 990.366 1164.77 1001.3 1158.18 1014.13 cv
1152.79 1024.62 1145.34 1033.53 1138.22 1042.75 cv
1138.18 1034.74 1138.01 1026.72 1137.7 1018.7 cv
1138.22 1018.47 1138.73 1018.11 1139.21 1017.62 cv
1148.23 1008.41 1154.63 997.067 1162.73 987.092 cv
1171.86 975.844 1181.12 966.083 1189.3 953.96 cv
1205.46 930.018 1221.67 906.047 1236.89 881.491 cv
1265.02 836.105 1287.24 787.197 1323.73 747.457 cv
1324.82 746.271 1323.13 744.577 1321.96 745.687 cv
1284.49 781.056 1253.22 822.944 1224.58 865.695 cv
1208.94 889.024 1193.64 912.572 1177.98 935.887 cv
1170.15 947.545 1162.06 958.631 1156.31 971.454 cv
1151.46 982.274 1144.06 991.658 1137.75 1001.66 cv
1137.77 1000.43 1137.4 999.137 1136.56 997.902 cv
1136.14 991.684 1135.62 985.471 1135.06 979.263 cv
1135.15 979.242 1135.24 979.231 1135.33 979.196 cv
1136.45 978.747 1137.49 978.188 1138.44 977.507 cv
1139.59 977.839 1140.94 977.552 1141.76 976.311 cv
1155.45 955.756 1159.78 932.85 1165.1 909.153 cv
1170.74 884.065 1178.08 859.532 1187.24 835.503 cv
1196.48 811.263 1207.42 787.73 1218.02 764.071 cv
1228.51 740.673 1238.67 716.387 1250.2 693.545 cv
1250.97 692.002 1248.73 690.656 1247.86 692.181 cv
1241.73 702.984 1234.17 713.011 1227.91 723.824 cv
1221.27 735.295 1214.89 746.895 1208.53 758.524 cv
1196.7 780.162 1186.44 802.646 1177.38 825.573 cv
1158.6 873.078 1149.51 922.841 1136.96 972.078 cv
1136.91 972.129 1136.85 972.142 1136.79 972.2 cv
1136.15 972.914 1135.4 973.503 1134.56 973.957 cv
1133.42 962.271 1132.07 950.611 1130.44 939.008 cv
1131.33 940.619 1133.43 941.423 1134.98 939.833 cv
1149.08 925.295 1151.94 900.436 1158.06 881.572 cv
1165.29 859.267 1171.63 836.676 1178.14 814.144 cv
1191.46 767.992 1201.43 720.402 1220.38 676.194 cv
1220.85 675.098 1219.28 674.115 1218.73 675.234 cv
1198.27 717.022 1179.2 758.804 1165.76 803.44 cv
1159.01 825.862 1152.18 848.365 1146.23 871.015 cv
1143.25 882.355 1139.97 893.589 1136.55 904.807 cv
1133.4 915.114 1129.45 924.437 1129.87 935.079 cv
1129.07 929.57 1128.23 924.072 1127.33 918.59 cv
1127.57 918.339 1127.75 918.031 1127.87 917.695 cv
1129.12 919.288 1131.84 918.811 1132.41 916.792 cv
1137.99 896.866 1136.28 875.26 1139.29 854.84 cv
1142.43 833.473 1146.86 812.271 1150.83 791.045 cv
1158.95 747.56 1161.56 703.628 1169.21 660.009 cv
1169.56 658.005 1166.53 657.12 1166.12 659.157 cv
1156.86 704.719 1142.86 748.658 1134.12 794.291 cv
1130.09 815.328 1125.73 836.344 1122.96 857.596 cv
1121.37 869.844 1119.58 882.904 1120.9 895.375 cv
1116.66 886.807 1111.48 878.519 1107.73 870.088 cv
1099.37 851.323 1096.43 830.853 1091.94 810.967 cv
1088.15 794.177 1082.3 778.254 1074.94 762.715 cv
1066.28 744.434 1055.46 729.124 1056.14 707.841 cv
1056.21 705.729 1053.18 705.853 1052.94 707.841 cv
1048.19 746.841 1069.54 780.421 1076.67 817.646 cv
1080.39 837.084 1083.19 856.325 1091.09 874.644 cv
1098.1 890.918 1108.42 910.276 1124.57 918.993 cv
1124.77 919.1 1124.96 919.159 1125.16 919.212 cv
1127.13 934.289 1128.52 949.341 1129.51 964.379 cv
1126.21 958.042 1121.35 952.468 1117.38 946.514 cv
1111.28 937.344 1106.3 927.466 1101.66 917.491 cv
1091.24 895.06 1082.09 871.947 1070.71 849.975 cv
1059.69 828.71 1047.35 808.026 1032.91 788.894 cv
1017.94 769.064 1001.9 751.328 992.347 728.011 cv
991.848 726.793 989.978 727.219 990.32 728.57 cv
994.287 744.307 1002.16 758.763 1010.9 772.527 cv
1009.56 771.894 1007.41 773.145 1008.04 774.858 cv
1024.04 818.271 1041.95 860.2 1061.71 902.065 cv
1062.95 904.837 1064.22 907.597 1065.55 910.335 cv
1069.5 918.985 1073.18 927.734 1076.98 936.419 cv
1071.56 926.567 1066.14 916.716 1060.72 906.864 cv
1048.3 884.28 1035.61 861.87 1022.83 839.5 cv
1010.14 817.29 996.421 795.771 985.943 772.393 cv
984.945 770.164 981.536 771.777 982.1 774.013 cv
988.136 797.904 994.763 822.002 1005.25 844.357 cv
1016.54 868.408 1029.02 891.66 1041.79 914.968 cv
1054.9 938.913 1068.01 962.858 1081.12 986.802 cv
1093.26 1008.97 1105.5 1035.66 1124.67 1052.74 cv
1126.48 1054.35 1128.75 1054.4 1130.46 1053.46 cv
1130.46 1053.62 1130.45 1053.77 1130.44 1053.93 cv
1130.28 1054.53 1130.25 1055.14 1130.35 1055.72 cv
1130.07 1062.53 1129.71 1069.33 1129.3 1076.13 cv
1123.73 1066.38 1116.12 1058.17 1109.62 1049.02 cv
1102.49 1038.97 1096.07 1028.44 1090.02 1017.71 cv
1078.13 996.635 1067.45 974.965 1053.88 954.89 cv
1039.53 933.662 1024.1 913.055 1006.85 894.082 cv
997.427 883.72 988.151 873.231 978.932 862.683 cv
968.245 850.455 955.33 834.521 963.956 817.521 cv
964.97 815.523 962.069 813.786 960.93 815.753 cv
949.155 836.08 966.115 859.082 977.506 875.543 cv
995.183 901.089 1014.88 925.454 1031.44 951.743 cv
1046.08 974.975 1057.18 1000.35 1070.27 1024.46 cv
1082.17 1046.37 1096.55 1075 1119.56 1086.93 cv
1122.92 1088.67 1126.48 1087.68 1128.65 1085.41 cv
1127.98 1094.99 1127.18 1104.56 1126.29 1114.14 cv
1120.26 1107.66 1112.74 1102.08 1106.97 1095.51 cv
1098.29 1085.64 1090.77 1074.84 1083.8 1063.71 cv
1069.88 1041.51 1057.62 1018.42 1044.38 995.828 cv
1024.43 961.799 997.619 932.111 974.423 900.215 cv
973.262 893.277 972.519 886.227 972.269 879.051 cv
972.173 876.349 968.14 876.339 968.063 879.051 cv
967.946 883.199 967.995 887.314 968.166 891.402 cv
960.591 880.481 953.521 869.25 947.397 857.435 cv
946.465 855.635 943.912 857.214 944.718 859.001 cv
952.101 875.359 960.329 890.815 969.339 905.913 cv
975.05 953.093 998.074 996.411 1020.68 1037.96 cv
1035.06 1064.39 1049.94 1090.94 1066.45 1116.11 cv
1074.92 1129.02 1083.78 1141.67 1093.15 1153.95 cv
1100.21 1163.21 1107.32 1176.27 1118.7 1180.19 cv
1117.59 1188.47 1116.41 1196.76 1115.21 1205.06 cv
1113.68 1202.45 1111.91 1199.94 1110.18 1197.12 cv
1106.73 1191.51 1104.31 1185.42 1100.8 1179.84 cv
1092.94 1167.37 1084.21 1155.33 1075.86 1143.17 cv
1059.56 1119.45 1043.27 1095.75 1027.23 1071.85 cv
1011.65 1048.63 996.242 1025.28 980.521 1002.16 cv
964.609 978.76 945.434 952.64 938.821 924.773 cv
938.388 922.952 935.233 923.293 935.478 925.226 cv
938.796 951.528 952.521 974.059 965.126 996.891 cv
979.815 1023.5 994.181 1050.24 1009.33 1076.6 cv
1024.04 1102.17 1039.81 1127.28 1055.88 1152 cv
1064.37 1165.06 1072.87 1178.23 1082.1 1190.77 cv
1086.57 1196.84 1092.01 1201.95 1096.64 1207.88 cv
1100.81 1213.22 1103.54 1217.57 1109.27 1221.28 cv
1110.39 1222.01 1111.55 1222.29 1112.67 1222.25 cv
1110.71 1235.19 1108.74 1248.12 1106.77 1261.04 cv
1102.82 1250.11 1095.79 1239.75 1090.42 1229.65 cv
1083.82 1217.24 1077.32 1204.77 1070.31 1192.6 cv
1056.31 1168.29 1038.27 1147.03 1022.87 1123.68 cv
991.831 1076.63 967.206 1026.84 945.319 975.004 cv
944.554 973.19 941.446 974.488 942.118 976.354 cv
960.85 1028.36 977.238 1083.31 1007.42 1130.04 cv
1022.17 1152.88 1040.01 1173.4 1053.85 1196.86 cv
1061.36 1209.59 1068.21 1222.7 1075.16 1235.75 cv
1081.74 1248.11 1087.36 1262.62 1096.7 1273.11 cv
1099.04 1275.74 1102.26 1275.72 1104.76 1274.27 cv
1103.01 1285.8 1101.27 1297.32 1099.54 1308.85 cv
1093.8 1300.96 1087.44 1293.57 1081.91 1285.37 cv
1074.22 1273.95 1067.58 1261.86 1061.21 1249.66 cv
1047.99 1224.33 1036.74 1197.89 1021.9 1173.43 cv
991.171 1122.78 949.424 1079.84 920.52 1027.82 cv
919.524 1026.03 916.39 1027.24 917.133 1029.25 cv
938.018 1085.57 977.115 1133.09 1006.35 1185.05 cv
1020.37 1209.96 1032.03 1236.06 1045.4 1261.31 cv
1057.79 1284.68 1072.99 1313.97 1096.61 1327.4 cv
1096.66 1327.43 1096.71 1327.44 1096.76 1327.47 cv
1095.24 1337.7 1093.75 1347.93 1092.26 1358.16 cv
1084.46 1335.41 1071.68 1314.91 1059.77 1294.04 cv
1045.22 1268.53 1032.05 1241.97 1015.67 1217.59 cv
983.255 1169.36 957.699 1117.18 928.784 1066.89 cv
927.766 1065.12 925.308 1066.67 926.104 1068.45 cv
950.197 1122.41 976.923 1174.98 1000.11 1229.37 cv
1011.01 1254.92 1025.49 1279.09 1039.17 1303.24 cv
1053.16 1327.94 1066.77 1353.22 1088.15 1372.45 cv
1088.73 1372.97 1089.39 1373.3 1090.06 1373.47 cv
1087.35 1392.45 1084.76 1411.45 1082.26 1430.46 cv
1080.7 1425.13 1078.86 1420 1077.48 1415.51 cv
1072.69 1399.96 1067.53 1384.52 1061.49 1369.41 cv
1049.58 1339.64 1036.06 1309.66 1018.31 1282.85 cv
987.448 1236.23 941.908 1195 892.901 1168.17 cv
891.086 1167.18 889.542 1169.84 891.282 1170.94 cv
915.68 1186.39 937.223 1204.31 955.67 1226.54 cv
974.279 1248.97 988.9 1273.55 1003.67 1298.56 cv
1019.72 1325.74 1033.09 1354.29 1044.69 1383.63 cv
1050.41 1398.09 1056 1412.58 1061.22 1427.22 cv
1065.2 1438.37 1068.65 1452.83 1078.46 1460.21 cv
1075.87 1481.05 1073.41 1501.91 1071.22 1522.84 cv
1065.23 1579.95 1064.06 1638.52 1071.86 1695.53 cv
1072.94 1703.39 1086.51 1701.61 1085.82 1693.64 cv
1081.34 1641.51 1079.95 1590 1080.8 1537.69 cv
1081.22 1511.93 1083.16 1486.19 1085.91 1460.52 cv
1106.66 1467.62 1132.51 1426.27 1140.38 1412.48 cv
1148.45 1398.37 1154.86 1383.49 1163.76 1369.83 cv
1173.16 1355.42 1183.38 1341.64 1193.94 1328.06 cv
1213.2 1303.28 1234.32 1278.58 1253.31 1252.58 cv
1264.96 1240.7 1276.32 1228.43 1287.68 1216.56 cv
1307.52 1195.85 1325.57 1174.1 1343.94 1152.16 cv
1346.48 1149.12 1342.54 1145.04 1339.55 1147.77 cv
1323.74 1162.19 1307.39 1176.12 1291.23 1190.22 cv
1294.67 1182.82 1297.77 1175.27 1300.46 1167.54 cv
1301.47 1164.65 1297.25 1163.15 1295.71 1165.53 cv
1284.64 1182.65 1273.48 1199.55 1261.66 1216.03 cv
1245.68 1229.55 1229.38 1242.58 1213.49 1256.25 cv
1193.13 1273.77 1172.88 1291.42 1152.14 1308.5 cv
1141.18 1317.53 1129.81 1326.08 1119.63 1335.98 cv
1113.8 1341.65 1106.28 1347.51 1100.36 1354.05 cv
1101.8 1344.74 1103.28 1335.42 1104.79 1326.1 cv
1105.63 1325.23 1106.23 1324.16 1106.51 1323 cv
1106.62 1322.98 1106.72 1323 1106.83 1322.98 cv
1111.71 1321.92 1115.8 1323.49 1120.86 1321.53 cv
1126.55 1319.33 1132.02 1315.72 1137.06 1312.35 cv
1147.08 1305.63 1156.33 1297.64 1165.05 1289.32 cv
1186.51 1268.86 1206.01 1246.16 1225.95 1224.23 cv
1245.9 1202.27 1265 1179.49 1284.5 1157.12 cv
1303.58 1135.23 1323.83 1114.39 1341.16 1091.1 cv
1342.39 1089.45 1339.86 1087.9 1338.49 1089.04 cv
1316.32 1107.46 1296.78 1128.66 1276.11 1148.73 cv
1255.48 1168.77 1234.38 1188.42 1214.19 1208.88 cv
1194.94 1228.37 1176.04 1248.21 1156.72 1267.63 cv
1147.18 1277.21 1137.14 1285.93 1126.4 1294.12 cv
1121.48 1297.88 1116.06 1301.23 1111.36 1305.25 cv
1109.63 1306.74 1108.46 1308.45 1107.39 1310.18 cv
1109.55 1297.04 1111.72 1283.9 1113.88 1270.75 cv
1115.43 1271.8 1117.41 1272.33 1119.33 1272.02 cv
1140.8 1268.49 1160.62 1245.64 1175.87 1231.38 cv
1196.82 1211.79 1217.9 1192.34 1238.61 1172.49 cv
1258.69 1153.23 1279.07 1134.24 1298.09 1113.91 cv
1307.33 1104.03 1315.46 1093.19 1324.69 1083.27 cv
1335.01 1072.19 1346.43 1061.92 1355.8 1049.99 cv
1356.69 1048.85 1355.54 1046.81 1354.1 1047.79 cv
1343.5 1055.01 1334.01 1063.83 1324.2 1072.06 cv
1313.73 1080.83 1302.56 1088.53 1291.77 1096.86 cv
1269.05 1114.4 1248.2 1134.42 1227.02 1153.74 cv
1206.44 1172.5 1186.18 1191.61 1165.84 1210.62 cv
1156.68 1219.19 1147.58 1227.81 1138.48 1236.45 cv
1131.2 1243.35 1122.65 1249.54 1116.08 1257.22 cv
1117.95 1245.71 1119.79 1234.19 1121.56 1222.67 cv
1122.89 1223.29 1124.42 1223.51 1125.91 1223.11 cv
1138.2 1219.78 1147.67 1207.6 1157.29 1199.61 cv
1168.3 1190.47 1179.36 1181.46 1190.12 1172.01 cv
1212.75 1152.12 1235.86 1132.85 1258.97 1113.54 cv
1281.37 1094.82 1304.51 1076.85 1325.88 1056.97 cv
1347.91 1036.47 1371.65 1018.9 1394.69 999.652 cv
1395.8 998.722 1394.38 997.003 1393.17 997.687 cv
1380.06 1005.13 1367.63 1013.37 1355.25 1022 cv
1343 1030.53 1329.54 1037.41 1316.71 1045.08 cv
1291.53 1060.13 1268.4 1078.49 1245.34 1096.56 cv
1222.27 1114.64 1199.99 1133.83 1177.92 1153.1 cv
1166.56 1163.02 1155.74 1173.38 1145.11 1184.07 cv
1138.7 1190.52 1130.32 1196.82 1124.31 1204.29 cv
1125.65 1195.06 1126.95 1185.83 1128.17 1176.59 cv
1129.44 1176.88 1130.8 1176.76 1132.06 1176 cv
1144.86 1168.29 1156.29 1157.58 1168.09 1148.48 cv
1180.23 1139.12 1191.63 1128.36 1202.79 1117.86 cv
1225.09 1096.9 1246.73 1075.23 1269.08 1054.32 cv
1307.44 1018.44 1361.75 1002.19 1395.73 961.537 cv
1397.03 959.978 1395.28 957.05 1393.36 958.471 cv
cp
.721569 .984314 .235294 rgb
f
2000 31.0967 mo
1993.54 21.4297 1987.06 11.7725 1980.52 2.15869 cv
1980.03 1.44189 1979.54 .722168 1979.05 0 cv
1966.84 0 li
1977.89 20.0576 1988.79 40.1787 2000 60.147 cv
2000 31.0967 li
cp
f
1926.1 68.4526 mo
1950.16 122.327 1976.84 174.813 2000 229.109 cv
2000 193.171 li
1974.66 152.016 1952.88 108.802 1928.78 66.8862 cv
1927.77 65.1167 1925.31 66.6685 1926.1 68.4526 cv
cp
f
2000 86.604 mo
1983.8 58.5503 1969.43 29.6357 1956.19 0 cv
1950.47 0 li
1964.53 40.2246 1978.64 81.1851 2000 117.91 cv
2000 86.604 li
cp
f
1892.9 168.174 mo
1891.09 167.181 1889.54 169.837 1891.28 170.94 cv
1915.68 186.395 1937.22 204.314 1955.67 226.545 cv
1972.74 247.117 1986.45 269.498 2000 292.359 cv
2000 257.91 li
1970.7 221.658 1932.96 190.104 1892.9 168.174 cv
cp
f
1917.13 29.2495 mo
1936.54 81.5811 1971.67 126.316 2000 174.075 cv
2000 140.566 li
1973.22 103.215 1942.99 68.2607 1920.52 27.8223 cv
1919.52 26.0322 1916.39 27.2437 1917.13 29.2495 cv
cp
f
1809.78 429.382 mo
1810.25 438.136 1823.55 438.275 1823.5 429.382 cv
1822.57 284.082 1787.62 139.731 1750.51 0 cv
1744.55 0 li
1760.53 61.7334 1774.2 124.086 1785.01 186.932 cv
1798.81 267.137 1805.42 348.211 1809.78 429.382 cv
cp
.470588 .596078 .984314 rgb
f
1133.76 354.294 mo
1144.73 347.417 1154.57 339.134 1164.6 330.969 cv
1170.61 326.079 1176.58 321.147 1182.53 316.188 cv
1182.02 316.838 1181.5 317.483 1180.99 318.135 cv
1162.29 341.973 1144.41 366.509 1127.17 391.417 cv
1119.45 402.573 1112.44 414.409 1103.15 424.371 cv
1099.19 428.617 1093.63 432.077 1088.77 435.946 cv
1091.19 416.558 1093.95 397.218 1096.75 377.945 cv
1097 376.255 1097.27 374.564 1097.52 372.874 cv
1098.1 372.931 1098.72 372.919 1099.36 372.812 cv
1111.28 370.814 1123.6 360.668 1133.76 354.294 cv
cp
1053.85 196.856 mo
1061.36 209.59 1068.21 222.702 1075.16 235.749 cv
1081.74 248.11 1087.36 262.616 1096.7 273.105 cv
1099.04 275.737 1102.26 275.716 1104.76 274.269 cv
1103.01 285.798 1101.27 297.324 1099.54 308.848 cv
1093.8 300.956 1087.44 293.566 1081.91 285.366 cv
1074.22 273.948 1067.58 261.856 1061.21 249.662 cv
1047.99 224.331 1036.74 197.889 1021.9 173.429 cv
991.171 122.784 949.424 79.8413 920.52 27.8223 cv
919.524 26.0322 916.39 27.2437 917.133 29.2495 cv
938.018 85.5688 977.115 133.088 1006.35 185.049 cv
1020.37 209.964 1032.03 236.061 1045.4 261.306 cv
1057.79 284.684 1072.99 313.972 1096.61 327.403 cv
1096.66 327.431 1096.71 327.444 1096.76 327.471 cv
1095.24 337.699 1093.75 347.928 1092.26 358.159 cv
1084.46 335.413 1071.68 314.909 1059.77 294.039 cv
1045.22 268.532 1032.05 241.97 1015.67 217.593 cv
983.255 169.362 957.699 117.183 928.784 66.8862 cv
927.766 65.1167 925.308 66.6685 926.104 68.4526 cv
950.197 122.412 976.923 174.979 1000.11 229.367 cv
1011.01 254.924 1025.49 279.09 1039.17 303.241 cv
1053.16 327.943 1066.77 353.224 1088.15 372.448 cv
1088.73 372.972 1089.39 373.304 1090.06 373.47 cv
1087.35 392.45 1084.76 411.448 1082.26 430.463 cv
1080.7 425.132 1078.86 419.999 1077.48 415.508 cv
1072.69 399.957 1067.53 384.521 1061.49 369.411 cv
1049.58 339.643 1036.06 309.66 1018.31 282.854 cv
987.448 236.232 941.908 195.004 892.901 168.174 cv
891.086 167.181 889.542 169.837 891.282 170.94 cv
915.68 186.395 937.223 204.314 955.67 226.545 cv
974.279 248.973 988.9 273.551 1003.67 298.558 cv
1019.72 325.744 1033.09 354.291 1044.69 383.633 cv
1050.41 398.092 1056 412.577 1061.22 427.225 cv
1065.2 438.367 1068.65 452.825 1078.46 460.212 cv
1075.87 481.049 1073.41 501.914 1071.22 522.841 cv
1065.23 579.945 1064.06 638.517 1071.86 695.525 cv
1072.94 703.395 1086.51 701.61 1085.82 693.636 cv
1081.34 641.509 1079.95 589.999 1080.8 537.693 cv
1081.22 511.927 1083.16 486.188 1085.91 460.518 cv
1106.66 467.623 1132.51 426.271 1140.38 412.48 cv
1148.45 398.37 1154.86 383.486 1163.76 369.833 cv
1173.16 355.423 1183.38 341.641 1193.94 328.063 cv
1213.2 303.276 1234.32 278.581 1253.31 252.581 cv
1264.96 240.702 1276.32 228.431 1287.68 216.563 cv
1307.52 195.849 1325.57 174.098 1343.94 152.157 cv
1346.48 149.121 1342.54 145.038 1339.55 147.768 cv
1323.74 162.187 1307.39 176.123 1291.23 190.223 cv
1294.67 182.824 1297.77 175.271 1300.46 167.537 cv
1301.47 164.647 1297.25 163.146 1295.71 165.531 cv
1284.64 182.651 1273.48 199.55 1261.66 216.032 cv
1245.68 229.554 1229.38 242.576 1213.49 256.247 cv
1193.13 273.774 1172.88 291.42 1152.14 308.503 cv
1141.18 317.533 1129.81 326.076 1119.63 335.979 cv
1113.8 341.652 1106.28 347.509 1100.36 354.053 cv
1101.8 344.738 1103.28 335.421 1104.79 326.1 cv
1105.63 325.234 1106.23 324.163 1106.51 322.996 cv
1106.62 322.981 1106.72 323.004 1106.83 322.98 cv
1111.71 321.924 1115.8 323.485 1120.86 321.528 cv
1126.55 319.327 1132.02 315.722 1137.06 312.346 cv
1147.08 305.629 1156.33 297.639 1165.05 289.322 cv
1186.51 268.856 1206.01 246.159 1225.95 224.225 cv
1245.9 202.272 1265 179.491 1284.5 157.122 cv
1303.58 135.231 1323.83 114.395 1341.16 91.1035 cv
1342.39 89.4468 1339.86 87.8994 1338.49 89.041 cv
1316.32 107.455 1296.78 128.66 1276.11 148.732 cv
1255.48 168.766 1234.38 188.423 1214.19 208.875 cv
1194.94 228.366 1176.04 248.215 1156.72 267.628 cv
1147.18 277.205 1137.14 285.93 1126.4 294.119 cv
1121.48 297.875 1116.06 301.233 1111.36 305.252 cv
1109.63 306.737 1108.46 308.445 1107.39 310.176 cv
1109.55 297.04 1111.72 283.901 1113.88 270.748 cv
1115.43 271.805 1117.41 272.333 1119.33 272.018 cv
1140.8 268.495 1160.62 245.644 1175.87 231.384 cv
1196.82 211.795 1217.9 192.337 1238.61 172.488 cv
1258.69 153.234 1279.07 134.241 1298.09 113.914 cv
1307.33 104.032 1315.46 93.1855 1324.69 83.2744 cv
1335.01 72.1885 1346.43 61.915 1355.8 49.9902 cv
1356.69 48.8545 1355.54 46.8086 1354.1 47.7891 cv
1343.5 55.0068 1334.01 63.834 1324.2 72.0557 cv
1313.73 80.8306 1302.56 88.5273 1291.77 96.8599 cv
1269.05 114.396 1248.2 134.423 1227.02 153.742 cv
1206.44 172.505 1186.18 191.605 1165.84 210.624 cv
1156.68 219.19 1147.58 227.814 1138.48 236.446 cv
1131.2 243.352 1122.65 249.542 1116.08 257.224 cv
1117.95 245.711 1119.79 234.194 1121.56 222.667 cv
1122.89 223.294 1124.42 223.51 1125.91 223.108 cv
1138.2 219.777 1147.67 207.601 1157.29 199.613 cv
1168.3 190.469 1179.36 181.455 1190.12 172.006 cv
1212.75 152.119 1235.86 132.854 1258.97 113.54 cv
1281.37 94.8223 1304.51 76.853 1325.88 56.9663 cv
1347.78 36.5928 1371.37 19.1104 1394.27 0 cv
1389.18 0 li
1377.52 6.82471 1366.36 14.2534 1355.25 21.9966 cv
1343 30.5317 1329.54 37.4131 1316.71 45.0796 cv
1291.53 60.126 1268.4 78.4932 1245.34 96.563 cv
1222.27 114.64 1199.99 133.826 1177.92 153.1 cv
1166.56 163.023 1155.74 173.378 1145.11 184.073 cv
1138.7 190.521 1130.32 196.821 1124.31 204.292 cv
1125.65 195.062 1126.95 185.828 1128.17 176.588 cv
1129.44 176.881 1130.8 176.756 1132.06 176 cv
1144.86 168.285 1156.29 157.579 1168.09 148.478 cv
1180.23 139.115 1191.63 128.355 1202.79 117.858 cv
1225.09 96.8965 1246.73 75.2271 1269.08 54.3232 cv
1292.74 32.1943 1322.46 17.5264 1349.74 0 cv
1320.94 0 li
1297.87 11.5449 1274.87 23.186 1253.95 38.4976 cv
1229.83 56.1523 1208.9 78.2778 1187.32 98.8652 cv
1176 109.667 1164.32 120.752 1154.2 132.686 cv
1146.43 141.835 1137.75 150.683 1130.24 160.212 cv
1131.52 149.579 1132.69 138.939 1133.72 128.292 cv
1135.56 128.716 1137.56 128.544 1139.44 127.487 cv
1151.36 120.808 1161.1 109.922 1170.99 100.61 cv
1181.7 90.521 1192.47 80.4854 1203.28 70.4995 cv
1225.47 50.0024 1248.83 30.5977 1271.58 10.6626 cv
1275.6 7.13965 1279.55 3.58105 1283.46 0 cv
1245.38 0 li
1226.23 17.3086 1208.3 35.5425 1189.66 53.4165 cv
1179.04 63.5986 1168.49 73.8506 1157.96 84.1138 cv
1150.64 91.2427 1142.48 98.3105 1135.66 106.231 cv
1136.16 99.7168 1136.61 93.1997 1136.99 86.6792 cv
1137.78 86.5713 1138.56 86.2363 1139.21 85.5938 cv
1149.06 76.0049 1157.28 65.6387 1168.07 57.0322 cv
1179.29 48.0771 1188.85 38.0137 1198.61 27.5322 cv
1207.2 18.3013 1215.85 9.12744 1224.55 0 cv
1195.7 0 li
1191.3 4.96826 1186.91 9.94775 1182.53 14.9395 cv
1174.22 24.4233 1166.46 33.6187 1159.78 44.3271 cv
1153.16 54.9219 1145.3 64.1172 1137.68 73.7651 cv
1137.68 73.7412 1137.69 73.7168 1137.69 73.6924 cv
1137.89 69.0518 1138.03 64.4048 1138.13 59.7534 cv
1138.52 59.5088 1138.91 59.2148 1139.25 58.8091 cv
1149.47 46.8135 1157.4 33.2373 1169.26 22.6606 cv
1177.3 15.4844 1184.25 8.02393 1191.01 0 cv
1166.28 0 li
1163.42 4.51563 1160.72 9.18018 1158.18 14.1299 cv
1152.79 24.6191 1145.34 33.5273 1138.22 42.751 cv
1138.18 34.7393 1138.01 26.7207 1137.7 18.7007 cv
1138.22 18.4673 1138.73 18.1147 1139.21 17.6221 cv
1144.47 12.2402 1148.85 6.13477 1153.19 0 cv
1138.81 0 li
1138.45 .552246 1138.1 1.10547 1137.75 1.66162 cv
1137.76 1.11572 1137.68 .558594 1137.53 0 cv
1117.45 0 li
1120.85 2.81055 1124.47 5.22705 1128.37 7.06738 cv
1129.33 7.521 1130.27 7.7207 1131.18 7.75439 cv
1131.29 18.7021 1131.17 29.6431 1130.89 40.5796 cv
1126.64 26.6938 1119.54 13.0684 1112.22 0 cv
1088.19 0 li
1098.23 18.8857 1109.19 38.9482 1124.67 52.7446 cv
1126.48 54.3521 1128.75 54.4004 1130.46 53.4634 cv
1130.46 53.6172 1130.45 53.771 1130.44 53.9253 cv
1130.28 54.5332 1130.25 55.1372 1130.35 55.7241 cv
1130.07 62.5264 1129.71 69.3271 1129.3 76.127 cv
1123.73 66.3789 1116.12 58.1689 1109.62 49.0176 cv
1102.49 38.9727 1096.07 28.437 1090.02 17.7119 cv
1086.7 11.8379 1083.48 5.91846 1080.27 0 cv
1057.61 0 li
1061.75 8.21143 1065.9 16.4092 1070.27 24.4648 cv
1082.17 46.373 1096.55 74.9956 1119.56 86.9331 cv
1122.92 88.6753 1126.48 87.6846 1128.65 85.4146 cv
1127.98 94.9897 1127.18 104.563 1126.29 114.137 cv
1120.26 107.66 1112.74 102.082 1106.97 95.5137 cv
1098.29 85.6421 1090.77 74.8384 1083.8 63.7119 cv
1070.74 42.873 1059.12 21.2544 1046.8 0 cv
1030.84 0 li
1032.41 2.64844 1033.97 5.31104 1035.48 7.99805 cv
1048.35 30.7827 1058.99 54.8203 1072.89 77.0122 cv
1079.56 87.6514 1086.84 97.9321 1094.98 107.497 cv
1102.74 116.606 1111.74 127.632 1123.28 131.616 cv
1123.7 131.761 1124.12 131.848 1124.53 131.902 cv
1123.56 141.106 1122.48 150.312 1121.35 159.517 cv
1116.59 152.971 1110.17 146.927 1105.85 141.202 cv
1097.47 130.111 1089.52 118.698 1081.86 107.097 cv
1066.05 83.1309 1051.33 58.6694 1036.59 34.0415 cv
1029.87 22.8125 1022.88 11.4927 1016.08 0 cv
1000.69 0 li
1007.07 12.8506 1013.89 25.4868 1020.68 37.9624 cv
1035.06 64.394 1049.94 90.9424 1066.45 116.106 cv
1074.92 129.017 1083.78 141.674 1093.15 153.952 cv
1100.21 163.212 1107.32 176.272 1118.7 180.186 cv
1117.59 188.474 1116.41 196.764 1115.21 205.057 cv
1113.68 202.448 1111.91 199.939 1110.18 197.119 cv
1106.73 191.511 1104.31 185.425 1100.8 179.843 cv
1092.94 167.368 1084.21 155.326 1075.86 143.175 cv
1059.56 119.453 1043.27 95.7466 1027.23 71.8457 cv
1011.65 48.6309 996.242 25.2798 980.521 2.15869 cv
980.033 1.44189 979.542 .722168 979.049 0 cv
966.838 0 li
980.932 25.5796 994.771 51.2695 1009.33 76.603 cv
1024.04 102.175 1039.81 127.281 1055.88 152.004 cv
1064.37 165.058 1072.87 178.234 1082.1 190.771 cv
1086.57 196.841 1092.01 201.945 1096.64 207.877 cv
1100.81 213.223 1103.54 217.567 1109.27 221.281 cv
1110.39 222.007 1111.55 222.285 1112.67 222.25 cv
1110.71 235.188 1108.74 248.117 1106.77 261.039 cv
1102.82 250.111 1095.79 239.749 1090.42 229.649 cv
1083.82 217.244 1077.32 204.774 1070.31 192.597 cv
1056.31 168.285 1038.27 147.032 1022.87 123.682 cv
996.853 84.2432 975.354 42.8755 956.186 0 cv
950.473 0 li
966.096 44.7139 981.782 90.3423 1007.42 130.045 cv
1022.17 152.875 1040.01 173.401 1053.85 196.856 cv
cp
.721569 .984314 .235294 rgb
f
1990.32 1728.57 mo
1992.52 1737.29 1995.92 1745.62 2000 1753.65 cv
2000 1743.5 li
1997.16 1738.57 1994.57 1733.45 1992.35 1728.01 cv
1991.85 1726.79 1989.98 1727.22 1990.32 1728.57 cv
cp
f
1982.1 1774.01 mo
1987.06 1793.65 1992.42 1813.42 2000 1832.25 cv
2000 1800.07 li
1994.97 1791.04 1990.19 1781.87 1985.94 1772.39 cv
1984.95 1770.16 1981.54 1771.78 1982.1 1774.01 cv
cp
f
1972.27 1879.05 mo
1972.17 1876.35 1968.14 1876.34 1968.06 1879.05 cv
1967.95 1883.2 1967.99 1887.31 1968.17 1891.4 cv
1960.59 1880.48 1953.52 1869.25 1947.4 1857.43 cv
1946.46 1855.63 1943.91 1857.21 1944.72 1859 cv
1952.1 1875.36 1960.33 1890.82 1969.34 1905.91 cv
1973.27 1938.42 1985.43 1969.09 2000 1998.62 cv
2000 1971.28 li
1991.8 1955.52 1984.64 1939.32 1979.64 1922.5 cv
1982.43 1926.83 1985.25 1931.15 1988.17 1935.46 cv
1992.09 1941.25 1996.05 1947.02 2000 1952.78 cv
2000 1933.61 li
1991.33 1922.56 1982.65 1911.53 1974.42 1900.21 cv
1973.26 1893.28 1972.52 1886.23 1972.27 1879.05 cv
cp
f
1963.96 1817.52 mo
1964.97 1815.52 1962.07 1813.79 1960.93 1815.75 cv
1949.15 1836.08 1966.12 1859.08 1977.51 1875.54 cv
1984.78 1886.06 1992.4 1896.37 2000 1906.7 cv
2000 1886.45 li
1992.93 1878.58 1985.9 1870.66 1978.93 1862.68 cv
1968.25 1850.46 1955.33 1834.52 1963.96 1817.52 cv
cp
f
1945.32 1975 mo
1944.55 1973.19 1941.45 1974.49 1942.12 1976.35 cv
1944.94 1984.18 1947.7 1992.08 1950.47 2000 cv
1956.19 2000 li
1952.48 1991.72 1948.86 1983.39 1945.32 1975 cv
cp
f
1935.48 1925.23 mo
1938.8 1951.53 1952.52 1974.06 1965.13 1996.89 cv
1965.7 1997.93 1966.27 1998.96 1966.84 2000 cv
1979.05 2000 li
1963.45 1977.16 1945.23 1951.79 1938.82 1924.77 cv
1938.39 1922.95 1935.23 1923.29 1935.48 1925.23 cv
cp
f
1485.43 1492.28 mo
1485.43 1492.27 1485.44 1492.25 1485.44 1492.24 cv
1489.53 1495.1 1493.52 1498.05 1497.48 1501.06 cv
1497.54 1501.19 1497.6 1501.32 1497.66 1501.45 cv
1493.45 1498.54 1489.32 1495.54 1485.43 1492.28 cv
cp
1736.12 1946.13 mo
1737.29 1946.1 1738.51 1945.85 1739.74 1945.26 cv
1750.19 1940.26 1754.42 1926.01 1758.78 1915.96 cv
1763.83 1904.33 1768.1 1892.46 1771.69 1880.3 cv
1779.25 1854.69 1783.87 1828.48 1787.99 1802.14 cv
1796.32 1748.88 1804.09 1697.06 1822.56 1646.21 cv
1823.49 1643.67 1819.56 1642.12 1818.26 1644.39 cv
1792.91 1688.88 1783.46 1741.98 1773 1791.45 cv
1767.65 1816.77 1762.06 1842.15 1754.64 1866.96 cv
1751.06 1878.9 1746.95 1890.69 1742.29 1902.26 cv
1739.37 1909.52 1733.81 1917.72 1730.62 1925.91 cv
1727.03 1912.77 1723.36 1899.62 1719.59 1886.48 cv
1719.88 1886.2 1720.16 1885.9 1720.42 1885.56 cv
1722.2 1884.92 1723.31 1883.19 1723.44 1881.41 cv
1726.67 1876.75 1729.48 1871.88 1731.82 1866.65 cv
1732.21 1865.78 1732.62 1864.88 1733.05 1863.96 cv
1760.94 1824.99 1770.63 1771.9 1779.74 1726.54 cv
1790.8 1671.54 1804.23 1616.31 1830.89 1566.52 cv
1832.14 1564.18 1828.8 1562.25 1827.35 1564.45 cv
1797.39 1609.8 1785.76 1662.11 1770.06 1713.33 cv
1762.11 1739.27 1753.95 1764.74 1743.94 1789.97 cv
1734.49 1813.81 1722.78 1835.53 1711.3 1858.15 cv
1710.31 1854.87 1709.34 1851.59 1708.33 1848.31 cv
1709.4 1846.33 1709.53 1843.81 1708.73 1841.63 cv
1709.85 1841.27 1710.95 1840.59 1711.94 1839.4 cv
1744.8 1800.06 1752.27 1751.4 1762.89 1702.95 cv
1769.18 1674.24 1776.04 1645.62 1783.65 1617.22 cv
1791.18 1589.13 1798.33 1560.47 1813.61 1535.41 cv
1814.71 1533.61 1812.03 1531.41 1810.63 1533.11 cv
1794.99 1552.03 1788.15 1575.64 1780.97 1598.71 cv
1772.24 1626.78 1763.97 1654.98 1756.52 1683.42 cv
1743.76 1732.13 1734.46 1787.36 1701.85 1827.46 cv
1699.14 1819.01 1696.37 1810.59 1693.5 1802.2 cv
1693.92 1802.02 1694.34 1801.81 1694.75 1801.52 cv
1714.05 1788.15 1718.12 1756.14 1723.4 1734.88 cv
1730.33 1706.92 1734.95 1678.6 1740.05 1650.27 cv
1744.99 1622.85 1749.78 1595.21 1756.36 1568.14 cv
1763.29 1539.58 1772.8 1512.17 1782.9 1484.61 cv
1783.46 1483.07 1781 1482.05 1780.24 1483.49 cv
1755.34 1530.9 1741 1585.63 1728.22 1637.37 cv
1721.71 1663.7 1714.7 1689.9 1708.16 1716.22 cv
1704.85 1729.54 1701.56 1742.89 1697.72 1756.07 cv
1694.98 1765.5 1690.31 1774.51 1687.05 1783.8 cv
1684.4 1776.41 1681.7 1769.04 1678.9 1761.72 cv
1679.26 1761.55 1679.63 1761.34 1679.99 1761.08 cv
1699.33 1747.54 1700.15 1715.09 1703.12 1693.74 cv
1706.84 1667.03 1708.98 1640.19 1711.46 1613.34 cv
1716.59 1557.75 1720.51 1502.12 1738.18 1448.8 cv
1738.94 1446.52 1735.29 1444.92 1734.25 1447.15 cv
1712.58 1493.5 1701.49 1544.43 1695.46 1595.02 cv
1692.37 1620.98 1689.52 1646.96 1686.41 1672.92 cv
1684.71 1687.18 1682.83 1701.46 1680.21 1715.58 cv
1678.41 1725.27 1674.58 1734.23 1671.71 1743.46 cv
1668.08 1734.49 1664.35 1725.57 1660.45 1716.74 cv
1661 1715.36 1661.12 1713.82 1660.71 1712.4 cv
1662.86 1712.43 1665 1711.47 1666.25 1709.26 cv
1677.38 1689.58 1678.3 1661.42 1679.07 1639.24 cv
1679.91 1615.03 1678.87 1590.49 1677.58 1566.31 cv
1674.87 1515.57 1668.05 1464.93 1663.3 1414.33 cv
1663.11 1412.38 1660.14 1412.3 1660.19 1414.33 cv
1661.44 1463.35 1661.28 1512.48 1663.61 1561.45 cv
1664.76 1585.83 1665.43 1610.06 1663.4 1634.4 cv
1662.39 1646.52 1661.29 1658.58 1659.48 1670.62 cv
1657.87 1681.31 1654.73 1691.83 1654.08 1702.61 cv
1648.68 1690.99 1643.06 1679.5 1637.08 1668.2 cv
1638.95 1669.87 1642.28 1670.06 1643.94 1668.07 cv
1650.7 1659.98 1649.83 1649.94 1650.82 1639.7 cv
1651.95 1628.08 1652.94 1616.45 1653.79 1604.82 cv
1655.55 1580.75 1656.97 1556.53 1656.57 1532.39 cv
1655.74 1483.22 1651.27 1433.93 1646.41 1385 cv
1646.26 1383.49 1643.92 1383.43 1644.01 1385 cv
1646.68 1433.46 1645.21 1481.49 1642.33 1529.89 cv
1640.94 1553.2 1640.05 1576.53 1638.49 1599.83 cv
1637.7 1611.47 1636.78 1623.1 1635.72 1634.72 cv
1634.83 1644.45 1631.77 1654.88 1634.93 1664.12 cv
1629.12 1653.3 1623.03 1642.63 1616.61 1632.16 cv
1618.45 1632.22 1620.4 1631.32 1621.45 1629.81 cv
1627.51 1621.05 1627.02 1608.23 1627.69 1597.85 cv
1628.43 1586.39 1628.67 1574.87 1628.79 1563.39 cv
1629.06 1539.61 1628.5 1515.73 1626.3 1492.04 cv
1621.94 1445.01 1609.25 1398.73 1596.4 1353.4 cv
1596.07 1352.22 1594.31 1352.71 1594.57 1353.91 cv
1604.68 1401.16 1607.27 1448.85 1609.93 1496.95 cv
1611.2 1519.92 1612.14 1542.85 1611.86 1565.86 cv
1611.73 1577.36 1611.12 1588.82 1610.73 1600.31 cv
1610.48 1607.85 1609.46 1615.59 1610.82 1622.88 cv
1607.4 1617.51 1603.92 1612.18 1600.32 1606.92 cv
1598.22 1603.85 1596.09 1600.81 1593.92 1597.79 cv
1596.57 1596.97 1598.75 1594.79 1598.79 1591.2 cv
1599.03 1570.98 1599.11 1550.75 1596.58 1530.65 cv
1594.11 1511.01 1587.42 1494.6 1578.9 1476.9 cv
1560.15 1437.92 1539.9 1399.71 1519.77 1361.42 cv
1519.04 1360.02 1517.08 1361.25 1517.7 1362.63 cv
1534.12 1399.36 1551.36 1435.73 1567.82 1472.44 cv
1583.67 1507.78 1584.77 1546.92 1584.44 1585.08 cv
1580.68 1580.2 1576.85 1575.36 1572.91 1570.62 cv
1574.09 1570.02 1575.01 1568.91 1575.25 1567.19 cv
1581.02 1526.61 1556.54 1486.49 1534.11 1454.76 cv
1522.78 1438.75 1510.32 1423.54 1496.84 1409.3 cv
1481.85 1393.45 1463.85 1378.78 1458.81 1356.52 cv
1458.5 1355.19 1456.53 1355.76 1456.78 1357.08 cv
1459.84 1372.98 1469.28 1385.27 1479.88 1397.08 cv
1493.84 1412.62 1507.39 1428.15 1519.37 1445.33 cv
1544 1480.68 1562.48 1517.21 1564.17 1560.4 cv
1559.18 1554.75 1554.07 1549.21 1548.82 1543.82 cv
1549.42 1543.06 1549.73 1542.04 1549.46 1540.83 cv
1531.45 1459.8 1459.41 1406.52 1401.53 1353.42 cv
1399.71 1351.75 1397.2 1354.29 1398.84 1356.11 cv
1449.98 1413.07 1520.16 1458.1 1540.79 1535.74 cv
1539.1 1534.11 1537.39 1532.5 1535.66 1530.91 cv
1532.47 1527.89 1529.26 1524.89 1525.97 1521.99 cv
1527.51 1521.71 1528.97 1520.28 1528.42 1518.5 cv
1517.47 1483.27 1488.9 1454.02 1461.06 1431.23 cv
1427.2 1403.5 1389.12 1381.45 1355.28 1353.69 cv
1353.61 1352.33 1351.21 1354.63 1352.87 1356.1 cv
1384.08 1383.76 1420.07 1404.9 1452.55 1430.92 cv
1483.21 1455.48 1506.45 1483.23 1522.52 1518.97 cv
1516.35 1513.64 1510.04 1508.48 1503.55 1503.54 cv
1503.59 1503.19 1503.57 1502.82 1503.39 1502.4 cv
1471.91 1426.18 1383.63 1407.36 1322.46 1363.11 cv
1320.93 1362 1319.53 1364.5 1320.99 1365.61 cv
1378.1 1409.14 1463.41 1428.56 1496.12 1498.02 cv
1492.43 1495.34 1488.71 1492.71 1484.91 1490.16 cv
1484.97 1489.56 1484.82 1488.91 1484.39 1488.25 cv
1465.67 1459.45 1435.73 1441.64 1405.83 1426.24 cv
1367.1 1406.3 1328.25 1386.58 1289.42 1366.83 cv
1288.45 1366.34 1287.59 1367.77 1288.56 1368.3 cv
1323.82 1387.92 1359.22 1407.3 1394.46 1426.98 cv
1418.82 1440.59 1444.34 1453.48 1463.89 1473.22 cv
1440.39 1458.73 1414.62 1447.48 1388.36 1439.53 cv
1371.28 1434.35 1353.94 1431.05 1336.33 1428.34 cv
1316.84 1425.34 1296.14 1420.87 1285.71 1402.18 cv
1284.89 1400.7 1282.73 1402 1283.46 1403.49 cv
1298.71 1434.7 1341.07 1431.74 1370.03 1438.94 cv
1404.28 1447.46 1435.61 1461.82 1465.32 1480.14 cv
1432.59 1464.09 1397.37 1452.22 1362.03 1444.31 cv
1323.51 1435.7 1276.38 1438.44 1243.65 1413.68 cv
1242.04 1412.46 1239.88 1415.22 1241.47 1416.51 cv
1271.65 1441.14 1312.87 1439.73 1349.27 1447.04 cv
1395.79 1456.38 1438.98 1473.28 1481.08 1494.87 cv
1482.13 1495.41 1483.14 1495.27 1483.92 1494.78 cv
1493.01 1503.38 1504.06 1509.99 1513.87 1517.78 cv
1528.38 1529.29 1540.89 1542.32 1553.73 1555.51 cv
1514.78 1531.7 1471.34 1511.39 1428.2 1498.36 cv
1404.88 1491.32 1380.84 1488.1 1356.62 1486.17 cv
1328.92 1483.95 1301.37 1482.55 1275.43 1471.63 cv
1274.09 1471.06 1273.08 1473.42 1274.43 1474.01 cv
1295 1482.96 1316.86 1486.11 1338.99 1488.68 cv
1366.6 1491.9 1392.81 1496.52 1419.46 1504.52 cv
1471.66 1520.17 1516.55 1547.88 1564.65 1572.33 cv
1566.59 1573.31 1568.38 1572.81 1569.54 1571.67 cv
1574.64 1578 1579.58 1584.47 1584.38 1591.05 cv
1584.38 1591.1 1584.38 1591.15 1584.38 1591.2 cv
1584.33 1594.85 1586.54 1597.04 1589.23 1597.82 cv
1590.47 1599.58 1591.67 1601.37 1592.89 1603.14 cv
1570.65 1587.49 1544.45 1575.62 1520.68 1562.54 cv
1495.56 1548.72 1471.01 1539.21 1442.71 1534.22 cv
1413.64 1529.1 1384.52 1524.25 1355.44 1519.19 cv
1327.74 1514.36 1296.88 1512.32 1271.84 1498.57 cv
1269.97 1497.55 1268.35 1500.32 1270.17 1501.42 cv
1292.27 1514.8 1318.78 1518.34 1343.64 1523.76 cv
1373.29 1530.23 1403.18 1536.07 1432.65 1543.34 cv
1461.29 1550.4 1487.47 1560.94 1513.29 1575.18 cv
1538.46 1589.07 1563.4 1605.98 1590.02 1616.86 cv
1590.77 1617.17 1591.46 1617.29 1592.12 1617.33 cv
1598.03 1623.06 1604.33 1628.49 1610.13 1634.33 cv
1595.72 1632.55 1585.28 1624.94 1572.47 1617.99 cv
1560.61 1611.55 1548.48 1605.55 1536.08 1600.19 cv
1512.2 1589.86 1487.61 1580.68 1462.47 1573.89 cv
1409.86 1559.67 1356.56 1548.2 1303.5 1535.83 cv
1301.88 1535.45 1301.19 1537.9 1302.81 1538.34 cv
1358.46 1553.24 1414.02 1567.33 1468.23 1587 cv
1495.3 1596.82 1522 1607.28 1547.91 1619.9 cv
1560.74 1626.14 1572.9 1633.46 1585.46 1640.17 cv
1594.71 1645.12 1605.84 1649.76 1615.15 1643.08 cv
1615.92 1642.54 1616.42 1641.85 1616.77 1641.12 cv
1623.57 1652.85 1629.98 1664.82 1636.08 1676.96 cv
1635.79 1676.78 1635.5 1676.61 1635.16 1676.48 cv
1582.22 1654.94 1534.21 1623.34 1480.88 1602.39 cv
1427.53 1581.44 1371.74 1568.22 1316.62 1552.91 cv
1315.12 1552.49 1314.5 1554.78 1315.98 1555.22 cv
1370.86 1571.71 1425.18 1590.33 1478.16 1612.26 cv
1531.03 1634.14 1578.81 1666.92 1632.18 1687.29 cv
1636.09 1688.78 1638.64 1685.87 1638.88 1682.62 cv
1642.72 1690.42 1646.42 1698.29 1650 1706.21 cv
1598.31 1689.3 1554.93 1657.29 1505.81 1634.43 cv
1454.06 1610.34 1398.78 1592.55 1345.38 1572.46 cv
1343.75 1571.85 1342.56 1574.61 1344.18 1575.3 cv
1398.68 1598.5 1453.4 1620.91 1506.11 1648.04 cv
1553.67 1672.53 1599.54 1709.89 1652.88 1720.8 cv
1654.17 1721.06 1655.32 1720.96 1656.35 1720.64 cv
1660.41 1730.09 1664.29 1739.6 1668.02 1749.14 cv
1619.55 1723.23 1568.23 1701.43 1518.15 1678.92 cv
1470.92 1657.69 1424.56 1631.25 1372.97 1622.17 cv
1371.04 1621.83 1370.17 1624.71 1372.15 1625.16 cv
1423.55 1636.83 1471.09 1665.77 1517.18 1690.5 cv
1565.53 1716.44 1614.09 1743.83 1664.25 1766.15 cv
1667.97 1767.8 1671.51 1766.8 1673.92 1764.66 cv
1675.32 1768.43 1676.71 1772.21 1678.06 1775.99 cv
1680.18 1781.93 1682.22 1787.9 1684.27 1793.88 cv
1684.22 1794.18 1684.26 1794.49 1684.26 1794.8 cv
1672.57 1790.4 1661.2 1786.54 1649.83 1780.69 cv
1638.26 1774.74 1626.76 1768.65 1615.31 1762.48 cv
1590.98 1749.36 1567.04 1735.55 1542.86 1722.16 cv
1495.19 1695.76 1447.72 1668.98 1400.04 1642.61 cv
1398.74 1641.89 1397.6 1643.84 1398.88 1644.59 cv
1447.9 1673.57 1495.56 1704.73 1544.41 1734 cv
1568.11 1748.19 1592.16 1761.85 1616.35 1775.2 cv
1629.03 1782.2 1641.74 1789.22 1654.65 1795.79 cv
1664.54 1800.83 1675.57 1806.82 1686.91 1805.95 cv
1687.41 1805.91 1687.85 1805.8 1688.28 1805.67 cv
1691.72 1815.98 1695.04 1826.34 1698.31 1836.72 cv
1674.35 1834.73 1653.94 1821.72 1634.31 1808.53 cv
1612.43 1793.82 1590.83 1778.74 1569.02 1763.93 cv
1524.71 1733.85 1480.9 1703.04 1436.51 1673.07 cv
1434.88 1671.96 1433.51 1674.52 1435 1675.66 cv
1480.37 1710.41 1526.56 1744.1 1571.81 1779.01 cv
1592.97 1795.34 1614.19 1812.06 1636.24 1827.14 cv
1656.11 1840.73 1677.76 1850.94 1702.16 1851.69 cv
1702.44 1851.7 1702.69 1851.65 1702.96 1851.63 cv
1704.46 1856.53 1705.89 1861.44 1707.36 1866.35 cv
1706.73 1868.55 1706.97 1870.75 1707.76 1872.72 cv
1701.21 1871.11 1694.47 1869.84 1688.24 1867.26 cv
1676.37 1862.34 1665.23 1855.74 1654.22 1849.17 cv
1630.97 1835.3 1608.07 1820.89 1584.67 1807.28 cv
1537.31 1779.74 1489.4 1752.9 1439.74 1729.71 cv
1437.55 1728.69 1435.62 1731.84 1437.82 1733 cv
1488.48 1759.62 1538.91 1786.5 1587.44 1816.9 cv
1610.88 1831.57 1633.54 1847.24 1656.51 1862.6 cv
1669.86 1871.53 1691.46 1885.92 1709.99 1886.75 cv
1711.06 1887.59 1712.41 1888.14 1713.82 1888.32 cv
1717.08 1899.55 1720.28 1910.81 1723.44 1922.07 cv
1717.55 1917.72 1711.05 1913.94 1705.24 1909.96 cv
1693.83 1902.17 1682.31 1894.53 1670.76 1886.96 cv
1648.3 1872.23 1624.55 1859.84 1601.26 1846.52 cv
1558.14 1821.85 1516.67 1790.17 1468.26 1776.57 cv
1466.75 1776.15 1466.17 1778.39 1467.62 1778.89 cv
1491.89 1787.34 1513.82 1800.48 1535.42 1814.2 cv
1557.36 1828.12 1579.86 1841.5 1601 1856.63 cv
1622.24 1871.83 1642.89 1887.79 1664.51 1902.46 cv
1675.28 1909.77 1686.01 1917.14 1696.75 1924.49 cv
1706.53 1931.17 1715.99 1939.42 1727.26 1943.3 cv
1728.03 1943.56 1728.75 1943.67 1729.43 1943.68 cv
1732.35 1954.28 1735.24 1964.88 1738.09 1975.49 cv
1740.29 1983.65 1742.44 1991.82 1744.55 2000 cv
1750.51 2000 li
1749.89 1997.67 1749.27 1995.34 1748.65 1993.01 cv
1744.51 1977.48 1740.35 1961.82 1736.12 1946.13 cv
cp
.470588 .596078 .984314 rgb
f
974.423 1900.21 mo
973.262 1893.28 972.519 1886.23 972.269 1879.05 cv
972.173 1876.35 968.14 1876.34 968.063 1879.05 cv
967.946 1883.2 967.995 1887.31 968.166 1891.4 cv
960.591 1880.48 953.521 1869.25 947.397 1857.43 cv
946.465 1855.63 943.912 1857.21 944.718 1859 cv
952.101 1875.36 960.329 1890.82 969.339 1905.91 cv
973.335 1938.93 985.813 1970.05 1000.69 2000 cv
1016.08 2000 li
1001.44 1975.25 987.725 1949.69 979.642 1922.5 cv
982.427 1926.83 985.254 1931.15 988.171 1935.46 cv
1002.64 1956.85 1017.65 1977.81 1030.84 2000 cv
1046.8 2000 li
1045.99 1998.61 1045.19 1997.21 1044.38 1995.83 cv
1024.43 1961.8 997.619 1932.11 974.423 1900.21 cv
cp
.721569 .984314 .235294 rgb
f
1393.17 1997.69 mo
1391.83 1998.45 1390.5 1999.22 1389.18 2000 cv
1394.27 2000 li
1394.41 1999.88 1394.55 1999.77 1394.69 1999.65 cv
1395.8 1998.72 1394.38 1997 1393.17 1997.69 cv
cp
f
945.319 1975 mo
944.554 1973.19 941.446 1974.49 942.118 1976.35 cv
944.938 1984.18 947.704 1992.08 950.473 2000 cv
956.186 2000 li
952.484 1991.72 948.861 1983.39 945.319 1975 cv
cp
f
1006.85 1894.08 mo
997.427 1883.72 988.151 1873.23 978.932 1862.68 cv
968.245 1850.46 955.33 1834.52 963.956 1817.52 cv
964.97 1815.52 962.069 1813.79 960.93 1815.75 cv
949.155 1836.08 966.115 1859.08 977.506 1875.54 cv
995.183 1901.09 1014.88 1925.45 1031.44 1951.74 cv
1041.19 1967.21 1049.37 1983.63 1057.61 2000 cv
1080.27 2000 li
1071.95 1984.68 1063.67 1969.37 1053.88 1954.89 cv
1039.53 1933.66 1024.1 1913.05 1006.85 1894.08 cv
cp
f
1112.48 1969.26 mo
1112.44 1968.35 1112.25 1967.41 1111.83 1966.45 cv
1111.52 1965.73 1111.21 1965.01 1110.89 1964.29 cv
1115.92 1969.69 1121.72 1973.74 1128.52 1974.97 cv
1129.09 1975.08 1129.66 1975.03 1130.18 1974.88 cv
1130.46 1980.33 1130.67 1985.79 1130.84 1991.24 cv
1124.44 1983.93 1118.26 1976.82 1112.48 1969.26 cv
cp
1016.1 1783.08 mo
1014.87 1780.34 1013.62 1777.61 1012.4 1774.87 cv
1013.79 1777.01 1015.2 1779.09 1016.61 1781.21 cv
1016.23 1781.72 1016.03 1782.36 1016.1 1783.08 cv
cp
1135.06 1979.26 mo
1135.15 1979.24 1135.24 1979.23 1135.33 1979.2 cv
1136.45 1978.75 1137.49 1978.19 1138.44 1977.51 cv
1139.59 1977.84 1140.94 1977.55 1141.76 1976.31 cv
1155.45 1955.76 1159.78 1932.85 1165.1 1909.15 cv
1170.74 1884.07 1178.08 1859.53 1187.24 1835.5 cv
1196.48 1811.26 1207.42 1787.73 1218.02 1764.07 cv
1228.51 1740.67 1238.67 1716.39 1250.2 1693.54 cv
1250.97 1692 1248.73 1690.66 1247.86 1692.18 cv
1241.73 1702.98 1234.17 1713.01 1227.91 1723.82 cv
1221.27 1735.29 1214.89 1746.89 1208.53 1758.52 cv
1196.7 1780.16 1186.44 1802.65 1177.38 1825.57 cv
1158.6 1873.08 1149.51 1922.84 1136.96 1972.08 cv
1136.91 1972.13 1136.85 1972.14 1136.79 1972.2 cv
1136.15 1972.91 1135.4 1973.5 1134.56 1973.96 cv
1133.42 1962.27 1132.07 1950.61 1130.44 1939.01 cv
1131.33 1940.62 1133.43 1941.42 1134.98 1939.83 cv
1149.08 1925.3 1151.94 1900.44 1158.06 1881.57 cv
1165.29 1859.27 1171.63 1836.68 1178.14 1814.14 cv
1191.46 1767.99 1201.43 1720.4 1220.38 1676.19 cv
1220.85 1675.1 1219.28 1674.12 1218.73 1675.23 cv
1198.27 1717.02 1179.2 1758.8 1165.76 1803.44 cv
1159.01 1825.86 1152.18 1848.37 1146.23 1871.01 cv
1143.25 1882.36 1139.97 1893.59 1136.55 1904.81 cv
1133.4 1915.11 1129.45 1924.44 1129.87 1935.08 cv
1129.07 1929.57 1128.23 1924.07 1127.33 1918.59 cv
1127.57 1918.34 1127.75 1918.03 1127.87 1917.69 cv
1129.12 1919.29 1131.84 1918.81 1132.41 1916.79 cv
1137.99 1896.87 1136.28 1875.26 1139.29 1854.84 cv
1142.43 1833.47 1146.86 1812.27 1150.83 1791.04 cv
1158.95 1747.56 1161.56 1703.63 1169.21 1660.01 cv
1169.56 1658.01 1166.53 1657.12 1166.12 1659.16 cv
1156.86 1704.72 1142.86 1748.66 1134.12 1794.29 cv
1130.09 1815.33 1125.73 1836.34 1122.96 1857.6 cv
1121.37 1869.84 1119.58 1882.9 1120.9 1895.38 cv
1116.66 1886.81 1111.48 1878.52 1107.73 1870.09 cv
1099.37 1851.32 1096.43 1830.85 1091.94 1810.97 cv
1088.15 1794.18 1082.3 1778.25 1074.94 1762.72 cv
1066.28 1744.43 1055.46 1729.12 1056.14 1707.84 cv
1056.21 1705.73 1053.18 1705.85 1052.94 1707.84 cv
1048.19 1746.84 1069.54 1780.42 1076.67 1817.65 cv
1080.39 1837.08 1083.19 1856.32 1091.09 1874.64 cv
1098.1 1890.92 1108.42 1910.28 1124.57 1918.99 cv
1124.77 1919.1 1124.96 1919.16 1125.16 1919.21 cv
1127.13 1934.29 1128.52 1949.34 1129.51 1964.38 cv
1126.21 1958.04 1121.35 1952.47 1117.38 1946.51 cv
1111.28 1937.34 1106.3 1927.47 1101.66 1917.49 cv
1091.24 1895.06 1082.09 1871.95 1070.71 1849.97 cv
1059.69 1828.71 1047.35 1808.03 1032.91 1788.89 cv
1017.94 1769.06 1001.9 1751.33 992.347 1728.01 cv
991.848 1726.79 989.978 1727.22 990.32 1728.57 cv
994.287 1744.31 1002.16 1758.76 1010.9 1772.53 cv
1009.56 1771.89 1007.41 1773.14 1008.04 1774.86 cv
1024.04 1818.27 1041.95 1860.2 1061.71 1902.06 cv
1062.95 1904.84 1064.22 1907.6 1065.55 1910.33 cv
1069.5 1918.99 1073.18 1927.73 1076.98 1936.42 cv
1071.56 1926.57 1066.14 1916.72 1060.72 1906.86 cv
1048.3 1884.28 1035.61 1861.87 1022.83 1839.5 cv
1010.14 1817.29 996.421 1795.77 985.943 1772.39 cv
984.945 1770.16 981.536 1771.78 982.1 1774.01 cv
988.136 1797.9 994.763 1822 1005.25 1844.36 cv
1016.54 1868.41 1029.02 1891.66 1041.79 1914.97 cv
1054.9 1938.91 1068.01 1962.86 1081.12 1986.8 cv
1083.45 1991.07 1085.79 1995.5 1088.19 2000 cv
1112.22 2000 li
1109.56 1995.23 1106.86 1990.54 1104.27 1985.93 cv
1108.21 1991.12 1112.59 1995.97 1117.45 2000 cv
1137.53 2000 li
1137.34 1999.3 1137.03 1998.59 1136.56 1997.9 cv
1136.14 1991.68 1135.62 1985.47 1135.06 1979.26 cv
cp
f
1395.73 1961.54 mo
1397.03 1959.98 1395.28 1957.05 1393.36 1958.47 cv
1370.82 1975.2 1345.84 1987.54 1320.94 2000 cv
1349.74 2000 li
1366.69 1989.11 1382.71 1977.12 1395.73 1961.54 cv
cp
f
1256.59 1921.83 mo
1273.99 1901.72 1292.3 1882.06 1308.47 1860.93 cv
1325.05 1839.26 1342.31 1816.05 1354.67 1791.69 cv
1355.68 1789.69 1352.84 1788 1351.64 1789.92 cv
1344.01 1802.17 1336.1 1814.42 1326.95 1825.6 cv
1318.09 1836.42 1307.34 1845.43 1297.23 1855.03 cv
1277.13 1874.11 1256.36 1892.62 1237.4 1912.86 cv
1217.63 1933.97 1199.31 1956.44 1181.34 1979.07 cv
1175.83 1986.01 1170.84 1992.81 1166.28 2000 cv
1191.01 2000 li
1193.22 1997.38 1195.41 1994.7 1197.61 1991.95 cv
1216.71 1968.09 1236.6 1944.94 1256.59 1921.83 cv
cp
f
935.478 1925.23 mo
938.796 1951.53 952.521 1974.06 965.126 1996.89 cv
965.698 1997.93 966.267 1998.96 966.838 2000 cv
979.049 2000 li
963.446 1977.16 945.231 1951.79 938.821 1924.77 cv
938.388 1922.95 935.233 1923.29 935.478 1925.23 cv
cp
f
1189.3 1953.96 mo
1205.46 1930.02 1221.67 1906.05 1236.89 1881.49 cv
1265.02 1836.11 1287.24 1787.2 1323.73 1747.46 cv
1324.82 1746.27 1323.13 1744.58 1321.96 1745.69 cv
1284.49 1781.06 1253.22 1822.94 1224.58 1865.7 cv
1208.94 1889.02 1193.64 1912.57 1177.98 1935.89 cv
1170.15 1947.54 1162.06 1958.63 1156.31 1971.45 cv
1151.73 1981.67 1144.87 1990.61 1138.81 2000 cv
1153.19 2000 li
1156.28 1995.63 1159.36 1991.24 1162.73 1987.09 cv
1171.86 1975.84 1181.12 1966.08 1189.3 1953.96 cv
cp
f
1330.48 1952.14 mo
1348.22 1931.88 1366.21 1913.95 1381.03 1891.33 cv
1382.11 1889.69 1379.56 1887.66 1378.28 1889.21 cv
1360.73 1910.39 1339.63 1929.97 1317.05 1945.57 cv
1294.36 1961.23 1272.54 1976.04 1251.76 1994.3 cv
1249.61 1996.18 1247.49 1998.09 1245.38 2000 cv
1283.46 2000 li
1299.99 1984.87 1315.58 1969.15 1330.48 1952.14 cv
cp
f
1306.71 1912.58 mo
1315.46 1900.25 1323.73 1888.45 1334.28 1877.5 cv
1344 1867.4 1353.62 1857.36 1362.68 1846.65 cv
1364.29 1844.75 1361.9 1842.47 1359.99 1843.96 cv
1337.69 1861.35 1318.24 1881.32 1295 1897.53 cv
1273.04 1912.85 1254.86 1934.7 1236.86 1954.34 cv
1223.02 1969.45 1209.3 1984.67 1195.7 2000 cv
1224.55 2000 li
1234.54 1989.51 1244.61 1979.09 1254.75 1968.74 cv
1272.37 1950.75 1292.09 1933.17 1306.71 1912.58 cv
cp
f
1938.82 924.773 mo
1938.39 922.952 1935.23 923.293 1935.48 925.226 cv
1938.8 951.528 1952.52 974.059 1965.13 996.891 cv
1976.77 1017.98 1988.21 1039.15 2000 1060.15 cv
2000 1031.1 li
1993.54 1021.43 1987.06 1011.77 1980.52 1002.16 cv
1964.61 978.76 1945.43 952.64 1938.82 924.773 cv
cp
f
1972.27 879.051 mo
1972.17 876.349 1968.14 876.339 1968.06 879.051 cv
1967.95 883.199 1967.99 887.314 1968.17 891.402 cv
1960.59 880.481 1953.52 869.25 1947.4 857.435 cv
1946.46 855.635 1943.91 857.214 1944.72 859.001 cv
1952.1 875.359 1960.33 890.815 1969.34 905.913 cv
1973.27 938.419 1985.43 969.092 2000 998.616 cv
2000 971.283 li
1991.8 955.515 1984.64 939.321 1979.64 922.502 cv
1982.43 926.831 1985.25 931.149 1988.17 935.462 cv
1992.09 941.254 1996.05 947.016 2000 952.778 cv
2000 933.61 li
1991.33 922.562 1982.65 911.527 1974.42 900.215 cv
1973.26 893.277 1972.52 886.227 1972.27 879.051 cv
cp
f
1917.13 1029.25 mo
1936.54 1081.58 1971.67 1126.32 2000 1174.08 cv
2000 1140.57 li
1973.22 1103.21 1942.99 1068.26 1920.52 1027.82 cv
1919.52 1026.03 1916.39 1027.24 1917.13 1029.25 cv
cp
f
1982.1 774.013 mo
1987.06 793.646 1992.42 813.417 2000 832.249 cv
2000 800.071 li
1994.97 791.036 1990.19 781.869 1985.94 772.393 cv
1984.95 770.164 1981.54 771.777 1982.1 774.013 cv
cp
f
1963.96 817.521 mo
1964.97 815.523 1962.07 813.786 1960.93 815.753 cv
1949.15 836.08 1966.12 859.082 1977.51 875.543 cv
1984.78 886.058 1992.4 896.373 2000 906.703 cv
2000 886.455 li
1992.93 878.577 1985.9 870.657 1978.93 862.683 cv
1968.25 850.455 1955.33 834.521 1963.96 817.521 cv
cp
f
1926.1 1068.45 mo
1950.16 1122.33 1976.84 1174.81 2000 1229.11 cv
2000 1193.17 li
1974.66 1152.02 1952.88 1108.8 1928.78 1066.89 cv
1927.77 1065.12 1925.31 1066.67 1926.1 1068.45 cv
cp
f
1942.12 976.354 mo
1959.25 1023.92 1974.43 1073.95 2000 1117.91 cv
2000 1086.6 li
1979.27 1050.71 1961.54 1013.42 1945.32 975.004 cv
1944.55 973.19 1941.45 974.488 1942.12 976.354 cv
cp
f
1990.32 728.57 mo
1992.52 737.291 1995.92 745.616 2000 753.65 cv
2000 743.495 li
1997.16 738.569 1994.57 733.446 1992.35 728.011 cv
1991.85 726.793 1989.98 727.219 1990.32 728.57 cv
cp
f
1892.9 1168.17 mo
1891.09 1167.18 1889.54 1169.84 1891.28 1170.94 cv
1915.68 1186.39 1937.22 1204.31 1955.67 1226.54 cv
1972.74 1247.12 1986.45 1269.5 2000 1292.36 cv
2000 1257.91 li
1970.7 1221.66 1932.96 1190.1 1892.9 1168.17 cv
cp
f
1982.1 1774.01 mo
1987.06 1793.65 1992.42 1813.42 2000 1832.25 cv
2000 1800.07 li
1994.97 1791.04 1990.19 1781.87 1985.94 1772.39 cv
1984.95 1770.16 1981.54 1771.78 1982.1 1774.01 cv
cp
f
1935.48 1925.23 mo
1938.8 1951.53 1952.52 1974.06 1965.13 1996.89 cv
1965.7 1997.93 1966.27 1998.96 1966.84 2000 cv
1979.05 2000 li
1963.45 1977.16 1945.23 1951.79 1938.82 1924.77 cv
1938.39 1922.95 1935.23 1923.29 1935.48 1925.23 cv
cp
f
1945.32 1975 mo
1944.55 1973.19 1941.45 1974.49 1942.12 1976.35 cv
1944.94 1984.18 1947.7 1992.08 1950.47 2000 cv
1956.19 2000 li
1952.48 1991.72 1948.86 1983.39 1945.32 1975 cv
cp
f
1990.32 1728.57 mo
1992.52 1737.29 1995.92 1745.62 2000 1753.65 cv
2000 1743.5 li
1997.16 1738.57 1994.57 1733.45 1992.35 1728.01 cv
1991.85 1726.79 1989.98 1727.22 1990.32 1728.57 cv
cp
f
1963.96 1817.52 mo
1964.97 1815.52 1962.07 1813.79 1960.93 1815.75 cv
1949.15 1836.08 1966.12 1859.08 1977.51 1875.54 cv
1984.78 1886.06 1992.4 1896.37 2000 1906.7 cv
2000 1886.45 li
1992.93 1878.58 1985.9 1870.66 1978.93 1862.68 cv
1968.25 1850.46 1955.33 1834.52 1963.96 1817.52 cv
cp
f
1972.27 1879.05 mo
1972.17 1876.35 1968.14 1876.34 1968.06 1879.05 cv
1967.95 1883.2 1967.99 1887.31 1968.17 1891.4 cv
1960.59 1880.48 1953.52 1869.25 1947.4 1857.43 cv
1946.46 1855.63 1943.91 1857.21 1944.72 1859 cv
1952.1 1875.36 1960.33 1890.82 1969.34 1905.91 cv
1973.27 1938.42 1985.43 1969.09 2000 1998.62 cv
2000 1971.28 li
1991.8 1955.52 1984.64 1939.32 1979.64 1922.5 cv
1982.43 1926.83 1985.25 1931.15 1988.17 1935.46 cv
1992.09 1941.25 1996.05 1947.02 2000 1952.78 cv
2000 1933.61 li
1991.33 1922.56 1982.65 1911.53 1974.42 1900.21 cv
1973.26 1893.28 1972.52 1886.23 1972.27 1879.05 cv
cp
f
1121.35 1159.52 mo
1116.59 1152.97 1110.17 1146.93 1105.85 1141.2 cv
1097.47 1130.11 1089.52 1118.7 1081.86 1107.1 cv
1066.05 1083.13 1051.33 1058.67 1036.59 1034.04 cv
1015.39 998.626 991.478 962.31 979.642 922.502 cv
982.427 926.831 985.254 931.149 988.171 935.462 cv
1004.36 959.4 1021.25 982.802 1035.48 1008 cv
1048.35 1030.78 1058.99 1054.82 1072.89 1077.01 cv
1079.56 1087.65 1086.84 1097.93 1094.98 1107.5 cv
1102.74 1116.61 1111.74 1127.63 1123.28 1131.62 cv
1123.7 1131.76 1124.12 1131.85 1124.53 1131.9 cv
1123.56 1141.11 1122.48 1150.31 1121.35 1159.52 cv
cp
1133.76 1354.29 mo
1144.73 1347.42 1154.57 1339.13 1164.6 1330.97 cv
1170.61 1326.08 1176.58 1321.15 1182.53 1316.19 cv
1182.02 1316.84 1181.5 1317.48 1180.99 1318.13 cv
1162.29 1341.97 1144.41 1366.51 1127.17 1391.42 cv
1119.45 1402.57 1112.44 1414.41 1103.15 1424.37 cv
1099.19 1428.62 1093.63 1432.08 1088.77 1435.95 cv
1091.19 1416.56 1093.95 1397.22 1096.75 1377.94 cv
1097 1376.26 1097.27 1374.56 1097.52 1372.87 cv
1098.1 1372.93 1098.72 1372.92 1099.36 1372.81 cv
1111.28 1370.81 1123.6 1360.67 1133.76 1354.29 cv
cp
1104.27 985.934 mo
1110.96 994.731 1118.88 1002.59 1128.37 1007.07 cv
1129.33 1007.52 1130.27 1007.72 1131.18 1007.75 cv
1131.29 1018.7 1131.17 1029.64 1130.89 1040.58 cv
1125.1 1021.63 1113.97 1003.16 1104.27 985.934 cv
cp
1128.52 974.972 mo
1129.09 975.076 1129.66 975.032 1130.18 974.876 cv
1130.46 980.334 1130.67 985.789 1130.84 991.243 cv
1124.44 983.932 1118.26 976.824 1112.48 969.257 cv
1112.44 968.349 1112.25 967.406 1111.83 966.449 cv
1111.52 965.728 1111.21 965.006 1110.89 964.286 cv
1115.92 969.69 1121.72 973.74 1128.52 974.972 cv
cp
1016.1 783.079 mo
1014.87 780.341 1013.62 777.608 1012.4 774.87 cv
1013.79 777.014 1015.2 779.095 1016.61 781.209 cv
1016.23 781.723 1016.03 782.355 1016.1 783.079 cv
cp
1393.36 958.471 mo
1349.93 990.692 1297.45 1006.66 1253.95 1038.5 cv
1229.83 1056.15 1208.9 1078.28 1187.32 1098.87 cv
1176 1109.67 1164.32 1120.75 1154.2 1132.69 cv
1146.43 1141.84 1137.75 1150.68 1130.24 1160.21 cv
1131.52 1149.58 1132.69 1138.94 1133.72 1128.29 cv
1135.56 1128.72 1137.56 1128.54 1139.44 1127.49 cv
1151.36 1120.81 1161.1 1109.92 1170.99 1100.61 cv
1181.7 1090.52 1192.47 1080.49 1203.28 1070.5 cv
1225.47 1050 1248.83 1030.6 1271.58 1010.66 cv
1292.59 992.251 1312.06 973.171 1330.48 952.136 cv
1348.22 931.876 1366.21 913.948 1381.03 891.328 cv
1382.11 889.689 1379.56 887.66 1378.28 889.205 cv
1360.73 910.39 1339.63 929.974 1317.05 945.571 cv
1294.36 961.233 1272.54 976.04 1251.76 994.296 cv
1230.16 1013.27 1210.36 1033.57 1189.66 1053.42 cv
1179.04 1063.6 1168.49 1073.85 1157.96 1084.11 cv
1150.64 1091.24 1142.48 1098.31 1135.66 1106.23 cv
1136.16 1099.72 1136.61 1093.2 1136.99 1086.68 cv
1137.78 1086.57 1138.56 1086.24 1139.21 1085.59 cv
1149.06 1076 1157.28 1065.64 1168.07 1057.03 cv
1179.29 1048.08 1188.85 1038.01 1198.61 1027.53 cv
1217.07 1007.7 1235.78 988.097 1254.75 968.739 cv
1272.37 950.747 1292.09 933.171 1306.71 912.575 cv
1315.46 900.251 1323.73 888.451 1334.28 877.498 cv
1344 867.398 1353.62 857.356 1362.68 846.654 cv
1364.29 844.75 1361.9 842.473 1359.99 843.963 cv
1337.69 861.351 1318.24 881.323 1295 897.532 cv
1273.04 912.851 1254.86 934.704 1236.86 954.341 cv
1218.53 974.34 1200.42 994.54 1182.53 1014.94 cv
1174.22 1024.42 1166.46 1033.62 1159.78 1044.33 cv
1153.16 1054.92 1145.3 1064.12 1137.68 1073.77 cv
1137.68 1073.74 1137.69 1073.72 1137.69 1073.69 cv
1137.89 1069.05 1138.03 1064.4 1138.13 1059.75 cv
1138.52 1059.51 1138.91 1059.21 1139.25 1058.81 cv
1149.47 1046.81 1157.4 1033.24 1169.26 1022.66 cv
1179.93 1013.14 1188.66 1003.12 1197.61 991.95 cv
1216.71 968.092 1236.6 944.942 1256.59 921.833 cv
1273.99 901.718 1292.3 882.059 1308.47 860.93 cv
1325.05 839.264 1342.31 816.046 1354.67 791.693 cv
1355.68 789.689 1352.84 787.998 1351.64 789.925 cv
1344.01 802.175 1336.1 814.417 1326.95 825.598 cv
1318.09 836.415 1307.34 845.433 1297.23 855.028 cv
1277.13 874.112 1256.36 892.618 1237.4 912.86 cv
1217.63 933.969 1199.31 956.436 1181.34 979.072 cv
1172.37 990.366 1164.77 1001.3 1158.18 1014.13 cv
1152.79 1024.62 1145.34 1033.53 1138.22 1042.75 cv
1138.18 1034.74 1138.01 1026.72 1137.7 1018.7 cv
1138.22 1018.47 1138.73 1018.11 1139.21 1017.62 cv
1148.23 1008.41 1154.63 997.067 1162.73 987.092 cv
1171.86 975.844 1181.12 966.083 1189.3 953.96 cv
1205.46 930.018 1221.67 906.047 1236.89 881.491 cv
1265.02 836.105 1287.24 787.197 1323.73 747.457 cv
1324.82 746.271 1323.13 744.577 1321.96 745.687 cv
1284.49 781.056 1253.22 822.944 1224.58 865.695 cv
1208.94 889.024 1193.64 912.572 1177.98 935.887 cv
1170.15 947.545 1162.06 958.631 1156.31 971.454 cv
1151.46 982.274 1144.06 991.658 1137.75 1001.66 cv
1137.77 1000.43 1137.4 999.137 1136.56 997.902 cv
1136.14 991.684 1135.62 985.471 1135.06 979.263 cv
1135.15 979.242 1135.24 979.231 1135.33 979.196 cv
1136.45 978.747 1137.49 978.188 1138.44 977.507 cv
1139.59 977.839 1140.94 977.552 1141.76 976.311 cv
1155.45 955.756 1159.78 932.85 1165.1 909.153 cv
1170.74 884.065 1178.08 859.532 1187.24 835.503 cv
1196.48 811.263 1207.42 787.73 1218.02 764.071 cv
1228.51 740.673 1238.67 716.387 1250.2 693.545 cv
1250.97 692.002 1248.73 690.656 1247.86 692.181 cv
1241.73 702.984 1234.17 713.011 1227.91 723.824 cv
1221.27 735.295 1214.89 746.895 1208.53 758.524 cv
1196.7 780.162 1186.44 802.646 1177.38 825.573 cv
1158.6 873.078 1149.51 922.841 1136.96 972.078 cv
1136.91 972.129 1136.85 972.142 1136.79 972.2 cv
1136.15 972.914 1135.4 973.503 1134.56 973.957 cv
1133.42 962.271 1132.07 950.611 1130.44 939.008 cv
1131.33 940.619 1133.43 941.423 1134.98 939.833 cv
1149.08 925.295 1151.94 900.436 1158.06 881.572 cv
1165.29 859.267 1171.63 836.676 1178.14 814.144 cv
1191.46 767.992 1201.43 720.402 1220.38 676.194 cv
1220.85 675.098 1219.28 674.115 1218.73 675.234 cv
1198.27 717.022 1179.2 758.804 1165.76 803.44 cv
1159.01 825.862 1152.18 848.365 1146.23 871.015 cv
1143.25 882.355 1139.97 893.589 1136.55 904.807 cv
1133.4 915.114 1129.45 924.437 1129.87 935.079 cv
1129.07 929.57 1128.23 924.072 1127.33 918.59 cv
1127.57 918.339 1127.75 918.031 1127.87 917.695 cv
1129.12 919.288 1131.84 918.811 1132.41 916.792 cv
1137.99 896.866 1136.28 875.26 1139.29 854.84 cv
1142.43 833.473 1146.86 812.271 1150.83 791.045 cv
1158.95 747.56 1161.56 703.628 1169.21 660.009 cv
1169.56 658.005 1166.53 657.12 1166.12 659.157 cv
1156.86 704.719 1142.86 748.658 1134.12 794.291 cv
1130.09 815.328 1125.73 836.344 1122.96 857.596 cv
1121.37 869.844 1119.58 882.904 1120.9 895.375 cv
1116.66 886.807 1111.48 878.519 1107.73 870.088 cv
1099.37 851.323 1096.43 830.853 1091.94 810.967 cv
1088.15 794.177 1082.3 778.254 1074.94 762.715 cv
1066.28 744.434 1055.46 729.124 1056.14 707.841 cv
1056.21 705.729 1053.18 705.853 1052.94 707.841 cv
1048.19 746.841 1069.54 780.421 1076.67 817.646 cv
1080.39 837.084 1083.19 856.325 1091.09 874.644 cv
1098.1 890.918 1108.42 910.276 1124.57 918.993 cv
1124.77 919.1 1124.96 919.159 1125.16 919.212 cv
1127.13 934.289 1128.52 949.341 1129.51 964.379 cv
1126.21 958.042 1121.35 952.468 1117.38 946.514 cv
1111.28 937.344 1106.3 927.466 1101.66 917.491 cv
1091.24 895.06 1082.09 871.947 1070.71 849.975 cv
1059.69 828.71 1047.35 808.026 1032.91 788.894 cv
1017.94 769.064 1001.9 751.328 992.347 728.011 cv
991.848 726.793 989.978 727.219 990.32 728.57 cv
994.287 744.307 1002.16 758.763 1010.9 772.527 cv
1009.56 771.894 1007.41 773.145 1008.04 774.858 cv
1024.04 818.271 1041.95 860.2 1061.71 902.065 cv
1062.95 904.837 1064.22 907.597 1065.55 910.335 cv
1069.5 918.985 1073.18 927.734 1076.98 936.419 cv
1071.56 926.567 1066.14 916.716 1060.72 906.864 cv
1048.3 884.28 1035.61 861.87 1022.83 839.5 cv
1010.14 817.29 996.421 795.771 985.943 772.393 cv
984.945 770.164 981.536 771.777 982.1 774.013 cv
988.136 797.904 994.763 822.002 1005.25 844.357 cv
1016.54 868.408 1029.02 891.66 1041.79 914.968 cv
1054.9 938.913 1068.01 962.858 1081.12 986.802 cv
1093.26 1008.97 1105.5 1035.66 1124.67 1052.74 cv
1126.48 1054.35 1128.75 1054.4 1130.46 1053.46 cv
1130.46 1053.62 1130.45 1053.77 1130.44 1053.93 cv
1130.28 1054.53 1130.25 1055.14 1130.35 1055.72 cv
1130.07 1062.53 1129.71 1069.33 1129.3 1076.13 cv
1123.73 1066.38 1116.12 1058.17 1109.62 1049.02 cv
1102.49 1038.97 1096.07 1028.44 1090.02 1017.71 cv
1078.13 996.635 1067.45 974.965 1053.88 954.89 cv
1039.53 933.662 1024.1 913.055 1006.85 894.082 cv
997.427 883.72 988.151 873.231 978.932 862.683 cv
968.245 850.455 955.33 834.521 963.956 817.521 cv
964.97 815.523 962.069 813.786 960.93 815.753 cv
949.155 836.08 966.115 859.082 977.506 875.543 cv
995.183 901.089 1014.88 925.454 1031.44 951.743 cv
1046.08 974.975 1057.18 1000.35 1070.27 1024.46 cv
1082.17 1046.37 1096.55 1075 1119.56 1086.93 cv
1122.92 1088.67 1126.48 1087.68 1128.65 1085.41 cv
1127.98 1094.99 1127.18 1104.56 1126.29 1114.14 cv
1120.26 1107.66 1112.74 1102.08 1106.97 1095.51 cv
1098.29 1085.64 1090.77 1074.84 1083.8 1063.71 cv
1069.88 1041.51 1057.62 1018.42 1044.38 995.828 cv
1024.43 961.799 997.619 932.111 974.423 900.215 cv
973.262 893.277 972.519 886.227 972.269 879.051 cv
972.173 876.349 968.14 876.339 968.063 879.051 cv
967.946 883.199 967.995 887.314 968.166 891.402 cv
960.591 880.481 953.521 869.25 947.397 857.435 cv
946.465 855.635 943.912 857.214 944.718 859.001 cv
952.101 875.359 960.329 890.815 969.339 905.913 cv
975.05 953.093 998.074 996.411 1020.68 1037.96 cv
1035.06 1064.39 1049.94 1090.94 1066.45 1116.11 cv
1074.92 1129.02 1083.78 1141.67 1093.15 1153.95 cv
1100.21 1163.21 1107.32 1176.27 1118.7 1180.19 cv
1117.59 1188.47 1116.41 1196.76 1115.21 1205.06 cv
1113.68 1202.45 1111.91 1199.94 1110.18 1197.12 cv
1106.73 1191.51 1104.31 1185.42 1100.8 1179.84 cv
1092.94 1167.37 1084.21 1155.33 1075.86 1143.17 cv
1059.56 1119.45 1043.27 1095.75 1027.23 1071.85 cv
1011.65 1048.63 996.242 1025.28 980.521 1002.16 cv
964.609 978.76 945.434 952.64 938.821 924.773 cv
938.388 922.952 935.233 923.293 935.478 925.226 cv
938.796 951.528 952.521 974.059 965.126 996.891 cv
979.815 1023.5 994.181 1050.24 1009.33 1076.6 cv
1024.04 1102.17 1039.81 1127.28 1055.88 1152 cv
1064.37 1165.06 1072.87 1178.23 1082.1 1190.77 cv
1086.57 1196.84 1092.01 1201.95 1096.64 1207.88 cv
1100.81 1213.22 1103.54 1217.57 1109.27 1221.28 cv
1110.39 1222.01 1111.55 1222.29 1112.67 1222.25 cv
1110.71 1235.19 1108.74 1248.12 1106.77 1261.04 cv
1102.82 1250.11 1095.79 1239.75 1090.42 1229.65 cv
1083.82 1217.24 1077.32 1204.77 1070.31 1192.6 cv
1056.31 1168.29 1038.27 1147.03 1022.87 1123.68 cv
991.831 1076.63 967.206 1026.84 945.319 975.004 cv
944.554 973.19 941.446 974.488 942.118 976.354 cv
960.85 1028.36 977.238 1083.31 1007.42 1130.04 cv
1022.17 1152.88 1040.01 1173.4 1053.85 1196.86 cv
1061.36 1209.59 1068.21 1222.7 1075.16 1235.75 cv
1081.74 1248.11 1087.36 1262.62 1096.7 1273.11 cv
1099.04 1275.74 1102.26 1275.72 1104.76 1274.27 cv
1103.01 1285.8 1101.27 1297.32 1099.54 1308.85 cv
1093.8 1300.96 1087.44 1293.57 1081.91 1285.37 cv
1074.22 1273.95 1067.58 1261.86 1061.21 1249.66 cv
1047.99 1224.33 1036.74 1197.89 1021.9 1173.43 cv
991.171 1122.78 949.424 1079.84 920.52 1027.82 cv
919.524 1026.03 916.39 1027.24 917.133 1029.25 cv
938.018 1085.57 977.115 1133.09 1006.35 1185.05 cv
1020.37 1209.96 1032.03 1236.06 1045.4 1261.31 cv
1057.79 1284.68 1072.99 1313.97 1096.61 1327.4 cv
1096.66 1327.43 1096.71 1327.44 1096.76 1327.47 cv
1095.24 1337.7 1093.75 1347.93 1092.26 1358.16 cv
1084.46 1335.41 1071.68 1314.91 1059.77 1294.04 cv
1045.22 1268.53 1032.05 1241.97 1015.67 1217.59 cv
983.255 1169.36 957.699 1117.18 928.784 1066.89 cv
927.766 1065.12 925.308 1066.67 926.104 1068.45 cv
950.197 1122.41 976.923 1174.98 1000.11 1229.37 cv
1011.01 1254.92 1025.49 1279.09 1039.17 1303.24 cv
1053.16 1327.94 1066.77 1353.22 1088.15 1372.45 cv
1088.73 1372.97 1089.39 1373.3 1090.06 1373.47 cv
1087.35 1392.45 1084.76 1411.45 1082.26 1430.46 cv
1080.7 1425.13 1078.86 1420 1077.48 1415.51 cv
1072.69 1399.96 1067.53 1384.52 1061.49 1369.41 cv
1049.58 1339.64 1036.06 1309.66 1018.31 1282.85 cv
987.448 1236.23 941.908 1195 892.901 1168.17 cv
891.086 1167.18 889.542 1169.84 891.282 1170.94 cv
915.68 1186.39 937.223 1204.31 955.67 1226.54 cv
974.279 1248.97 988.9 1273.55 1003.67 1298.56 cv
1019.72 1325.74 1033.09 1354.29 1044.69 1383.63 cv
1050.41 1398.09 1056 1412.58 1061.22 1427.22 cv
1065.2 1438.37 1068.65 1452.83 1078.46 1460.21 cv
1075.87 1481.05 1073.41 1501.91 1071.22 1522.84 cv
1065.23 1579.95 1064.06 1638.52 1071.86 1695.53 cv
1072.94 1703.39 1086.51 1701.61 1085.82 1693.64 cv
1081.34 1641.51 1079.95 1590 1080.8 1537.69 cv
1081.22 1511.93 1083.16 1486.19 1085.91 1460.52 cv
1106.66 1467.62 1132.51 1426.27 1140.38 1412.48 cv
1148.45 1398.37 1154.86 1383.49 1163.76 1369.83 cv
1173.16 1355.42 1183.38 1341.64 1193.94 1328.06 cv
1213.2 1303.28 1234.32 1278.58 1253.31 1252.58 cv
1264.96 1240.7 1276.32 1228.43 1287.68 1216.56 cv
1307.52 1195.85 1325.57 1174.1 1343.94 1152.16 cv
1346.48 1149.12 1342.54 1145.04 1339.55 1147.77 cv
1323.74 1162.19 1307.39 1176.12 1291.23 1190.22 cv
1294.67 1182.82 1297.77 1175.27 1300.46 1167.54 cv
1301.47 1164.65 1297.25 1163.15 1295.71 1165.53 cv
1284.64 1182.65 1273.48 1199.55 1261.66 1216.03 cv
1245.68 1229.55 1229.38 1242.58 1213.49 1256.25 cv
1193.13 1273.77 1172.88 1291.42 1152.14 1308.5 cv
1141.18 1317.53 1129.81 1326.08 1119.63 1335.98 cv
1113.8 1341.65 1106.28 1347.51 1100.36 1354.05 cv
1101.8 1344.74 1103.28 1335.42 1104.79 1326.1 cv
1105.63 1325.23 1106.23 1324.16 1106.51 1323 cv
1106.62 1322.98 1106.72 1323 1106.83 1322.98 cv
1111.71 1321.92 1115.8 1323.49 1120.86 1321.53 cv
1126.55 1319.33 1132.02 1315.72 1137.06 1312.35 cv
1147.08 1305.63 1156.33 1297.64 1165.05 1289.32 cv
1186.51 1268.86 1206.01 1246.16 1225.95 1224.23 cv
1245.9 1202.27 1265 1179.49 1284.5 1157.12 cv
1303.58 1135.23 1323.83 1114.39 1341.16 1091.1 cv
1342.39 1089.45 1339.86 1087.9 1338.49 1089.04 cv
1316.32 1107.46 1296.78 1128.66 1276.11 1148.73 cv
1255.48 1168.77 1234.38 1188.42 1214.19 1208.88 cv
1194.94 1228.37 1176.04 1248.21 1156.72 1267.63 cv
1147.18 1277.21 1137.14 1285.93 1126.4 1294.12 cv
1121.48 1297.88 1116.06 1301.23 1111.36 1305.25 cv
1109.63 1306.74 1108.46 1308.45 1107.39 1310.18 cv
1109.55 1297.04 1111.72 1283.9 1113.88 1270.75 cv
1115.43 1271.8 1117.41 1272.33 1119.33 1272.02 cv
1140.8 1268.49 1160.62 1245.64 1175.87 1231.38 cv
1196.82 1211.79 1217.9 1192.34 1238.61 1172.49 cv
1258.69 1153.23 1279.07 1134.24 1298.09 1113.91 cv
1307.33 1104.03 1315.46 1093.19 1324.69 1083.27 cv
1335.01 1072.19 1346.43 1061.92 1355.8 1049.99 cv
1356.69 1048.85 1355.54 1046.81 1354.1 1047.79 cv
1343.5 1055.01 1334.01 1063.83 1324.2 1072.06 cv
1313.73 1080.83 1302.56 1088.53 1291.77 1096.86 cv
1269.05 1114.4 1248.2 1134.42 1227.02 1153.74 cv
1206.44 1172.5 1186.18 1191.61 1165.84 1210.62 cv
1156.68 1219.19 1147.58 1227.81 1138.48 1236.45 cv
1131.2 1243.35 1122.65 1249.54 1116.08 1257.22 cv
1117.95 1245.71 1119.79 1234.19 1121.56 1222.67 cv
1122.89 1223.29 1124.42 1223.51 1125.91 1223.11 cv
1138.2 1219.78 1147.67 1207.6 1157.29 1199.61 cv
1168.3 1190.47 1179.36 1181.46 1190.12 1172.01 cv
1212.75 1152.12 1235.86 1132.85 1258.97 1113.54 cv
1281.37 1094.82 1304.51 1076.85 1325.88 1056.97 cv
1347.91 1036.47 1371.65 1018.9 1394.69 999.652 cv
1395.8 998.722 1394.38 997.003 1393.17 997.687 cv
1380.06 1005.13 1367.63 1013.37 1355.25 1022 cv
1343 1030.53 1329.54 1037.41 1316.71 1045.08 cv
1291.53 1060.13 1268.4 1078.49 1245.34 1096.56 cv
1222.27 1114.64 1199.99 1133.83 1177.92 1153.1 cv
1166.56 1163.02 1155.74 1173.38 1145.11 1184.07 cv
1138.7 1190.52 1130.32 1196.82 1124.31 1204.29 cv
1125.65 1195.06 1126.95 1185.83 1128.17 1176.59 cv
1129.44 1176.88 1130.8 1176.76 1132.06 1176 cv
1144.86 1168.29 1156.29 1157.58 1168.09 1148.48 cv
1180.23 1139.12 1191.63 1128.36 1202.79 1117.86 cv
1225.09 1096.9 1246.73 1075.23 1269.08 1054.32 cv
1307.44 1018.44 1361.75 1002.19 1395.73 961.537 cv
1397.03 959.978 1395.28 957.05 1393.36 958.471 cv
cp
f
485.434 492.28 mo
485.434 492.267 485.439 492.254 485.439 492.242 cv
489.529 495.097 493.524 498.054 497.478 501.056 cv
497.537 501.188 497.595 501.321 497.655 501.453 cv
493.449 498.538 489.315 495.542 485.434 492.28 cv
cp
827.346 564.445 mo
797.391 609.802 785.755 662.108 770.062 713.331 cv
762.114 739.273 753.95 764.744 743.942 789.972 cv
734.486 813.812 722.778 835.525 711.298 858.15 cv
710.311 854.87 709.337 851.586 708.333 848.311 cv
709.404 846.328 709.532 843.806 708.727 841.635 cv
709.851 841.271 710.952 840.586 711.944 839.398 cv
744.796 800.062 752.271 751.404 762.89 702.95 cv
769.182 674.239 776.035 645.616 783.646 617.225 cv
791.176 589.132 798.331 560.467 813.612 535.413 cv
814.71 533.613 812.026 531.411 810.625 533.107 cv
794.988 552.033 788.148 575.64 780.974 598.705 cv
772.242 626.776 763.967 654.979 756.52 683.418 cv
743.76 732.135 734.458 787.357 701.846 827.457 cv
699.137 819.013 696.366 810.589 693.502 802.202 cv
693.92 802.024 694.338 801.812 694.754 801.523 cv
714.052 788.146 718.124 756.14 723.399 734.877 cv
730.335 706.918 734.953 678.602 740.051 650.274 cv
744.986 622.854 749.782 595.214 756.357 568.138 cv
763.292 539.583 772.796 512.169 782.897 484.612 cv
783.464 483.067 781.003 482.047 780.244 483.494 cv
755.342 530.904 741.004 585.631 728.217 637.371 cv
721.709 663.705 714.703 689.899 708.162 716.219 cv
704.852 729.542 701.562 742.891 697.725 756.074 cv
694.979 765.504 690.313 774.51 687.05 783.796 cv
684.398 776.407 681.697 769.04 678.896 761.717 cv
679.262 761.547 679.627 761.339 679.99 761.085 cv
699.332 747.539 700.146 715.087 703.12 693.743 cv
706.842 667.025 708.976 640.193 711.455 613.343 cv
716.59 557.752 720.511 502.124 738.183 448.805 cv
738.939 446.522 735.29 444.919 734.248 447.146 cv
712.575 493.505 701.486 544.428 695.458 595.02 cv
692.366 620.978 689.515 646.965 686.413 672.923 cv
684.708 687.175 682.833 701.463 680.209 715.581 cv
678.408 725.268 674.58 734.232 671.706 743.459 cv
668.075 734.493 664.35 725.572 660.446 716.744 cv
660.995 715.357 661.118 713.819 660.708 712.405 cv
662.858 712.427 664.999 711.473 666.252 709.257 cv
677.378 689.583 678.296 661.419 679.066 639.235 cv
679.908 615.027 678.865 590.492 677.577 566.314 cv
674.873 515.567 668.048 464.928 663.298 414.331 cv
663.114 412.379 660.143 412.3 660.194 414.331 cv
661.439 463.351 661.284 512.475 663.605 561.448 cv
664.761 585.827 665.429 610.061 663.4 634.4 cv
662.391 646.524 661.289 658.581 659.477 670.624 cv
657.87 681.305 654.734 691.827 654.083 702.606 cv
648.684 690.992 643.058 679.5 637.084 668.2 cv
638.945 669.865 642.277 670.064 643.942 668.068 cv
650.695 659.983 649.83 649.941 650.824 639.697 cv
651.952 628.083 652.944 616.454 653.794 604.816 cv
655.555 580.746 656.972 556.534 656.566 532.394 cv
655.739 483.217 651.267 433.935 646.412 384.997 cv
646.262 383.486 643.922 383.432 644.009 384.997 cv
646.68 433.464 645.207 481.485 642.327 529.895 cv
640.94 553.2 640.052 576.531 638.486 599.828 cv
637.704 611.468 636.783 623.1 635.722 634.718 cv
634.833 644.452 631.768 654.882 634.929 664.117 cv
629.118 653.296 623.026 642.633 616.614 632.157 cv
618.445 632.223 620.402 631.316 621.447 629.806 cv
627.509 621.051 627.022 608.231 627.69 597.852 cv
628.428 586.392 628.666 574.874 628.793 563.395 cv
629.056 539.606 628.498 515.732 626.3 492.039 cv
621.937 445.01 609.245 398.733 596.401 353.4 cv
596.065 352.216 594.312 352.714 594.566 353.906 cv
604.677 401.162 607.274 448.854 609.93 496.951 cv
611.197 519.919 612.141 542.846 611.864 565.856 cv
611.726 577.356 611.123 588.821 610.734 600.311 cv
610.479 607.854 609.463 615.589 610.815 622.882 cv
607.396 617.514 603.919 612.179 600.321 606.916 cv
598.223 603.848 596.088 600.806 593.919 597.788 cv
596.569 596.972 598.75 594.788 598.792 591.201 cv
599.032 570.983 599.112 550.753 596.58 530.654 cv
594.106 511.011 587.419 494.603 578.904 476.901 cv
560.149 437.917 539.896 399.705 519.774 361.416 cv
519.042 360.023 517.081 361.246 517.699 362.629 cv
534.119 399.365 551.356 435.729 567.817 472.435 cv
583.666 507.777 584.77 546.917 584.437 585.084 cv
580.676 580.196 576.848 575.361 572.906 570.623 cv
574.095 570.018 575.007 568.912 575.252 567.19 cv
581.018 526.614 556.538 486.486 534.107 454.763 cv
522.783 438.749 510.323 423.543 496.843 409.296 cv
481.848 393.446 463.85 378.781 458.806 356.516 cv
458.505 355.188 456.525 355.758 456.778 357.075 cv
459.837 372.985 469.282 385.272 479.882 397.078 cv
493.838 412.622 507.388 428.15 519.365 445.332 cv
544.001 480.677 562.479 517.214 564.166 560.404 cv
559.181 554.753 554.075 549.213 548.821 543.822 cv
549.424 543.059 549.733 542.043 549.464 540.832 cv
531.449 459.799 459.411 406.518 401.526 353.417 cv
399.715 351.755 397.2 354.285 398.837 356.106 cv
449.981 413.068 520.163 458.102 540.792 535.745 cv
539.103 534.11 537.393 532.5 535.659 530.912 cv
532.473 527.889 529.26 524.895 525.97 521.986 cv
527.513 521.707 528.974 520.28 528.421 518.5 cv
517.469 483.27 488.9 454.021 461.061 431.227 cv
427.203 403.505 389.123 381.447 355.28 353.693 cv
353.613 352.327 351.212 354.628 352.873 356.101 cv
384.082 383.765 420.075 404.905 452.555 430.923 cv
483.208 455.48 506.446 483.226 522.52 518.968 cv
516.352 513.638 510.035 508.479 503.55 503.535 cv
503.593 503.193 503.567 502.821 503.395 502.404 cv
471.906 426.175 383.625 407.357 322.457 363.106 cv
320.927 362 319.534 364.503 320.991 365.613 cv
378.104 409.14 463.406 428.556 496.12 498.02 cv
492.428 495.343 488.705 492.707 484.914 490.163 cv
484.968 489.563 484.818 488.911 484.389 488.249 cv
465.666 459.453 435.732 441.645 405.827 426.244 cv
367.097 406.299 328.25 386.581 289.416 366.834 cv
288.445 366.341 287.594 367.768 288.558 368.304 cv
323.823 387.922 359.223 407.302 394.456 426.978 cv
418.822 440.586 444.34 453.481 463.893 473.225 cv
440.389 458.727 414.621 447.483 388.356 439.527 cv
371.278 434.354 353.936 431.055 336.328 428.341 cv
316.845 425.337 296.139 420.872 285.71 402.18 cv
284.887 400.702 282.734 402.002 283.463 403.494 cv
298.705 434.704 341.068 431.736 370.027 438.937 cv
404.281 447.455 435.608 461.817 465.325 480.14 cv
432.593 464.086 397.368 452.22 362.032 444.314 cv
323.514 435.696 276.375 438.442 243.653 413.683 cv
242.036 412.458 239.885 415.22 241.469 416.513 cv
271.647 441.142 312.87 439.728 349.274 447.039 cv
395.786 456.378 438.984 473.281 481.076 494.866 cv
482.132 495.408 483.137 495.266 483.922 494.78 cv
493.01 503.377 504.055 509.988 513.87 517.775 cv
528.375 529.286 540.892 542.318 553.728 555.509 cv
514.778 531.701 471.342 511.387 428.198 498.357 cv
404.885 491.316 380.837 488.104 356.62 486.166 cv
328.924 483.95 301.373 482.548 275.435 471.628 cv
274.088 471.061 273.079 473.418 274.431 474.007 cv
295.005 482.961 316.864 486.109 338.987 488.684 cv
366.6 491.896 392.811 496.522 419.465 504.516 cv
471.662 520.17 516.553 547.88 564.655 572.328 cv
566.591 573.312 568.375 572.808 569.539 571.672 cv
574.644 577.996 579.576 584.47 584.377 591.051 cv
584.377 591.101 584.377 591.151 584.375 591.201 cv
584.333 594.846 586.537 597.038 589.229 597.821 cv
590.469 599.579 591.67 601.367 592.891 603.141 cv
570.648 587.49 544.451 575.618 520.68 562.538 cv
495.564 548.717 471.008 539.212 442.708 534.223 cv
413.643 529.098 384.519 524.253 355.442 519.186 cv
327.735 514.357 296.884 512.316 271.836 498.571 cv
269.971 497.548 268.346 500.321 270.168 501.424 cv
292.271 514.803 318.78 518.335 343.635 523.76 cv
373.293 530.232 403.178 536.071 432.651 543.338 cv
461.287 550.399 487.471 560.942 513.289 575.182 cv
538.464 589.066 563.404 605.976 590.02 616.861 cv
590.77 617.167 591.459 617.29 592.119 617.333 cv
598.03 623.063 604.326 628.489 610.125 634.33 cv
595.716 632.553 585.284 624.942 572.472 617.988 cv
560.606 611.548 548.477 605.547 536.084 600.187 cv
512.201 589.856 487.608 580.677 462.474 573.886 cv
409.86 559.671 356.561 548.203 303.501 535.827 cv
301.875 535.447 301.185 537.902 302.81 538.337 cv
358.463 553.241 414.021 567.331 468.228 587 cv
495.297 596.823 522 607.28 547.912 619.897 cv
560.744 626.145 572.897 633.457 585.463 640.172 cv
594.715 645.116 605.837 649.757 615.155 643.085 cv
615.923 642.536 616.425 641.848 616.774 641.122 cv
623.573 652.847 629.979 664.824 636.083 676.961 cv
635.795 676.784 635.499 676.614 635.162 676.477 cv
582.217 654.942 534.209 623.339 480.875 602.393 cv
427.528 581.442 371.741 568.225 316.616 552.906 cv
315.122 552.491 314.498 554.778 315.978 555.223 cv
370.855 571.713 425.181 590.328 478.156 612.256 cv
531.026 634.141 578.807 666.92 632.183 687.29 cv
636.085 688.78 638.64 685.873 638.876 682.623 cv
642.716 690.423 646.419 698.292 650 706.209 cv
598.311 689.298 554.935 657.285 505.814 634.425 cv
454.059 610.34 398.782 592.548 345.375 572.462 cv
343.747 571.849 342.56 574.609 344.18 575.298 cv
398.68 598.496 453.399 620.911 506.106 648.042 cv
553.67 672.525 599.54 709.889 652.88 720.797 cv
654.168 721.06 655.322 720.958 656.346 720.64 cv
660.409 730.089 664.295 739.599 668.023 749.141 cv
619.547 723.231 568.228 701.427 518.147 678.92 cv
470.915 657.693 424.556 631.246 372.97 622.169 cv
371.035 621.829 370.172 624.714 372.146 625.162 cv
423.555 636.83 471.09 665.768 517.177 690.496 cv
565.534 716.441 614.092 743.835 664.247 766.149 cv
667.966 767.804 671.508 766.802 673.919 764.656 cv
675.318 768.431 676.709 772.207 678.058 775.986 cv
680.178 781.93 682.22 787.903 684.267 793.875 cv
684.223 794.184 684.259 794.493 684.258 794.803 cv
672.574 790.401 661.198 786.538 649.831 780.688 cv
638.265 774.735 626.765 768.653 615.313 762.481 cv
590.976 749.362 567.039 735.549 542.856 722.157 cv
495.186 695.755 447.725 668.977 400.041 642.605 cv
398.743 641.887 397.601 643.838 398.878 644.594 cv
447.904 673.574 495.563 704.734 544.411 733.998 cv
568.107 748.194 592.164 761.853 616.347 775.202 cv
629.028 782.202 641.741 789.221 654.65 795.795 cv
664.536 800.828 675.57 806.822 686.912 805.946 cv
687.408 805.908 687.854 805.802 688.275 805.667 cv
691.723 815.982 695.044 826.344 698.311 836.725 cv
674.353 834.732 653.937 821.723 634.31 808.529 cv
612.434 793.825 590.827 778.741 569.02 763.934 cv
524.71 733.846 480.904 703.039 436.513 673.07 cv
434.876 671.965 433.505 674.522 434.998 675.665 cv
480.374 710.411 526.559 744.101 571.808 779.011 cv
592.967 795.335 614.188 812.056 636.245 827.143 cv
656.105 840.729 677.759 850.943 702.159 851.687 cv
702.443 851.695 702.689 851.65 702.956 851.632 cv
704.457 856.526 705.891 861.441 707.359 866.345 cv
706.73 868.546 706.969 870.752 707.757 872.718 cv
701.208 871.11 694.471 869.837 688.24 867.258 cv
676.372 862.345 665.227 855.737 654.216 849.169 cv
630.972 835.3 608.069 820.886 584.666 807.277 cv
537.311 779.739 489.398 752.897 439.741 729.713 cv
437.554 728.692 435.625 731.844 437.819 732.998 cv
488.484 759.616 538.913 786.5 587.443 816.896 cv
610.878 831.572 633.544 847.238 656.512 862.604 cv
669.858 871.53 691.464 885.923 709.986 886.747 cv
711.062 887.586 712.407 888.136 713.82 888.318 cv
717.084 899.555 720.282 910.809 723.436 922.073 cv
717.548 917.719 711.055 913.94 705.24 909.965 cv
693.832 902.166 682.313 894.534 670.757 886.956 cv
648.298 872.228 624.546 859.844 601.258 846.521 cv
558.136 821.852 516.673 790.169 468.258 776.572 cv
466.754 776.15 466.173 778.386 467.62 778.889 cv
491.894 787.34 513.819 800.482 535.42 814.195 cv
557.362 828.124 579.859 841.499 600.999 856.626 cv
622.242 871.827 642.891 887.791 664.513 902.462 cv
675.283 909.769 686.007 917.144 696.75 924.488 cv
706.529 931.174 715.985 939.422 727.256 943.298 cv
728.03 943.563 728.749 943.67 729.433 943.684 cv
732.346 954.283 735.236 964.885 738.089 975.487 cv
756.855 1045.21 772.771 1115.76 785.012 1186.93 cv
798.806 1267.14 805.417 1348.21 809.779 1429.38 cv
810.25 1438.14 823.552 1438.28 823.495 1429.38 cv
822.554 1281.66 786.441 1134.91 748.65 993.01 cv
744.513 977.476 740.346 961.823 736.119 946.132 cv
737.291 946.099 738.511 945.846 739.737 945.259 cv
750.188 940.26 754.415 926.009 758.78 915.96 cv
763.832 904.328 768.102 892.459 771.692 880.297 cv
779.251 854.691 783.871 828.485 787.989 802.144 cv
796.317 748.878 804.087 697.063 822.564 646.206 cv
823.486 643.669 819.563 642.115 818.264 644.393 cv
792.907 688.876 783.461 741.981 773.004 791.45 cv
767.651 816.77 762.064 842.151 754.64 866.958 cv
751.064 878.901 746.946 890.69 742.292 902.257 cv
739.369 909.521 733.812 917.717 730.623 925.909 cv
727.03 912.773 723.359 899.622 719.592 886.476 cv
719.881 886.199 720.163 885.904 720.422 885.56 cv
722.201 884.92 723.308 883.187 723.441 881.409 cv
726.668 876.75 729.484 871.879 731.818 866.654 cv
732.206 865.784 732.624 864.879 733.045 863.96 cv
760.943 824.989 770.626 771.902 779.742 726.543 cv
790.796 671.542 804.231 616.31 830.89 566.518 cv
832.144 564.176 828.798 562.246 827.346 564.445 cv
cp
.470588 .596078 .984314 rgb
f
96.7534 1377.94 mo
96.9985 1376.26 97.269 1374.56 97.5181 1372.87 cv
98.1025 1372.93 98.7168 1372.92 99.3579 1372.81 cv
111.279 1370.81 123.603 1360.67 133.765 1354.29 cv
144.728 1347.42 154.567 1339.13 164.6 1330.97 cv
170.61 1326.08 176.584 1321.15 182.534 1316.19 cv
182.021 1316.84 181.5 1317.48 180.989 1318.13 cv
162.289 1341.97 144.414 1366.51 127.171 1391.42 cv
119.447 1402.57 112.439 1414.41 103.152 1424.37 cv
99.1929 1428.62 93.6333 1432.08 88.7676 1435.95 cv
91.1895 1416.56 93.9492 1397.22 96.7534 1377.94 cv
cp
104.269 985.934 mo
110.96 994.731 118.885 1002.59 128.369 1007.07 cv
129.328 1007.52 130.271 1007.72 131.176 1007.75 cv
131.292 1018.7 131.173 1029.64 130.886 1040.58 cv
125.096 1021.63 113.974 1003.16 104.269 985.934 cv
cp
128.519 974.972 mo
129.089 975.076 129.657 975.032 130.177 974.876 cv
130.46 980.334 130.675 985.789 130.843 991.243 cv
124.441 983.932 118.258 976.824 112.479 969.257 cv
112.445 968.349 112.25 967.406 111.834 966.449 cv
111.519 965.728 111.206 965.006 110.892 964.286 cv
115.915 969.69 121.717 973.74 128.519 974.972 cv
cp
16.0957 783.079 mo
14.8711 780.341 13.6147 777.608 12.4009 774.87 cv
13.7852 777.014 15.2017 779.095 16.6084 781.209 cv
16.2329 781.723 16.0264 782.355 16.0957 783.079 cv
cp
44.6929 1383.63 mo
50.4136 1398.09 56.0039 1412.58 61.2251 1427.22 cv
65.1973 1438.37 68.6514 1452.83 78.458 1460.21 cv
75.8711 1481.05 73.4146 1501.91 71.2207 1522.84 cv
65.2349 1579.95 64.0635 1638.52 71.8589 1695.53 cv
72.9351 1703.39 86.5088 1701.61 85.8218 1693.64 cv
81.3364 1641.51 79.9521 1590 80.8047 1537.69 cv
81.2251 1511.93 83.1636 1486.19 85.9116 1460.52 cv
106.658 1467.62 132.506 1426.27 140.384 1412.48 cv
148.445 1398.37 154.858 1383.49 163.761 1369.83 cv
173.157 1355.42 183.384 1341.64 193.936 1328.06 cv
213.199 1303.28 234.32 1278.58 253.308 1252.58 cv
264.961 1240.7 276.319 1228.43 287.682 1216.56 cv
307.518 1195.85 325.57 1174.1 343.937 1152.16 cv
346.478 1149.12 342.54 1145.04 339.547 1147.77 cv
323.74 1162.19 307.392 1176.12 291.228 1190.22 cv
294.669 1182.82 297.773 1175.27 300.464 1167.54 cv
301.469 1164.65 297.246 1163.15 295.706 1165.53 cv
284.644 1182.65 273.478 1199.55 261.659 1216.03 cv
245.685 1229.55 229.375 1242.58 213.493 1256.25 cv
193.13 1273.77 172.881 1291.42 152.139 1308.5 cv
141.176 1317.53 129.81 1326.08 119.633 1335.98 cv
113.804 1341.65 106.281 1347.51 100.357 1354.05 cv
101.802 1344.74 103.279 1335.42 104.788 1326.1 cv
105.625 1325.23 106.226 1324.16 106.513 1323 cv
106.62 1322.98 106.722 1323 106.83 1322.98 cv
111.709 1321.92 115.796 1323.49 120.857 1321.53 cv
126.549 1319.33 132.018 1315.72 137.058 1312.35 cv
147.084 1305.63 156.335 1297.64 165.054 1289.32 cv
186.514 1268.86 206.014 1246.16 225.946 1224.23 cv
245.896 1202.27 265 1179.49 284.499 1157.12 cv
303.58 1135.23 323.835 1114.39 341.158 1091.1 cv
342.39 1089.45 339.858 1087.9 338.485 1089.04 cv
316.324 1107.46 296.783 1128.66 276.11 1148.73 cv
255.477 1168.77 234.385 1188.42 214.187 1208.88 cv
194.938 1228.37 176.041 1248.21 156.716 1267.63 cv
147.181 1277.21 137.143 1285.93 126.402 1294.12 cv
121.478 1297.88 116.064 1301.23 111.363 1305.25 cv
109.625 1306.74 108.462 1308.45 107.395 1310.18 cv
109.55 1297.04 111.72 1283.9 113.877 1270.75 cv
115.426 1271.8 117.408 1272.33 119.328 1272.02 cv
140.796 1268.49 160.624 1245.64 175.874 1231.38 cv
196.822 1211.79 217.905 1192.34 238.608 1172.49 cv
258.691 1153.23 279.072 1134.24 298.088 1113.91 cv
307.333 1104.03 315.46 1093.19 324.686 1083.27 cv
335.006 1072.19 346.428 1061.92 355.795 1049.99 cv
356.688 1048.85 355.537 1046.81 354.096 1047.79 cv
343.502 1055.01 334.013 1063.83 324.199 1072.06 cv
313.726 1080.83 302.56 1088.53 291.766 1096.86 cv
269.048 1114.4 248.199 1134.42 227.017 1153.74 cv
206.443 1172.5 186.182 1191.61 165.844 1210.62 cv
156.683 1219.19 147.583 1227.81 138.484 1236.45 cv
131.204 1243.35 122.646 1249.54 116.084 1257.22 cv
117.951 1245.71 119.791 1234.19 121.556 1222.67 cv
122.892 1223.29 124.425 1223.51 125.908 1223.11 cv
138.196 1219.78 147.671 1207.6 157.289 1199.61 cv
168.297 1190.47 179.363 1181.46 190.117 1172.01 cv
212.746 1152.12 235.858 1132.85 258.972 1113.54 cv
281.372 1094.82 304.508 1076.85 325.88 1056.97 cv
347.909 1036.47 371.654 1018.9 394.69 999.652 cv
395.804 998.722 394.377 997.003 393.174 997.687 cv
380.058 1005.13 367.627 1013.37 355.251 1022 cv
343.003 1030.53 329.536 1037.41 316.709 1045.08 cv
291.533 1060.13 268.402 1078.49 245.341 1096.56 cv
222.271 1114.64 199.993 1133.83 177.921 1153.1 cv
166.556 1163.02 155.743 1173.38 145.108 1184.07 cv
138.698 1190.52 130.319 1196.82 124.31 1204.29 cv
125.654 1195.06 126.954 1185.83 128.167 1176.59 cv
129.436 1176.88 130.8 1176.76 132.057 1176 cv
144.86 1168.29 156.293 1157.58 168.089 1148.48 cv
180.228 1139.12 191.625 1128.36 202.792 1117.86 cv
225.093 1096.9 246.73 1075.23 269.079 1054.32 cv
307.44 1018.44 361.75 1002.19 395.728 961.537 cv
397.032 959.978 395.278 957.05 393.362 958.471 cv
349.929 990.692 297.45 1006.66 253.951 1038.5 cv
229.829 1056.15 208.897 1078.28 187.322 1098.87 cv
176.002 1109.67 164.324 1120.75 154.195 1132.69 cv
146.432 1141.84 137.751 1150.68 130.236 1160.21 cv
131.521 1149.58 132.695 1138.94 133.725 1128.29 cv
135.558 1128.72 137.556 1128.54 139.443 1127.49 cv
151.363 1120.81 161.097 1109.92 170.985 1100.61 cv
181.701 1090.52 192.466 1080.49 203.277 1070.5 cv
225.468 1050 248.832 1030.6 271.582 1010.66 cv
292.592 992.251 312.06 973.171 330.481 952.136 cv
348.225 931.876 366.21 913.948 381.033 891.328 cv
382.108 889.689 379.561 887.66 378.282 889.205 cv
360.732 910.39 339.635 929.974 317.046 945.571 cv
294.363 961.233 272.537 976.04 251.756 994.296 cv
230.162 1013.27 210.355 1033.57 189.661 1053.42 cv
179.043 1063.6 168.495 1073.85 157.956 1084.11 cv
150.637 1091.24 142.484 1098.31 135.662 1106.23 cv
136.164 1099.72 136.614 1093.2 136.988 1086.68 cv
137.782 1086.57 138.556 1086.24 139.215 1085.59 cv
149.058 1076 157.278 1065.64 168.066 1057.03 cv
179.292 1048.08 188.85 1038.01 198.605 1027.53 cv
217.068 1007.7 235.782 988.097 254.746 968.739 cv
272.37 950.747 292.091 933.171 306.715 912.575 cv
315.465 900.251 323.734 888.451 334.277 877.498 cv
343.999 867.398 353.615 857.356 362.679 846.654 cv
364.292 844.75 361.9 842.473 359.989 843.963 cv
337.694 861.351 318.236 881.323 295.002 897.532 cv
273.042 912.851 254.861 934.704 236.863 954.341 cv
218.533 974.34 200.416 994.54 182.533 1014.94 cv
174.218 1024.42 166.458 1033.62 159.776 1044.33 cv
153.163 1054.92 145.302 1064.12 137.683 1073.77 cv
137.685 1073.74 137.686 1073.72 137.687 1073.69 cv
137.889 1069.05 138.032 1064.4 138.127 1059.75 cv
138.523 1059.51 138.907 1059.21 139.252 1058.81 cv
149.467 1046.81 157.396 1033.24 169.257 1022.66 cv
179.932 1013.14 188.663 1003.12 197.608 991.95 cv
216.706 968.092 236.602 944.942 256.59 921.833 cv
273.988 901.718 292.297 882.059 308.471 860.93 cv
325.054 839.264 342.31 816.046 354.665 791.693 cv
355.683 789.689 352.841 787.998 351.641 789.925 cv
344.009 802.175 336.104 814.417 326.947 825.598 cv
318.089 836.415 307.338 845.433 297.232 855.028 cv
277.132 874.112 256.357 892.618 237.401 912.86 cv
217.634 933.969 199.315 956.436 181.339 979.072 cv
172.371 990.366 164.765 1001.3 158.179 1014.13 cv
152.791 1024.62 145.336 1033.53 138.224 1042.75 cv
138.178 1034.74 138.015 1026.72 137.7 1018.7 cv
138.216 1018.47 138.726 1018.11 139.208 1017.62 cv
148.227 1008.41 154.63 997.067 162.728 987.092 cv
171.86 975.844 181.117 966.083 189.301 953.96 cv
205.463 930.018 221.665 906.047 236.886 881.491 cv
265.019 836.105 287.236 787.197 323.728 747.457 cv
324.816 746.271 323.133 744.577 321.958 745.687 cv
284.488 781.056 253.225 822.944 224.575 865.695 cv
208.94 889.024 193.636 912.572 177.977 935.887 cv
170.148 947.545 162.061 958.631 156.312 971.454 cv
151.461 982.274 144.056 991.658 137.748 1001.66 cv
137.773 1000.43 137.403 999.137 136.558 997.902 cv
136.138 991.684 135.622 985.471 135.06 979.263 cv
135.15 979.242 135.24 979.231 135.329 979.196 cv
136.453 978.747 137.487 978.188 138.44 977.507 cv
139.589 977.839 140.937 977.552 141.764 976.311 cv
155.453 955.756 159.782 932.85 165.104 909.153 cv
170.737 884.065 178.08 859.532 187.242 835.503 cv
196.484 811.263 207.417 787.73 218.023 764.071 cv
228.513 740.673 238.673 716.387 250.197 693.545 cv
250.975 692.002 248.729 690.656 247.862 692.181 cv
241.725 702.984 234.172 713.011 227.914 723.824 cv
221.273 735.295 214.891 746.895 208.533 758.524 cv
196.705 780.162 186.437 802.646 177.376 825.573 cv
158.602 873.078 149.507 922.841 136.961 972.078 cv
136.907 972.129 136.846 972.142 136.793 972.2 cv
136.15 972.914 135.4 973.503 134.557 973.957 cv
133.424 962.271 132.072 950.611 130.439 939.008 cv
131.329 940.619 133.435 941.423 134.977 939.833 cv
149.084 925.295 151.942 900.436 158.059 881.572 cv
165.29 859.267 171.632 836.676 178.136 814.144 cv
191.459 767.992 201.431 720.402 220.375 676.194 cv
220.846 675.098 219.281 674.115 218.733 675.234 cv
198.271 717.022 179.196 758.804 165.759 803.44 cv
159.008 825.862 152.175 848.365 146.229 871.015 cv
143.25 882.355 139.97 893.589 136.546 904.807 cv
133.399 915.114 129.446 924.437 129.873 935.079 cv
129.073 929.57 128.233 924.072 127.334 918.59 cv
127.568 918.339 127.748 918.031 127.873 917.695 cv
129.119 919.288 131.839 918.811 132.406 916.792 cv
137.992 896.866 136.282 875.26 139.285 854.84 cv
142.428 833.473 146.861 812.271 150.828 791.045 cv
158.951 747.56 161.558 703.628 169.207 660.009 cv
169.559 658.005 166.531 657.12 166.117 659.157 cv
156.861 704.719 142.861 748.658 134.118 794.291 cv
130.087 815.328 125.73 836.344 122.962 857.596 cv
121.366 869.844 119.581 882.904 120.899 895.375 cv
116.656 886.807 111.483 878.519 107.729 870.088 cv
99.373 851.323 96.4258 830.853 91.939 810.967 cv
88.1509 794.177 82.3013 778.254 74.9375 762.715 cv
66.2749 744.434 55.4619 729.124 56.1392 707.841 cv
56.2056 705.729 53.1768 705.853 52.9351 707.841 cv
48.1909 746.841 69.5361 780.421 76.6685 817.646 cv
80.394 837.084 83.1885 856.325 91.0854 874.644 cv
98.1016 890.918 108.422 910.276 124.574 918.993 cv
124.771 919.1 124.964 919.159 125.156 919.212 cv
127.129 934.289 128.523 949.341 129.514 964.379 cv
126.206 958.042 121.346 952.468 117.383 946.514 cv
111.278 937.344 106.3 927.466 101.664 917.491 cv
91.2368 895.06 82.0908 871.947 70.7075 849.975 cv
59.6895 828.71 47.3472 808.026 32.9092 788.894 cv
21.4321 773.687 9.33105 759.701 0 743.495 cv
0 753.65 li
3.2832 760.115 7.00586 766.39 10.9043 772.527 cv
9.56006 771.894 7.41113 773.145 8.04199 774.858 cv
24.0371 818.271 41.9512 860.2 61.707 902.065 cv
62.9473 904.837 64.2197 907.597 65.5464 910.335 cv
69.5039 918.985 73.1758 927.734 76.9824 936.419 cv
71.5625 926.567 66.1421 916.716 60.7207 906.864 cv
48.2959 884.28 35.6108 861.87 22.8281 839.5 cv
15.2803 826.292 7.37549 813.326 0 800.071 cv
0 832.249 li
1.64307 836.332 3.38525 840.374 5.25488 844.357 cv
16.542 868.408 29.0244 891.66 41.7871 914.968 cv
54.8975 938.913 68.0059 962.858 81.1172 986.802 cv
93.2568 1008.97 105.504 1035.66 124.674 1052.74 cv
126.479 1054.35 128.748 1054.4 130.463 1053.46 cv
130.457 1053.62 130.446 1053.77 130.441 1053.93 cv
130.278 1054.53 130.254 1055.14 130.351 1055.72 cv
130.067 1062.53 129.712 1069.33 129.297 1076.13 cv
123.73 1066.38 116.116 1058.17 109.62 1049.02 cv
102.488 1038.97 96.0674 1028.44 90.0166 1017.71 cv
78.1265 996.635 67.4512 974.965 53.8779 954.89 cv
39.5269 933.662 24.1025 913.055 6.84912 894.082 cv
4.55029 891.554 2.2832 888.997 0 886.455 cv
0 906.703 li
10.8657 921.472 21.6968 936.274 31.4438 951.743 cv
46.0811 974.975 57.1768 1000.35 70.272 1024.46 cv
82.1709 1046.37 96.5532 1075 119.558 1086.93 cv
122.916 1088.67 126.479 1087.68 128.646 1085.41 cv
127.982 1094.99 127.176 1104.56 126.288 1114.14 cv
120.26 1107.66 112.741 1102.08 106.967 1095.51 cv
98.2866 1085.64 90.7715 1074.84 83.7979 1063.71 cv
69.8828 1041.51 57.6182 1018.42 44.3789 995.828 cv
31.5073 973.867 15.7744 953.715 0 933.61 cv
0 952.778 li
12.3813 970.831 24.6973 988.898 35.4844 1008 cv
48.355 1030.78 58.9849 1054.82 72.8901 1077.01 cv
79.5557 1087.65 86.8389 1097.93 94.9839 1107.5 cv
102.74 1116.61 111.736 1127.63 123.28 1131.62 cv
123.7 1131.76 124.117 1131.85 124.531 1131.9 cv
123.56 1141.11 122.478 1150.31 121.348 1159.52 cv
116.591 1152.97 110.174 1146.93 105.849 1141.2 cv
97.4692 1130.11 89.5176 1118.7 81.8618 1107.1 cv
66.0483 1083.13 51.3345 1058.67 36.5908 1034.04 cv
24.3472 1013.59 11.2036 992.835 0 971.283 cv
0 998.616 li
6.57813 1011.94 13.6489 1025.04 20.6797 1037.96 cv
35.0591 1064.39 49.938 1090.94 66.4487 1116.11 cv
74.9199 1129.02 83.7793 1141.67 93.1455 1153.95 cv
100.21 1163.21 107.316 1176.27 118.697 1180.19 cv
117.585 1188.47 116.413 1196.76 115.21 1205.06 cv
113.679 1202.45 111.913 1199.94 110.178 1197.12 cv
106.729 1191.51 104.313 1185.42 100.797 1179.84 cv
92.9375 1167.37 84.2109 1155.33 75.8613 1143.17 cv
59.5605 1119.45 43.27 1095.75 27.2324 1071.85 cv
18.1313 1058.28 9.08203 1044.68 0 1031.1 cv
0 1060.15 li
3.08643 1065.64 6.19043 1071.13 9.33496 1076.6 cv
24.0371 1102.17 39.8096 1127.28 55.8823 1152 cv
64.3687 1165.06 72.8662 1178.23 82.1011 1190.77 cv
86.5728 1196.84 92.0117 1201.95 96.6382 1207.88 cv
100.807 1213.22 103.544 1217.57 109.273 1221.28 cv
110.392 1222.01 111.552 1222.29 112.668 1222.25 cv
110.705 1235.19 108.735 1248.12 106.768 1261.04 cv
102.822 1250.11 95.7861 1239.75 90.416 1229.65 cv
83.8193 1217.24 77.3203 1204.77 70.3096 1192.6 cv
56.313 1168.29 38.2681 1147.03 22.8662 1123.68 cv
14.833 1111.5 7.2373 1099.14 0 1086.6 cv
0 1117.91 li
2.38379 1122.01 4.85059 1126.06 7.42529 1130.04 cv
22.1699 1152.88 40.0098 1173.4 53.8491 1196.86 cv
61.3628 1209.59 68.2144 1222.7 75.1631 1235.75 cv
81.7441 1248.11 87.3574 1262.62 96.6973 1273.11 cv
99.04 1275.74 102.258 1275.72 104.762 1274.27 cv
103.01 1285.8 101.269 1297.32 99.5381 1308.85 cv
93.7988 1300.96 87.4399 1293.57 81.9121 1285.37 cv
74.2178 1273.95 67.5762 1261.86 61.2114 1249.66 cv
47.9893 1224.33 36.7397 1197.89 21.8984 1173.43 cv
15.0576 1162.15 7.66943 1151.26 0 1140.57 cv
0 1174.08 li
2.15918 1177.71 4.2832 1181.37 6.354 1185.05 cv
20.373 1209.96 32.0269 1236.06 45.4038 1261.31 cv
57.791 1284.68 72.9927 1313.97 96.6143 1327.4 cv
96.6631 1327.43 96.7134 1327.44 96.7622 1327.47 cv
95.2427 1337.7 93.7471 1347.93 92.2642 1358.16 cv
84.4614 1335.41 71.6763 1314.91 59.772 1294.04 cv
45.2222 1268.53 32.0469 1241.97 15.665 1217.59 cv
10.2642 1209.56 5.06738 1201.4 0 1193.17 cv
0 1229.11 li
.0366211 1229.2 .074707 1229.28 .111328 1229.37 cv
11.0078 1254.92 25.4941 1279.09 39.1704 1303.24 cv
53.1567 1327.94 66.7656 1353.22 88.1484 1372.45 cv
88.7314 1372.97 89.3857 1373.3 90.0581 1373.47 cv
87.3511 1392.45 84.7642 1411.45 82.2627 1430.46 cv
80.6968 1425.13 78.8608 1420 77.478 1415.51 cv
72.6914 1399.96 67.5337 1384.52 61.4893 1369.41 cv
49.5801 1339.64 36.0625 1309.66 18.3145 1282.85 cv
12.6777 1274.34 6.54688 1266.01 0 1257.91 cv
0 1292.36 li
1.22266 1294.42 2.44482 1296.49 3.66699 1298.56 cv
19.7222 1325.74 33.0854 1354.29 44.6929 1383.63 cv
cp
.721569 .984314 .235294 rgb
f
809.779 429.382 mo
810.25 438.136 823.552 438.275 823.495 429.382 cv
822.569 284.082 787.615 139.731 750.507 0 cv
744.555 0 li
760.526 61.7334 774.204 124.086 785.012 186.932 cv
798.806 267.137 805.417 348.211 809.779 429.382 cv
cp
.470588 .596078 .984314 rgb
f
96.7534 377.945 mo
96.9985 376.255 97.269 374.564 97.5181 372.874 cv
98.1025 372.931 98.7168 372.919 99.3579 372.812 cv
111.279 370.814 123.603 360.668 133.765 354.294 cv
144.728 347.417 154.567 339.134 164.6 330.969 cv
170.61 326.079 176.584 321.147 182.534 316.188 cv
182.021 316.838 181.5 317.483 180.989 318.135 cv
162.289 341.973 144.414 366.509 127.171 391.417 cv
119.447 402.573 112.439 414.409 103.152 424.371 cv
99.1929 428.617 93.6333 432.077 88.7676 435.946 cv
91.1895 416.558 93.9492 397.218 96.7534 377.945 cv
cp
44.6929 383.633 mo
50.4136 398.092 56.0039 412.577 61.2251 427.225 cv
65.1973 438.367 68.6514 452.825 78.458 460.212 cv
75.8711 481.049 73.4146 501.914 71.2207 522.841 cv
65.2349 579.945 64.0635 638.517 71.8589 695.525 cv
72.9351 703.395 86.5088 701.61 85.8218 693.636 cv
81.3364 641.509 79.9521 589.999 80.8047 537.693 cv
81.2251 511.927 83.1636 486.188 85.9116 460.518 cv
106.658 467.623 132.506 426.271 140.384 412.48 cv
148.445 398.37 154.858 383.486 163.761 369.833 cv
173.157 355.423 183.384 341.641 193.936 328.063 cv
213.199 303.276 234.32 278.581 253.308 252.581 cv
264.961 240.702 276.319 228.431 287.682 216.563 cv
307.518 195.849 325.57 174.098 343.937 152.157 cv
346.478 149.121 342.54 145.038 339.547 147.768 cv
323.74 162.187 307.392 176.123 291.228 190.223 cv
294.669 182.824 297.773 175.271 300.464 167.537 cv
301.469 164.647 297.246 163.146 295.706 165.531 cv
284.644 182.651 273.478 199.55 261.659 216.032 cv
245.685 229.554 229.375 242.576 213.493 256.247 cv
193.13 273.774 172.881 291.42 152.139 308.503 cv
141.176 317.533 129.81 326.076 119.633 335.979 cv
113.804 341.652 106.281 347.509 100.357 354.053 cv
101.802 344.738 103.279 335.421 104.788 326.1 cv
105.625 325.234 106.226 324.163 106.513 322.996 cv
106.62 322.981 106.722 323.004 106.83 322.98 cv
111.709 321.924 115.796 323.485 120.857 321.528 cv
126.549 319.327 132.018 315.722 137.058 312.346 cv
147.084 305.629 156.335 297.639 165.054 289.322 cv
186.514 268.856 206.014 246.159 225.946 224.225 cv
245.896 202.272 265 179.491 284.499 157.122 cv
303.58 135.231 323.835 114.395 341.158 91.1035 cv
342.39 89.4468 339.858 87.8994 338.485 89.041 cv
316.324 107.455 296.783 128.66 276.11 148.732 cv
255.477 168.766 234.385 188.423 214.187 208.875 cv
194.938 228.366 176.041 248.215 156.716 267.628 cv
147.181 277.205 137.143 285.93 126.402 294.119 cv
121.478 297.875 116.064 301.233 111.363 305.252 cv
109.625 306.737 108.462 308.445 107.395 310.176 cv
109.55 297.04 111.72 283.901 113.877 270.748 cv
115.426 271.805 117.408 272.333 119.328 272.018 cv
140.796 268.495 160.624 245.644 175.874 231.384 cv
196.822 211.795 217.905 192.337 238.608 172.488 cv
258.691 153.234 279.072 134.241 298.088 113.914 cv
307.333 104.032 315.46 93.1855 324.686 83.2744 cv
335.006 72.1885 346.428 61.915 355.795 49.9902 cv
356.688 48.8545 355.537 46.8086 354.096 47.7891 cv
343.502 55.0068 334.013 63.834 324.199 72.0557 cv
313.726 80.8306 302.56 88.5273 291.766 96.8599 cv
269.048 114.396 248.199 134.423 227.017 153.742 cv
206.443 172.505 186.182 191.605 165.844 210.624 cv
156.683 219.19 147.583 227.814 138.484 236.446 cv
131.204 243.352 122.646 249.542 116.084 257.224 cv
117.951 245.711 119.791 234.194 121.556 222.667 cv
122.892 223.294 124.425 223.51 125.908 223.108 cv
138.196 219.777 147.671 207.601 157.289 199.613 cv
168.297 190.469 179.363 181.455 190.117 172.006 cv
212.746 152.119 235.858 132.854 258.972 113.54 cv
281.372 94.8223 304.508 76.853 325.88 56.9663 cv
347.775 36.5928 371.366 19.1104 394.271 0 cv
389.175 0 li
377.521 6.82471 366.361 14.2534 355.251 21.9966 cv
343.003 30.5317 329.536 37.4131 316.709 45.0796 cv
291.533 60.126 268.402 78.4932 245.341 96.563 cv
222.271 114.64 199.993 133.826 177.921 153.1 cv
166.556 163.023 155.743 173.378 145.108 184.073 cv
138.698 190.521 130.319 196.821 124.31 204.292 cv
125.654 195.062 126.954 185.828 128.167 176.588 cv
129.436 176.881 130.8 176.756 132.057 176 cv
144.86 168.285 156.293 157.579 168.089 148.478 cv
180.228 139.115 191.625 128.355 202.792 117.858 cv
225.093 96.8965 246.73 75.2271 269.079 54.3232 cv
292.738 32.1943 322.46 17.5264 349.741 0 cv
320.941 0 li
297.871 11.5449 274.873 23.186 253.951 38.4976 cv
229.829 56.1523 208.897 78.2778 187.322 98.8652 cv
176.002 109.667 164.324 120.752 154.195 132.686 cv
146.432 141.835 137.751 150.683 130.236 160.212 cv
131.521 149.579 132.695 138.939 133.725 128.292 cv
135.558 128.716 137.556 128.544 139.443 127.487 cv
151.363 120.808 161.097 109.922 170.985 100.61 cv
181.701 90.521 192.466 80.4854 203.277 70.4995 cv
225.468 50.0024 248.832 30.5977 271.582 10.6626 cv
275.602 7.13965 279.549 3.58105 283.46 0 cv
245.38 0 li
226.228 17.3086 208.299 35.5425 189.661 53.4165 cv
179.043 63.5986 168.495 73.8506 157.956 84.1138 cv
150.637 91.2427 142.484 98.3105 135.662 106.231 cv
136.164 99.7168 136.614 93.1997 136.988 86.6792 cv
137.782 86.5713 138.556 86.2363 139.215 85.5938 cv
149.058 76.0049 157.278 65.6387 168.066 57.0322 cv
179.292 48.0771 188.85 38.0137 198.605 27.5322 cv
207.197 18.3013 215.849 9.12744 224.549 0 cv
195.704 0 li
191.3 4.96826 186.909 9.94775 182.533 14.9395 cv
174.218 24.4233 166.458 33.6187 159.776 44.3271 cv
153.163 54.9219 145.302 64.1172 137.683 73.7651 cv
137.685 73.7412 137.686 73.7168 137.687 73.6924 cv
137.889 69.0518 138.032 64.4048 138.127 59.7534 cv
138.523 59.5088 138.907 59.2148 139.252 58.8091 cv
149.467 46.8135 157.396 33.2373 169.257 22.6606 cv
177.304 15.4844 184.246 8.02393 191.008 0 cv
166.282 0 li
163.417 4.51563 160.72 9.18018 158.179 14.1299 cv
152.791 24.6191 145.336 33.5273 138.224 42.751 cv
138.178 34.7393 138.015 26.7207 137.7 18.7007 cv
138.216 18.4673 138.726 18.1147 139.208 17.6221 cv
144.474 12.2402 148.849 6.13477 153.189 0 cv
138.811 0 li
138.454 .552246 138.099 1.10547 137.748 1.66162 cv
137.759 1.11572 137.679 .558594 137.528 0 cv
117.454 0 li
120.845 2.81055 124.474 5.22705 128.369 7.06738 cv
129.328 7.521 130.271 7.7207 131.176 7.75439 cv
131.292 18.7021 131.173 29.6431 130.886 40.5796 cv
126.644 26.6938 119.538 13.0684 112.225 0 cv
88.186 0 li
98.2271 18.8857 109.192 38.9482 124.674 52.7446 cv
126.479 54.3521 128.748 54.4004 130.463 53.4634 cv
130.457 53.6172 130.446 53.771 130.441 53.9253 cv
130.278 54.5332 130.254 55.1372 130.351 55.7241 cv
130.067 62.5264 129.712 69.3271 129.297 76.127 cv
123.73 66.3789 116.116 58.1689 109.62 49.0176 cv
102.488 38.9727 96.0674 28.437 90.0166 17.7119 cv
86.7031 11.8379 83.4839 5.91846 80.27 0 cv
57.6094 0 li
61.7451 8.21143 65.897 16.4092 70.272 24.4648 cv
82.1709 46.373 96.5532 74.9956 119.558 86.9331 cv
122.916 88.6753 126.479 87.6846 128.646 85.4146 cv
127.982 94.9897 127.176 104.563 126.288 114.137 cv
120.26 107.66 112.741 102.082 106.967 95.5137 cv
98.2866 85.6421 90.7715 74.8384 83.7979 63.7119 cv
70.7373 42.873 59.1216 21.2544 46.7983 0 cv
30.8398 0 li
32.4136 2.64844 33.9673 5.31104 35.4844 7.99805 cv
48.355 30.7827 58.9849 54.8203 72.8901 77.0122 cv
79.5557 87.6514 86.8389 97.9321 94.9839 107.497 cv
102.74 116.606 111.736 127.632 123.28 131.616 cv
123.7 131.761 124.117 131.848 124.531 131.902 cv
123.56 141.106 122.478 150.312 121.348 159.517 cv
116.591 152.971 110.174 146.927 105.849 141.202 cv
97.4692 130.111 89.5176 118.698 81.8618 107.097 cv
66.0483 83.1309 51.3345 58.6694 36.5908 34.0415 cv
29.8687 22.8125 22.875 11.4927 16.0791 0 cv
.688477 0 li
7.07129 12.8506 13.8926 25.4868 20.6797 37.9624 cv
35.0591 64.394 49.938 90.9424 66.4487 116.106 cv
74.9199 129.017 83.7793 141.674 93.1455 153.952 cv
100.21 163.212 107.316 176.272 118.697 180.186 cv
117.585 188.474 116.413 196.764 115.21 205.057 cv
113.679 202.448 111.913 199.939 110.178 197.119 cv
106.729 191.511 104.313 185.425 100.797 179.843 cv
92.9375 167.368 84.2109 155.326 75.8613 143.175 cv
59.5605 119.453 43.27 95.7466 27.2324 71.8457 cv
18.1313 58.2837 9.08203 44.6787 0 31.0967 cv
0 60.147 li
3.08643 65.6445 6.19043 71.1338 9.33496 76.603 cv
24.0371 102.175 39.8096 127.281 55.8823 152.004 cv
64.3687 165.058 72.8662 178.234 82.1011 190.771 cv
86.5728 196.841 92.0117 201.945 96.6382 207.877 cv
100.807 213.223 103.544 217.567 109.273 221.281 cv
110.392 222.007 111.552 222.285 112.668 222.25 cv
110.705 235.188 108.735 248.117 106.768 261.039 cv
102.822 250.111 95.7861 239.749 90.416 229.649 cv
83.8193 217.244 77.3203 204.774 70.3096 192.597 cv
56.313 168.285 38.2681 147.032 22.8662 123.682 cv
14.833 111.503 7.2373 99.1372 0 86.604 cv
0 117.91 li
2.38379 122.009 4.85059 126.059 7.42529 130.045 cv
22.1699 152.875 40.0098 173.401 53.8491 196.856 cv
61.3628 209.59 68.2144 222.702 75.1631 235.749 cv
81.7441 248.11 87.3574 262.616 96.6973 273.105 cv
99.04 275.737 102.258 275.716 104.762 274.269 cv
103.01 285.798 101.269 297.324 99.5381 308.848 cv
93.7988 300.956 87.4399 293.566 81.9121 285.366 cv
74.2178 273.948 67.5762 261.856 61.2114 249.662 cv
47.9893 224.331 36.7397 197.889 21.8984 173.429 cv
15.0576 162.154 7.66943 151.263 0 140.566 cv
0 174.075 li
2.15918 177.714 4.2832 181.369 6.354 185.049 cv
20.373 209.964 32.0269 236.061 45.4038 261.306 cv
57.791 284.684 72.9927 313.972 96.6143 327.403 cv
96.6631 327.431 96.7134 327.444 96.7622 327.471 cv
95.2427 337.699 93.7471 347.928 92.2642 358.159 cv
84.4614 335.413 71.6763 314.909 59.772 294.039 cv
45.2222 268.532 32.0469 241.97 15.665 217.593 cv
10.2642 209.556 5.06738 201.401 0 193.171 cv
0 229.109 li
.0366211 229.195 .074707 229.281 .111328 229.367 cv
11.0078 254.924 25.4941 279.09 39.1704 303.241 cv
53.1567 327.943 66.7656 353.224 88.1484 372.448 cv
88.7314 372.972 89.3857 373.304 90.0581 373.47 cv
87.3511 392.45 84.7642 411.448 82.2627 430.463 cv
80.6968 425.132 78.8608 419.999 77.478 415.508 cv
72.6914 399.957 67.5337 384.521 61.4893 369.411 cv
49.5801 339.643 36.0625 309.66 18.3145 282.854 cv
12.6777 274.34 6.54688 266.009 0 257.91 cv
0 292.359 li
1.22266 294.422 2.44482 296.488 3.66699 298.558 cv
19.7222 325.744 33.0854 354.291 44.6929 383.633 cv
cp
.721569 .984314 .235294 rgb
f
974.423 1900.21 mo
973.262 1893.28 972.519 1886.23 972.269 1879.05 cv
972.173 1876.35 968.14 1876.34 968.063 1879.05 cv
967.946 1883.2 967.995 1887.31 968.166 1891.4 cv
960.591 1880.48 953.521 1869.25 947.397 1857.43 cv
946.465 1855.63 943.912 1857.21 944.718 1859 cv
952.101 1875.36 960.329 1890.82 969.339 1905.91 cv
973.335 1938.93 985.813 1970.05 1000.69 2000 cv
1016.08 2000 li
1001.44 1975.25 987.725 1949.69 979.642 1922.5 cv
982.427 1926.83 985.254 1931.15 988.171 1935.46 cv
1002.64 1956.85 1017.65 1977.81 1030.84 2000 cv
1046.8 2000 li
1045.99 1998.61 1045.19 1997.21 1044.38 1995.83 cv
1024.43 1961.8 997.619 1932.11 974.423 1900.21 cv
cp
f
1330.48 1952.14 mo
1348.22 1931.88 1366.21 1913.95 1381.03 1891.33 cv
1382.11 1889.69 1379.56 1887.66 1378.28 1889.21 cv
1360.73 1910.39 1339.63 1929.97 1317.05 1945.57 cv
1294.36 1961.23 1272.54 1976.04 1251.76 1994.3 cv
1249.61 1996.18 1247.49 1998.09 1245.38 2000 cv
1283.46 2000 li
1299.99 1984.87 1315.58 1969.15 1330.48 1952.14 cv
cp
f
935.478 1925.23 mo
938.796 1951.53 952.521 1974.06 965.126 1996.89 cv
965.698 1997.93 966.267 1998.96 966.838 2000 cv
979.049 2000 li
963.446 1977.16 945.231 1951.79 938.821 1924.77 cv
938.388 1922.95 935.233 1923.29 935.478 1925.23 cv
cp
f
945.319 1975 mo
944.554 1973.19 941.446 1974.49 942.118 1976.35 cv
944.938 1984.18 947.704 1992.08 950.473 2000 cv
956.186 2000 li
952.484 1991.72 948.861 1983.39 945.319 1975 cv
cp
f
1306.71 1912.58 mo
1315.46 1900.25 1323.73 1888.45 1334.28 1877.5 cv
1344 1867.4 1353.62 1857.36 1362.68 1846.65 cv
1364.29 1844.75 1361.9 1842.47 1359.99 1843.96 cv
1337.69 1861.35 1318.24 1881.32 1295 1897.53 cv
1273.04 1912.85 1254.86 1934.7 1236.86 1954.34 cv
1223.02 1969.45 1209.3 1984.67 1195.7 2000 cv
1224.55 2000 li
1234.54 1989.51 1244.61 1979.09 1254.75 1968.74 cv
1272.37 1950.75 1292.09 1933.17 1306.71 1912.58 cv
cp
f
1393.17 1997.69 mo
1391.83 1998.45 1390.5 1999.22 1389.18 2000 cv
1394.27 2000 li
1394.41 1999.88 1394.55 1999.77 1394.69 1999.65 cv
1395.8 1998.72 1394.38 1997 1393.17 1997.69 cv
cp
f
1395.73 1961.54 mo
1397.03 1959.98 1395.28 1957.05 1393.36 1958.47 cv
1370.82 1975.2 1345.84 1987.54 1320.94 2000 cv
1349.74 2000 li
1366.69 1989.11 1382.71 1977.12 1395.73 1961.54 cv
cp
f
1256.59 1921.83 mo
1273.99 1901.72 1292.3 1882.06 1308.47 1860.93 cv
1325.05 1839.26 1342.31 1816.05 1354.67 1791.69 cv
1355.68 1789.69 1352.84 1788 1351.64 1789.92 cv
1344.01 1802.17 1336.1 1814.42 1326.95 1825.6 cv
1318.09 1836.42 1307.34 1845.43 1297.23 1855.03 cv
1277.13 1874.11 1256.36 1892.62 1237.4 1912.86 cv
1217.63 1933.97 1199.31 1956.44 1181.34 1979.07 cv
1175.83 1986.01 1170.84 1992.81 1166.28 2000 cv
1191.01 2000 li
1193.22 1997.38 1195.41 1994.7 1197.61 1991.95 cv
1216.71 1968.09 1236.6 1944.94 1256.59 1921.83 cv
cp
f
1006.85 1894.08 mo
997.427 1883.72 988.151 1873.23 978.932 1862.68 cv
968.245 1850.46 955.33 1834.52 963.956 1817.52 cv
964.97 1815.52 962.069 1813.79 960.93 1815.75 cv
949.155 1836.08 966.115 1859.08 977.506 1875.54 cv
995.183 1901.09 1014.88 1925.45 1031.44 1951.74 cv
1041.19 1967.21 1049.37 1983.63 1057.61 2000 cv
1080.27 2000 li
1071.95 1984.68 1063.67 1969.37 1053.88 1954.89 cv
1039.53 1933.66 1024.1 1913.05 1006.85 1894.08 cv
cp
f
1112.48 1969.26 mo
1112.44 1968.35 1112.25 1967.41 1111.83 1966.45 cv
1111.52 1965.73 1111.21 1965.01 1110.89 1964.29 cv
1115.92 1969.69 1121.72 1973.74 1128.52 1974.97 cv
1129.09 1975.08 1129.66 1975.03 1130.18 1974.88 cv
1130.46 1980.33 1130.67 1985.79 1130.84 1991.24 cv
1124.44 1983.93 1118.26 1976.82 1112.48 1969.26 cv
cp
1016.1 1783.08 mo
1014.87 1780.34 1013.62 1777.61 1012.4 1774.87 cv
1013.79 1777.01 1015.2 1779.09 1016.61 1781.21 cv
1016.23 1781.72 1016.03 1782.36 1016.1 1783.08 cv
cp
1135.06 1979.26 mo
1135.15 1979.24 1135.24 1979.23 1135.33 1979.2 cv
1136.45 1978.75 1137.49 1978.19 1138.44 1977.51 cv
1139.59 1977.84 1140.94 1977.55 1141.76 1976.31 cv
1155.45 1955.76 1159.78 1932.85 1165.1 1909.15 cv
1170.74 1884.07 1178.08 1859.53 1187.24 1835.5 cv
1196.48 1811.26 1207.42 1787.73 1218.02 1764.07 cv
1228.51 1740.67 1238.67 1716.39 1250.2 1693.54 cv
1250.97 1692 1248.73 1690.66 1247.86 1692.18 cv
1241.73 1702.98 1234.17 1713.01 1227.91 1723.82 cv
1221.27 1735.29 1214.89 1746.89 1208.53 1758.52 cv
1196.7 1780.16 1186.44 1802.65 1177.38 1825.57 cv
1158.6 1873.08 1149.51 1922.84 1136.96 1972.08 cv
1136.91 1972.13 1136.85 1972.14 1136.79 1972.2 cv
1136.15 1972.91 1135.4 1973.5 1134.56 1973.96 cv
1133.42 1962.27 1132.07 1950.61 1130.44 1939.01 cv
1131.33 1940.62 1133.43 1941.42 1134.98 1939.83 cv
1149.08 1925.3 1151.94 1900.44 1158.06 1881.57 cv
1165.29 1859.27 1171.63 1836.68 1178.14 1814.14 cv
1191.46 1767.99 1201.43 1720.4 1220.38 1676.19 cv
1220.85 1675.1 1219.28 1674.12 1218.73 1675.23 cv
1198.27 1717.02 1179.2 1758.8 1165.76 1803.44 cv
1159.01 1825.86 1152.18 1848.37 1146.23 1871.01 cv
1143.25 1882.36 1139.97 1893.59 1136.55 1904.81 cv
1133.4 1915.11 1129.45 1924.44 1129.87 1935.08 cv
1129.07 1929.57 1128.23 1924.07 1127.33 1918.59 cv
1127.57 1918.34 1127.75 1918.03 1127.87 1917.69 cv
1129.12 1919.29 1131.84 1918.81 1132.41 1916.79 cv
1137.99 1896.87 1136.28 1875.26 1139.29 1854.84 cv
1142.43 1833.47 1146.86 1812.27 1150.83 1791.04 cv
1158.95 1747.56 1161.56 1703.63 1169.21 1660.01 cv
1169.56 1658.01 1166.53 1657.12 1166.12 1659.16 cv
1156.86 1704.72 1142.86 1748.66 1134.12 1794.29 cv
1130.09 1815.33 1125.73 1836.34 1122.96 1857.6 cv
1121.37 1869.84 1119.58 1882.9 1120.9 1895.38 cv
1116.66 1886.81 1111.48 1878.52 1107.73 1870.09 cv
1099.37 1851.32 1096.43 1830.85 1091.94 1810.97 cv
1088.15 1794.18 1082.3 1778.25 1074.94 1762.72 cv
1066.28 1744.43 1055.46 1729.12 1056.14 1707.84 cv
1056.21 1705.73 1053.18 1705.85 1052.94 1707.84 cv
1048.19 1746.84 1069.54 1780.42 1076.67 1817.65 cv
1080.39 1837.08 1083.19 1856.32 1091.09 1874.64 cv
1098.1 1890.92 1108.42 1910.28 1124.57 1918.99 cv
1124.77 1919.1 1124.96 1919.16 1125.16 1919.21 cv
1127.13 1934.29 1128.52 1949.34 1129.51 1964.38 cv
1126.21 1958.04 1121.35 1952.47 1117.38 1946.51 cv
1111.28 1937.34 1106.3 1927.47 1101.66 1917.49 cv
1091.24 1895.06 1082.09 1871.95 1070.71 1849.97 cv
1059.69 1828.71 1047.35 1808.03 1032.91 1788.89 cv
1017.94 1769.06 1001.9 1751.33 992.347 1728.01 cv
991.848 1726.79 989.978 1727.22 990.32 1728.57 cv
994.287 1744.31 1002.16 1758.76 1010.9 1772.53 cv
1009.56 1771.89 1007.41 1773.14 1008.04 1774.86 cv
1024.04 1818.27 1041.95 1860.2 1061.71 1902.06 cv
1062.95 1904.84 1064.22 1907.6 1065.55 1910.33 cv
1069.5 1918.99 1073.18 1927.73 1076.98 1936.42 cv
1071.56 1926.57 1066.14 1916.72 1060.72 1906.86 cv
1048.3 1884.28 1035.61 1861.87 1022.83 1839.5 cv
1010.14 1817.29 996.421 1795.77 985.943 1772.39 cv
984.945 1770.16 981.536 1771.78 982.1 1774.01 cv
988.136 1797.9 994.763 1822 1005.25 1844.36 cv
1016.54 1868.41 1029.02 1891.66 1041.79 1914.97 cv
1054.9 1938.91 1068.01 1962.86 1081.12 1986.8 cv
1083.45 1991.07 1085.79 1995.5 1088.19 2000 cv
1112.22 2000 li
1109.56 1995.23 1106.86 1990.54 1104.27 1985.93 cv
1108.21 1991.12 1112.59 1995.97 1117.45 2000 cv
1137.53 2000 li
1137.34 1999.3 1137.03 1998.59 1136.56 1997.9 cv
1136.14 1991.68 1135.62 1985.47 1135.06 1979.26 cv
cp
f
1189.3 1953.96 mo
1205.46 1930.02 1221.67 1906.05 1236.89 1881.49 cv
1265.02 1836.11 1287.24 1787.2 1323.73 1747.46 cv
1324.82 1746.27 1323.13 1744.58 1321.96 1745.69 cv
1284.49 1781.06 1253.22 1822.94 1224.58 1865.7 cv
1208.94 1889.02 1193.64 1912.57 1177.98 1935.89 cv
1170.15 1947.54 1162.06 1958.63 1156.31 1971.45 cv
1151.73 1981.67 1144.87 1990.61 1138.81 2000 cv
1153.19 2000 li
1156.28 1995.63 1159.36 1991.24 1162.73 1987.09 cv
1171.86 1975.84 1181.12 1966.08 1189.3 1953.96 cv
cp
f
485.434 1492.28 mo
485.434 1492.27 485.439 1492.25 485.439 1492.24 cv
489.529 1495.1 493.524 1498.05 497.478 1501.06 cv
497.537 1501.19 497.595 1501.32 497.655 1501.45 cv
493.449 1498.54 489.315 1495.54 485.434 1492.28 cv
cp
736.119 1946.13 mo
737.291 1946.1 738.511 1945.85 739.737 1945.26 cv
750.188 1940.26 754.415 1926.01 758.78 1915.96 cv
763.832 1904.33 768.102 1892.46 771.692 1880.3 cv
779.251 1854.69 783.871 1828.48 787.989 1802.14 cv
796.317 1748.88 804.087 1697.06 822.564 1646.21 cv
823.486 1643.67 819.563 1642.12 818.264 1644.39 cv
792.907 1688.88 783.461 1741.98 773.004 1791.45 cv
767.651 1816.77 762.064 1842.15 754.64 1866.96 cv
751.064 1878.9 746.946 1890.69 742.292 1902.26 cv
739.369 1909.52 733.812 1917.72 730.623 1925.91 cv
727.03 1912.77 723.359 1899.62 719.592 1886.48 cv
719.881 1886.2 720.163 1885.9 720.422 1885.56 cv
722.201 1884.92 723.308 1883.19 723.441 1881.41 cv
726.668 1876.75 729.484 1871.88 731.818 1866.65 cv
732.206 1865.78 732.624 1864.88 733.045 1863.96 cv
760.943 1824.99 770.626 1771.9 779.742 1726.54 cv
790.796 1671.54 804.231 1616.31 830.89 1566.52 cv
832.144 1564.18 828.798 1562.25 827.346 1564.45 cv
797.391 1609.8 785.755 1662.11 770.062 1713.33 cv
762.114 1739.27 753.95 1764.74 743.942 1789.97 cv
734.486 1813.81 722.778 1835.53 711.298 1858.15 cv
710.311 1854.87 709.337 1851.59 708.333 1848.31 cv
709.404 1846.33 709.532 1843.81 708.727 1841.63 cv
709.851 1841.27 710.952 1840.59 711.944 1839.4 cv
744.796 1800.06 752.271 1751.4 762.89 1702.95 cv
769.182 1674.24 776.035 1645.62 783.646 1617.22 cv
791.176 1589.13 798.331 1560.47 813.612 1535.41 cv
814.71 1533.61 812.026 1531.41 810.625 1533.11 cv
794.988 1552.03 788.148 1575.64 780.974 1598.71 cv
772.242 1626.78 763.967 1654.98 756.52 1683.42 cv
743.76 1732.13 734.458 1787.36 701.846 1827.46 cv
699.137 1819.01 696.366 1810.59 693.502 1802.2 cv
693.92 1802.02 694.338 1801.81 694.754 1801.52 cv
714.052 1788.15 718.124 1756.14 723.399 1734.88 cv
730.335 1706.92 734.953 1678.6 740.051 1650.27 cv
744.986 1622.85 749.782 1595.21 756.357 1568.14 cv
763.292 1539.58 772.796 1512.17 782.897 1484.61 cv
783.464 1483.07 781.003 1482.05 780.244 1483.49 cv
755.342 1530.9 741.004 1585.63 728.217 1637.37 cv
721.709 1663.7 714.703 1689.9 708.162 1716.22 cv
704.852 1729.54 701.562 1742.89 697.725 1756.07 cv
694.979 1765.5 690.313 1774.51 687.05 1783.8 cv
684.398 1776.41 681.697 1769.04 678.896 1761.72 cv
679.262 1761.55 679.627 1761.34 679.99 1761.08 cv
699.332 1747.54 700.146 1715.09 703.12 1693.74 cv
706.842 1667.03 708.976 1640.19 711.455 1613.34 cv
716.59 1557.75 720.511 1502.12 738.183 1448.8 cv
738.939 1446.52 735.29 1444.92 734.248 1447.15 cv
712.575 1493.5 701.486 1544.43 695.458 1595.02 cv
692.366 1620.98 689.515 1646.96 686.413 1672.92 cv
684.708 1687.18 682.833 1701.46 680.209 1715.58 cv
678.408 1725.27 674.58 1734.23 671.706 1743.46 cv
668.075 1734.49 664.35 1725.57 660.446 1716.74 cv
660.995 1715.36 661.118 1713.82 660.708 1712.4 cv
662.858 1712.43 664.999 1711.47 666.252 1709.26 cv
677.378 1689.58 678.296 1661.42 679.066 1639.24 cv
679.908 1615.03 678.865 1590.49 677.577 1566.31 cv
674.873 1515.57 668.048 1464.93 663.298 1414.33 cv
663.114 1412.38 660.143 1412.3 660.194 1414.33 cv
661.439 1463.35 661.284 1512.48 663.605 1561.45 cv
664.761 1585.83 665.429 1610.06 663.4 1634.4 cv
662.391 1646.52 661.289 1658.58 659.477 1670.62 cv
657.87 1681.31 654.734 1691.83 654.083 1702.61 cv
648.684 1690.99 643.058 1679.5 637.084 1668.2 cv
638.945 1669.87 642.277 1670.06 643.942 1668.07 cv
650.695 1659.98 649.83 1649.94 650.824 1639.7 cv
651.952 1628.08 652.944 1616.45 653.794 1604.82 cv
655.555 1580.75 656.972 1556.53 656.566 1532.39 cv
655.739 1483.22 651.267 1433.93 646.412 1385 cv
646.262 1383.49 643.922 1383.43 644.009 1385 cv
646.68 1433.46 645.207 1481.49 642.327 1529.89 cv
640.94 1553.2 640.052 1576.53 638.486 1599.83 cv
637.704 1611.47 636.783 1623.1 635.722 1634.72 cv
634.833 1644.45 631.768 1654.88 634.929 1664.12 cv
629.118 1653.3 623.026 1642.63 616.614 1632.16 cv
618.445 1632.22 620.402 1631.32 621.447 1629.81 cv
627.509 1621.05 627.022 1608.23 627.69 1597.85 cv
628.428 1586.39 628.666 1574.87 628.793 1563.39 cv
629.056 1539.61 628.498 1515.73 626.3 1492.04 cv
621.937 1445.01 609.245 1398.73 596.401 1353.4 cv
596.065 1352.22 594.312 1352.71 594.566 1353.91 cv
604.677 1401.16 607.274 1448.85 609.93 1496.95 cv
611.197 1519.92 612.141 1542.85 611.864 1565.86 cv
611.726 1577.36 611.123 1588.82 610.734 1600.31 cv
610.479 1607.85 609.463 1615.59 610.815 1622.88 cv
607.396 1617.51 603.919 1612.18 600.321 1606.92 cv
598.223 1603.85 596.088 1600.81 593.919 1597.79 cv
596.569 1596.97 598.75 1594.79 598.792 1591.2 cv
599.032 1570.98 599.112 1550.75 596.58 1530.65 cv
594.106 1511.01 587.419 1494.6 578.904 1476.9 cv
560.149 1437.92 539.896 1399.71 519.774 1361.42 cv
519.042 1360.02 517.081 1361.25 517.699 1362.63 cv
534.119 1399.36 551.356 1435.73 567.817 1472.44 cv
583.666 1507.78 584.77 1546.92 584.437 1585.08 cv
580.676 1580.2 576.848 1575.36 572.906 1570.62 cv
574.095 1570.02 575.007 1568.91 575.252 1567.19 cv
581.018 1526.61 556.538 1486.49 534.107 1454.76 cv
522.783 1438.75 510.323 1423.54 496.843 1409.3 cv
481.848 1393.45 463.85 1378.78 458.806 1356.52 cv
458.505 1355.19 456.525 1355.76 456.778 1357.08 cv
459.837 1372.98 469.282 1385.27 479.882 1397.08 cv
493.838 1412.62 507.388 1428.15 519.365 1445.33 cv
544.001 1480.68 562.479 1517.21 564.166 1560.4 cv
559.181 1554.75 554.075 1549.21 548.821 1543.82 cv
549.424 1543.06 549.733 1542.04 549.464 1540.83 cv
531.449 1459.8 459.411 1406.52 401.526 1353.42 cv
399.715 1351.75 397.2 1354.29 398.837 1356.11 cv
449.981 1413.07 520.163 1458.1 540.792 1535.74 cv
539.103 1534.11 537.393 1532.5 535.659 1530.91 cv
532.473 1527.89 529.26 1524.89 525.97 1521.99 cv
527.513 1521.71 528.974 1520.28 528.421 1518.5 cv
517.469 1483.27 488.9 1454.02 461.061 1431.23 cv
427.203 1403.5 389.123 1381.45 355.28 1353.69 cv
353.613 1352.33 351.212 1354.63 352.873 1356.1 cv
384.082 1383.76 420.075 1404.9 452.555 1430.92 cv
483.208 1455.48 506.446 1483.23 522.52 1518.97 cv
516.352 1513.64 510.035 1508.48 503.55 1503.54 cv
503.593 1503.19 503.567 1502.82 503.395 1502.4 cv
471.906 1426.18 383.625 1407.36 322.457 1363.11 cv
320.927 1362 319.534 1364.5 320.991 1365.61 cv
378.104 1409.14 463.406 1428.56 496.12 1498.02 cv
492.428 1495.34 488.705 1492.71 484.914 1490.16 cv
484.968 1489.56 484.818 1488.91 484.389 1488.25 cv
465.666 1459.45 435.732 1441.64 405.827 1426.24 cv
367.097 1406.3 328.25 1386.58 289.416 1366.83 cv
288.445 1366.34 287.594 1367.77 288.558 1368.3 cv
323.823 1387.92 359.223 1407.3 394.456 1426.98 cv
418.822 1440.59 444.34 1453.48 463.893 1473.22 cv
440.389 1458.73 414.621 1447.48 388.356 1439.53 cv
371.278 1434.35 353.936 1431.05 336.328 1428.34 cv
316.845 1425.34 296.139 1420.87 285.71 1402.18 cv
284.887 1400.7 282.734 1402 283.463 1403.49 cv
298.705 1434.7 341.068 1431.74 370.027 1438.94 cv
404.281 1447.46 435.608 1461.82 465.325 1480.14 cv
432.593 1464.09 397.368 1452.22 362.032 1444.31 cv
323.514 1435.7 276.375 1438.44 243.653 1413.68 cv
242.036 1412.46 239.885 1415.22 241.469 1416.51 cv
271.647 1441.14 312.87 1439.73 349.274 1447.04 cv
395.786 1456.38 438.984 1473.28 481.076 1494.87 cv
482.132 1495.41 483.137 1495.27 483.922 1494.78 cv
493.01 1503.38 504.055 1509.99 513.87 1517.78 cv
528.375 1529.29 540.892 1542.32 553.728 1555.51 cv
514.778 1531.7 471.342 1511.39 428.198 1498.36 cv
404.885 1491.32 380.837 1488.1 356.62 1486.17 cv
328.924 1483.95 301.373 1482.55 275.435 1471.63 cv
274.088 1471.06 273.079 1473.42 274.431 1474.01 cv
295.005 1482.96 316.864 1486.11 338.987 1488.68 cv
366.6 1491.9 392.811 1496.52 419.465 1504.52 cv
471.662 1520.17 516.553 1547.88 564.655 1572.33 cv
566.591 1573.31 568.375 1572.81 569.539 1571.67 cv
574.644 1578 579.576 1584.47 584.377 1591.05 cv
584.377 1591.1 584.377 1591.15 584.375 1591.2 cv
584.333 1594.85 586.537 1597.04 589.229 1597.82 cv
590.469 1599.58 591.67 1601.37 592.891 1603.14 cv
570.648 1587.49 544.451 1575.62 520.68 1562.54 cv
495.564 1548.72 471.008 1539.21 442.708 1534.22 cv
413.643 1529.1 384.519 1524.25 355.442 1519.19 cv
327.735 1514.36 296.884 1512.32 271.836 1498.57 cv
269.971 1497.55 268.346 1500.32 270.168 1501.42 cv
292.271 1514.8 318.78 1518.34 343.635 1523.76 cv
373.293 1530.23 403.178 1536.07 432.651 1543.34 cv
461.287 1550.4 487.471 1560.94 513.289 1575.18 cv
538.464 1589.07 563.404 1605.98 590.02 1616.86 cv
590.77 1617.17 591.459 1617.29 592.119 1617.33 cv
598.03 1623.06 604.326 1628.49 610.125 1634.33 cv
595.716 1632.55 585.284 1624.94 572.472 1617.99 cv
560.606 1611.55 548.477 1605.55 536.084 1600.19 cv
512.201 1589.86 487.608 1580.68 462.474 1573.89 cv
409.86 1559.67 356.561 1548.2 303.501 1535.83 cv
301.875 1535.45 301.185 1537.9 302.81 1538.34 cv
358.463 1553.24 414.021 1567.33 468.228 1587 cv
495.297 1596.82 522 1607.28 547.912 1619.9 cv
560.744 1626.14 572.897 1633.46 585.463 1640.17 cv
594.715 1645.12 605.837 1649.76 615.155 1643.08 cv
615.923 1642.54 616.425 1641.85 616.774 1641.12 cv
623.573 1652.85 629.979 1664.82 636.083 1676.96 cv
635.795 1676.78 635.499 1676.61 635.162 1676.48 cv
582.217 1654.94 534.209 1623.34 480.875 1602.39 cv
427.528 1581.44 371.741 1568.22 316.616 1552.91 cv
315.122 1552.49 314.498 1554.78 315.978 1555.22 cv
370.855 1571.71 425.181 1590.33 478.156 1612.26 cv
531.026 1634.14 578.807 1666.92 632.183 1687.29 cv
636.085 1688.78 638.64 1685.87 638.876 1682.62 cv
642.716 1690.42 646.419 1698.29 650 1706.21 cv
598.311 1689.3 554.935 1657.29 505.814 1634.43 cv
454.059 1610.34 398.782 1592.55 345.375 1572.46 cv
343.747 1571.85 342.56 1574.61 344.18 1575.3 cv
398.68 1598.5 453.399 1620.91 506.106 1648.04 cv
553.67 1672.53 599.54 1709.89 652.88 1720.8 cv
654.168 1721.06 655.322 1720.96 656.346 1720.64 cv
660.409 1730.09 664.295 1739.6 668.023 1749.14 cv
619.547 1723.23 568.228 1701.43 518.147 1678.92 cv
470.915 1657.69 424.556 1631.25 372.97 1622.17 cv
371.035 1621.83 370.172 1624.71 372.146 1625.16 cv
423.555 1636.83 471.09 1665.77 517.177 1690.5 cv
565.534 1716.44 614.092 1743.83 664.247 1766.15 cv
667.966 1767.8 671.508 1766.8 673.919 1764.66 cv
675.318 1768.43 676.709 1772.21 678.058 1775.99 cv
680.178 1781.93 682.22 1787.9 684.267 1793.88 cv
684.223 1794.18 684.259 1794.49 684.258 1794.8 cv
672.574 1790.4 661.198 1786.54 649.831 1780.69 cv
638.265 1774.74 626.765 1768.65 615.313 1762.48 cv
590.976 1749.36 567.039 1735.55 542.856 1722.16 cv
495.186 1695.76 447.725 1668.98 400.041 1642.61 cv
398.743 1641.89 397.601 1643.84 398.878 1644.59 cv
447.904 1673.57 495.563 1704.73 544.411 1734 cv
568.107 1748.19 592.164 1761.85 616.347 1775.2 cv
629.028 1782.2 641.741 1789.22 654.65 1795.79 cv
664.536 1800.83 675.57 1806.82 686.912 1805.95 cv
687.408 1805.91 687.854 1805.8 688.275 1805.67 cv
691.723 1815.98 695.044 1826.34 698.311 1836.72 cv
674.353 1834.73 653.937 1821.72 634.31 1808.53 cv
612.434 1793.82 590.827 1778.74 569.02 1763.93 cv
524.71 1733.85 480.904 1703.04 436.513 1673.07 cv
434.876 1671.96 433.505 1674.52 434.998 1675.66 cv
480.374 1710.41 526.559 1744.1 571.808 1779.01 cv
592.967 1795.34 614.188 1812.06 636.245 1827.14 cv
656.105 1840.73 677.759 1850.94 702.159 1851.69 cv
702.443 1851.7 702.689 1851.65 702.956 1851.63 cv
704.457 1856.53 705.891 1861.44 707.359 1866.35 cv
706.73 1868.55 706.969 1870.75 707.757 1872.72 cv
701.208 1871.11 694.471 1869.84 688.24 1867.26 cv
676.372 1862.34 665.227 1855.74 654.216 1849.17 cv
630.972 1835.3 608.069 1820.89 584.666 1807.28 cv
537.311 1779.74 489.398 1752.9 439.741 1729.71 cv
437.554 1728.69 435.625 1731.84 437.819 1733 cv
488.484 1759.62 538.913 1786.5 587.443 1816.9 cv
610.878 1831.57 633.544 1847.24 656.512 1862.6 cv
669.858 1871.53 691.464 1885.92 709.986 1886.75 cv
711.062 1887.59 712.407 1888.14 713.82 1888.32 cv
717.084 1899.55 720.282 1910.81 723.436 1922.07 cv
717.548 1917.72 711.055 1913.94 705.24 1909.96 cv
693.832 1902.17 682.313 1894.53 670.757 1886.96 cv
648.298 1872.23 624.546 1859.84 601.258 1846.52 cv
558.136 1821.85 516.673 1790.17 468.258 1776.57 cv
466.754 1776.15 466.173 1778.39 467.62 1778.89 cv
491.894 1787.34 513.819 1800.48 535.42 1814.2 cv
557.362 1828.12 579.859 1841.5 600.999 1856.63 cv
622.242 1871.83 642.891 1887.79 664.513 1902.46 cv
675.283 1909.77 686.007 1917.14 696.75 1924.49 cv
706.529 1931.17 715.985 1939.42 727.256 1943.3 cv
728.03 1943.56 728.749 1943.67 729.433 1943.68 cv
732.346 1954.28 735.236 1964.88 738.089 1975.49 cv
740.285 1983.65 742.438 1991.82 744.555 2000 cv
750.507 2000 li
749.888 1997.67 749.271 1995.34 748.65 1993.01 cv
744.513 1977.48 740.346 1961.82 736.119 1946.13 cv
cp
.470588 .596078 .984314 rgb
f
0 1971.28 mo
0 1998.62 li
.228027 1999.08 .459473 1999.54 .688477 2000 cv
16.0791 2000 li
10.4971 1990.56 5.05273 1981 0 1971.28 cv
cp
.721569 .984314 .235294 rgb
f
16.0957 1783.08 mo
14.8711 1780.34 13.6147 1777.61 12.4009 1774.87 cv
13.7852 1777.01 15.2017 1779.09 16.6084 1781.21 cv
16.2329 1781.72 16.0264 1782.36 16.0957 1783.08 cv
cp
128.519 1974.97 mo
129.089 1975.08 129.657 1975.03 130.177 1974.88 cv
130.46 1980.33 130.675 1985.79 130.843 1991.24 cv
124.441 1983.93 118.258 1976.82 112.479 1969.26 cv
112.445 1968.35 112.25 1967.41 111.834 1966.45 cv
111.519 1965.73 111.206 1965.01 110.892 1964.29 cv
115.915 1969.69 121.717 1973.74 128.519 1974.97 cv
cp
41.7871 1914.97 mo
54.8975 1938.91 68.0059 1962.86 81.1172 1986.8 cv
83.4531 1991.07 85.7939 1995.5 88.186 2000 cv
112.225 2000 li
109.557 1995.23 106.863 1990.54 104.269 1985.93 cv
108.212 1991.12 112.587 1995.97 117.454 2000 cv
137.528 2000 li
137.338 1999.3 137.029 1998.59 136.558 1997.9 cv
136.138 1991.68 135.622 1985.47 135.06 1979.26 cv
135.15 1979.24 135.24 1979.23 135.329 1979.2 cv
136.453 1978.75 137.487 1978.19 138.44 1977.51 cv
139.589 1977.84 140.937 1977.55 141.764 1976.31 cv
155.453 1955.76 159.782 1932.85 165.104 1909.15 cv
170.737 1884.07 178.08 1859.53 187.242 1835.5 cv
196.484 1811.26 207.417 1787.73 218.023 1764.07 cv
228.513 1740.67 238.673 1716.39 250.197 1693.54 cv
250.975 1692 248.729 1690.66 247.862 1692.18 cv
241.725 1702.98 234.172 1713.01 227.914 1723.82 cv
221.273 1735.29 214.891 1746.89 208.533 1758.52 cv
196.705 1780.16 186.437 1802.65 177.376 1825.57 cv
158.602 1873.08 149.507 1922.84 136.961 1972.08 cv
136.907 1972.13 136.846 1972.14 136.793 1972.2 cv
136.15 1972.91 135.4 1973.5 134.557 1973.96 cv
133.424 1962.27 132.072 1950.61 130.439 1939.01 cv
131.329 1940.62 133.435 1941.42 134.977 1939.83 cv
149.084 1925.3 151.942 1900.44 158.059 1881.57 cv
165.29 1859.27 171.632 1836.68 178.136 1814.14 cv
191.459 1767.99 201.431 1720.4 220.375 1676.19 cv
220.846 1675.1 219.281 1674.12 218.733 1675.23 cv
198.271 1717.02 179.196 1758.8 165.759 1803.44 cv
159.008 1825.86 152.175 1848.37 146.229 1871.01 cv
143.25 1882.36 139.97 1893.59 136.546 1904.81 cv
133.399 1915.11 129.446 1924.44 129.873 1935.08 cv
129.073 1929.57 128.233 1924.07 127.334 1918.59 cv
127.568 1918.34 127.748 1918.03 127.873 1917.69 cv
129.119 1919.29 131.839 1918.81 132.406 1916.79 cv
137.992 1896.87 136.282 1875.26 139.285 1854.84 cv
142.428 1833.47 146.861 1812.27 150.828 1791.04 cv
158.951 1747.56 161.558 1703.63 169.207 1660.01 cv
169.559 1658.01 166.531 1657.12 166.117 1659.16 cv
156.861 1704.72 142.861 1748.66 134.118 1794.29 cv
130.087 1815.33 125.73 1836.34 122.962 1857.6 cv
121.366 1869.84 119.581 1882.9 120.899 1895.38 cv
116.656 1886.81 111.483 1878.52 107.729 1870.09 cv
99.373 1851.32 96.4258 1830.85 91.939 1810.97 cv
88.1509 1794.18 82.3013 1778.25 74.9375 1762.72 cv
66.2749 1744.43 55.4619 1729.12 56.1392 1707.84 cv
56.2056 1705.73 53.1768 1705.85 52.9351 1707.84 cv
48.1909 1746.84 69.5361 1780.42 76.6685 1817.65 cv
80.394 1837.08 83.1885 1856.32 91.0854 1874.64 cv
98.1016 1890.92 108.422 1910.28 124.574 1918.99 cv
124.771 1919.1 124.964 1919.16 125.156 1919.21 cv
127.129 1934.29 128.523 1949.34 129.514 1964.38 cv
126.206 1958.04 121.346 1952.47 117.383 1946.51 cv
111.278 1937.34 106.3 1927.47 101.664 1917.49 cv
91.2368 1895.06 82.0908 1871.95 70.7075 1849.97 cv
59.6895 1828.71 47.3472 1808.03 32.9092 1788.89 cv
21.4321 1773.69 9.33105 1759.7 0 1743.5 cv
0 1753.65 li
3.2832 1760.11 7.00586 1766.39 10.9043 1772.53 cv
9.56006 1771.89 7.41113 1773.14 8.04199 1774.86 cv
24.0371 1818.27 41.9512 1860.2 61.707 1902.06 cv
62.9473 1904.84 64.2197 1907.6 65.5464 1910.33 cv
69.5039 1918.99 73.1758 1927.73 76.9824 1936.42 cv
71.5625 1926.57 66.1421 1916.72 60.7207 1906.86 cv
48.2959 1884.28 35.6108 1861.87 22.8281 1839.5 cv
15.2803 1826.29 7.37549 1813.33 0 1800.07 cv
0 1832.25 li
1.64307 1836.33 3.38525 1840.37 5.25488 1844.36 cv
16.542 1868.41 29.0244 1891.66 41.7871 1914.97 cv
cp
f
395.728 1961.54 mo
397.032 1959.98 395.278 1957.05 393.362 1958.47 cv
370.818 1975.2 345.838 1987.54 320.941 2000 cv
349.741 2000 li
366.694 1989.11 382.706 1977.12 395.728 1961.54 cv
cp
f
306.715 1912.58 mo
315.465 1900.25 323.734 1888.45 334.277 1877.5 cv
343.999 1867.4 353.615 1857.36 362.679 1846.65 cv
364.292 1844.75 361.9 1842.47 359.989 1843.96 cv
337.694 1861.35 318.236 1881.32 295.002 1897.53 cv
273.042 1912.85 254.861 1934.7 236.863 1954.34 cv
223.019 1969.45 209.297 1984.67 195.704 2000 cv
224.549 2000 li
234.545 1989.51 244.606 1979.09 254.746 1968.74 cv
272.37 1950.75 292.091 1933.17 306.715 1912.58 cv
cp
f
330.481 1952.14 mo
348.225 1931.88 366.21 1913.95 381.033 1891.33 cv
382.108 1889.69 379.561 1887.66 378.282 1889.21 cv
360.732 1910.39 339.635 1929.97 317.046 1945.57 cv
294.363 1961.23 272.537 1976.04 251.756 1994.3 cv
249.61 1996.18 247.493 1998.09 245.38 2000 cv
283.46 2000 li
299.987 1984.87 315.585 1969.15 330.481 1952.14 cv
cp
f
393.174 1997.69 mo
391.833 1998.45 390.503 1999.22 389.175 2000 cv
394.271 2000 li
394.411 1999.88 394.551 1999.77 394.69 1999.65 cv
395.804 1998.72 394.377 1997 393.174 1997.69 cv
cp
f
256.59 1921.83 mo
273.988 1901.72 292.297 1882.06 308.471 1860.93 cv
325.054 1839.26 342.31 1816.05 354.665 1791.69 cv
355.683 1789.69 352.841 1788 351.641 1789.92 cv
344.009 1802.17 336.104 1814.42 326.947 1825.6 cv
318.089 1836.42 307.338 1845.43 297.232 1855.03 cv
277.132 1874.11 256.357 1892.62 237.401 1912.86 cv
217.634 1933.97 199.315 1956.44 181.339 1979.07 cv
175.831 1986.01 170.841 1992.81 166.282 2000 cv
191.008 2000 li
193.216 1997.38 195.406 1994.7 197.608 1991.95 cv
216.706 1968.09 236.602 1944.94 256.59 1921.83 cv
cp
f
57.6094 2000 mo
80.27 2000 li
71.9517 1984.68 63.6685 1969.37 53.8779 1954.89 cv
39.5269 1933.66 24.1025 1913.05 6.84912 1894.08 cv
4.55029 1891.55 2.2832 1889 0 1886.45 cv
0 1906.7 li
10.8657 1921.47 21.6968 1936.27 31.4438 1951.74 cv
41.1904 1967.21 49.3672 1983.63 57.6094 2000 cv
cp
f
189.301 1953.96 mo
205.463 1930.02 221.665 1906.05 236.886 1881.49 cv
265.019 1836.11 287.236 1787.2 323.728 1747.46 cv
324.816 1746.27 323.133 1744.58 321.958 1745.69 cv
284.488 1781.06 253.225 1822.94 224.575 1865.7 cv
208.94 1889.02 193.636 1912.57 177.977 1935.89 cv
170.148 1947.54 162.061 1958.63 156.312 1971.45 cv
151.73 1981.67 144.872 1990.61 138.811 2000 cv
153.189 2000 li
156.282 1995.63 159.358 1991.24 162.728 1987.09 cv
171.86 1975.84 181.117 1966.08 189.301 1953.96 cv
cp
f
30.8398 2000 mo
46.7983 2000 li
45.9917 1998.61 45.1919 1997.21 44.3789 1995.83 cv
31.5073 1973.87 15.7744 1953.71 0 1933.61 cv
0 1952.78 li
10.6396 1968.29 21.2256 1983.82 30.8398 2000 cv
cp
f
1892.9 1168.17 mo
1891.09 1167.18 1889.54 1169.84 1891.28 1170.94 cv
1915.68 1186.39 1937.22 1204.31 1955.67 1226.54 cv
1972.74 1247.12 1986.45 1269.5 2000 1292.36 cv
2000 1257.91 li
1970.7 1221.66 1932.96 1190.1 1892.9 1168.17 cv
cp
f
1972.27 879.051 mo
1972.17 876.349 1968.14 876.339 1968.06 879.051 cv
1967.95 883.199 1967.99 887.314 1968.17 891.402 cv
1960.59 880.481 1953.52 869.25 1947.4 857.435 cv
1946.46 855.635 1943.91 857.214 1944.72 859.001 cv
1952.1 875.359 1960.33 890.815 1969.34 905.913 cv
1973.27 938.419 1985.43 969.092 2000 998.616 cv
2000 971.283 li
1991.8 955.515 1984.64 939.321 1979.64 922.502 cv
1982.43 926.831 1985.25 931.149 1988.17 935.462 cv
1992.09 941.254 1996.05 947.016 2000 952.778 cv
2000 933.61 li
1991.33 922.562 1982.65 911.527 1974.42 900.215 cv
1973.26 893.277 1972.52 886.227 1972.27 879.051 cv
cp
f
1963.96 817.521 mo
1964.97 815.523 1962.07 813.786 1960.93 815.753 cv
1949.15 836.08 1966.12 859.082 1977.51 875.543 cv
1984.78 886.058 1992.4 896.373 2000 906.703 cv
2000 886.455 li
1992.93 878.577 1985.9 870.657 1978.93 862.683 cv
1968.25 850.455 1955.33 834.521 1963.96 817.521 cv
cp
f
1982.1 774.013 mo
1987.06 793.646 1992.42 813.417 2000 832.249 cv
2000 800.071 li
1994.97 791.036 1990.19 781.869 1985.94 772.393 cv
1984.95 770.164 1981.54 771.777 1982.1 774.013 cv
cp
f
1926.1 1068.45 mo
1950.16 1122.33 1976.84 1174.81 2000 1229.11 cv
2000 1193.17 li
1974.66 1152.02 1952.88 1108.8 1928.78 1066.89 cv
1927.77 1065.12 1925.31 1066.67 1926.1 1068.45 cv
cp
f
1990.32 728.57 mo
1992.52 737.291 1995.92 745.616 2000 753.65 cv
2000 743.495 li
1997.16 738.569 1994.57 733.446 1992.35 728.011 cv
1991.85 726.793 1989.98 727.219 1990.32 728.57 cv
cp
f
1917.13 1029.25 mo
1936.54 1081.58 1971.67 1126.32 2000 1174.08 cv
2000 1140.57 li
1973.22 1103.21 1942.99 1068.26 1920.52 1027.82 cv
1919.52 1026.03 1916.39 1027.24 1917.13 1029.25 cv
cp
f
1942.12 976.354 mo
1959.25 1023.92 1974.43 1073.95 2000 1117.91 cv
2000 1086.6 li
1979.27 1050.71 1961.54 1013.42 1945.32 975.004 cv
1944.55 973.19 1941.45 974.488 1942.12 976.354 cv
cp
f
1938.82 924.773 mo
1938.39 922.952 1935.23 923.293 1935.48 925.226 cv
1938.8 951.528 1952.52 974.059 1965.13 996.891 cv
1976.77 1017.98 1988.21 1039.15 2000 1060.15 cv
2000 1031.1 li
1993.54 1021.43 1987.06 1011.77 1980.52 1002.16 cv
1964.61 978.76 1945.43 952.64 1938.82 924.773 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.0
%%For: (Fox) ()
%%Title: (patt3.eps)
%%CreationDate: 9/19/2019 8:25 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj9S!o/QZ\^9=TP",Im?Qioa-\.FrSMMd#_JcPp@!l5FoVWYquZTi*Eb*k<G"8JX(A4b'EF_\+$;J^0FPsMl3Fdm+,msQ;:
%$W@0ops9E=j*r!eVp^RWT@#!de-6quWteX2-MI<S797q;^+](NkkZob-Fb;q*^s44rplmsU"0Er\3+'U-!B:D[3KA!G_A<uUD;;S
%[L[\8!T7U4SZ1[3i)3.r1]R^s)pN_NP."-m5pIQV_oADrpcss`S;mESD[m*2aWX+JdYBY"K`+6qDN#`PQ3AAo6l^:L*tkeb%(7N4
%fRotKd"S2cZO[.n9NY$**)W.si'(rcc9d_f:Rj,MT`;HmDoAO&f2P&"PjU'5a5u=ueWSPun-sp'^5iEsD1e=lXOn'gZA-uHB=.d_
%[@e$@J(90QqP[I89LPWT#lR!cNF^9A`d_D0rbjY5r<,>`^8N]>k:%1QE"346L_IK>%;o*j#BF>VG\%fp#q9$n4$?`n7)V25@%%?1
%k/Zr9Y=8c4(T9&UP*&/&U;6^E&Wb9I=C%)!)>t`g5/h3(e@Sjg./oIL^\3)RU/2Y+S_5u&.nTa@VD<Eu^Mu&k7J4)>Bj_tAkZS$d
%k!H&*14\!qJ<pGXHT&7YX59R%W(g+kihFKr8=4fICX-r\kS/\W+qtD_TB*""G0A#K!]:BG/)cCVBu!YX4O3`C=Hr;0d?m3aYZ-iA
%,9jEW/fY!(@1:FHMA:]@>cCV"lL)\!8FNJe#?*W[V7IsA%-;!h$Q;+DgAV`)T+3J=?IQiq!C'.U1)Dio,U+$NI?&>`d&D0l#qd:<
%U-BEFPm1.5bmKoDmu,U#+?$.WhnJ_9:$dMEJ076:$=Dh5pmOahf1a2o)NDW.BGB<_7cE0:']8"te/`aka'l<!*.Egd@C(1u2N,V$
%hAA)3J8Go*fHpXuU$da?CmIW-B(-I]L!;@jfIW5;>r*@C-^0*uGTP`'q03m%kBY^1kA_jX1^4gbK]g9t@9;K<1^^h32qSPu"^b[o
%LmNZE^'BdPYHSI($GI_>NTIsH+^XXQIY12-=#^n#/3GaW$GI_>i<OTFiWWu6CPj9cbogcj't3(HGg2lo!ZnO%?;%q1n.g/dfOG%<
%p_Z%S56B[aQ-fa7K?YO!n.cFe$&LCWpN49g&$Qqid@`=&)Vc4i#[cOLL`kg^po4E,0>U`B%,qP"0ekDpi5NYH^c;j15en>/A<7:R
%Lt<\+_i&0/%E9G6J:P\5iL05g#2*r/iu`(>&N"_H,)Eg?bjfP+,CG3i0X!h`n[dZ(n.iB_#_MIKQQ)*@QOhDn3Se(UK4tb.6bm2t
%_+\8CM*Y@YqA;E/p3:2^GR/PH0EutCI+ZZ1*tOD;_"[@`*I'-6R'SO7nH.YmGk;NQZ6fIZ&*Rn%Y9di$@Td`%3SfbtM\As3Mjk-s
%\#=/F[7(N1PHgXV]<rmg\-C$ob]mONQ%\93r.FILW[.7e'SUI.n+^6@L;-s]p`J]pe+f+!NrLgBrbfF0Ik6MmZ`H/KX8h3>I*6iV
%s3bWZh0R-A5kf(1?aAPY^K_7u\)-X>_Yg=tGt:<tMWp&6)rL-H`0#pg@PjFF)4%!70#NiWL.QH+pmk&jZ7JT/=>H):)2b+*r(^gk
%$pdf#RY:ga;Tu4dMP^+,laT%SR"M_B%%c!$'VN&=aB,%=AnN\D\2\.)k,1cZ#Cli&#4=,N@00M%r1/HCi\I/Gi!(+*!KI+-B(e<:
%!mNpY"oQ4:#UZ=M`Y9iJlkkhf5QR3H#@ok0?u=@DqVu89R)G5?ZdTHo8-ha/5QsCW!#fXjEoN_!o(\9CUSH(I&0QL)P(=IVFsoV"
%!t[*P*K&h/>sj0?L*FO>,To[I!WTu3#$X?;-m5U1T`B^WNMX&_g#tX!O%N78k]I(AR7Z_N_\p2j`Q[#56NOb;J:Mq)/.(LTIpc;J
%-pSoR9&MWHY](r4d?'KpLj;f5qE#3Ie=_P%@%j5[$mFH_6@kHJe*IPm7b*2%$7)^m*thNl2/"It+ton6E+=*,@RslMCXZ.P*PM^>
%8-@NM(fT*Z:`sn3!QelG*-m0'<u3o59S7osb0#<%=(-@I33<Q>PK#9VV?OHBWs`G1UZ7e14[A6[@L*P$0d'hS@Zn<A!<ni+#qTep
%-_;:@p8lN-0MmiJ7)CUU$[q]C"EmZ/f*Npb<Z]o=/=t*:'X$!*GUSO=!"_+N`@ufIJT*q=StT:X&Ln0b!gp6O0!I1^o3YK6B_?qd
%o#+Z-c9aT"e>4ZDTWUq;8R30L@fS7o$:GO7Wbqr0)ObS4%DX`\7s2\b->5\:Cm7'j/.bdP64o[2^11WWfW,ho"W!L_()H@8f[RlV
%.'T-u<#9>M$h0F4g76#65Qa^A#]*5LTIq'eFiE_!-q8ssE?0d#<u6TKnI!6WFYOO:e%7jQ6L$0G@LFN8"VqG"`F/'k/G#G9(=9uh
%%58*&&<=PLeLM=Te\s3VH?TXN"U,!n2-*r&&OpTZ68O?F7-1ZBIT9\;mkb8hB-!>3+p(%FQ%Rr2/1==KJcYZS'IMS]g]T$UV[jJa
%*.28#D#ms;)Qjf3@n9`G[uX"i`MK#j,d7DP?-]=o<+)nM(^ag60Ha_R@ROMGL4[O_V1t+n*Y,t)0ReYJ!+U*IVQ1&*!XgPA5N3`g
%O<4`hPLY9tMSTAQ'oJEc:PT"O8d'rf[7KM35qS+*J-$*G!'<(;Kme_4dP7=6diHY`*?G_fHq@UG:lOYA6\4S`>SkVU!!X,cZhekk
%:B+'p(]k'F):o"jMlBMq_I5_/Q+B5I-9qTE_l='I4:Dl(Vr6>6F>^9,EN^^d#V<>hFP91j)kCuABL.2]a+/O@MFm)B"r&Tlob5VV
%?t',p_utW/"IqXM%I+"u5#gR;f*N>rNrf%`'X$!*GUUf(d&\)SOd/RJ8`P63jF'm50biZ['CMRhWk,FG)h<n(VK<0\KVMu5!B#B-
%)^=rZe-.#t*CG[\YtZT3n_7YgB0u^L=.2M)$$VM?>`TkF"t(=GYu:<rJH^ph+#bHm2kWDg0a?\h:e[;5"Vc^,lIc7qDPg"#K-bBu
%O+tkhHlcl=#2U=QXO%Q&L'8e'lQ$=BG%ZQb2&%:h7V@_i8oW-rG,X/N7#FGIiZ/ToZbW(m`U^)_H\@M`Ul6fKd`B>-$EnB@N->;7
%6\5/\*RcZ,J[>jjA<P)c0@7E8O+Td'A?9@Nd2h>)GW7d0B8p!*%q2^MQ:AddG6f`D$9),-8"gcp0"aG(&dlm8!j;q$q,k<#\g8;]
%-G8nK!mT###gb)r%$`MJ*p9.i,2!)41$AaCf=MuPHj'k9HU=X8B.,J'BM#F>"48?(<Efa%Y;WT!l]f68_-%uc&E5k6C*PElD@V5O
%(4N?rYQWMb'PMZ\9tgVH=QdV))OO6N*Y+ICMj(F>]"I@e`*p*q>SIrPJW=3F+Vs/gegZR_iV7+>^bdJ3faT+p$AI`7nEa[6%$?*-
%$3MM8pQ2s?(Bnapr"$J2d2rVlHish<M$LaN&3cSpYR)pTN)^[h:e^@2gd2#NZjqn=-k&P)E9H632V!UW'0N<Glo9SE%K;"LE0r*Z
%h$G88?%56n7[NU!Jid"@0d'hS!dg1nH[(<4T:Ia$M0QdT</aY>OQWs')<jEpKOtI>E-.>\b_e_Qm.`qG@=:*"=.$=T]Bg:;CnP2t
%o1Lc2;&A/3f"R^B&7X4T31WLsS-e#'+LXNka0:X,C=%cfiV`nT&<GmnRWh'DL&u]<Frf]O$8ah_.#J<B(mKc37S?_mc=fPRj>g-n
%dtg.A:P/Bc?(b^P82qm7C#(WJ(U;H*:JqeuG709_d=`;aFHM-)\;.qG76,+OS8A0Fe1e=liQR*2FW74l#Q8)*k`IV^RW*A_>8_JP
%.o8LhF[3YBKc/&NiW?IVVFrZoY0`;f@tB>LDle=#CNCc(*7jHF$A/>t\KpCp$sWT8lG>+]M!L-3q%=+be-.mo0MRp/qeeGW])>#J
%$N=O[/=os;:dBgl8HpaXiF]$H.8ZE"JRpjT5[i>*H862#?)Ou'nJSb'8FA#YkeR7hPLFB^@I7QLB*:"@"$%:3K[->1U[Js4PB.PC
%TKq@f_)?2)YUH6HMeOdDH:OQemdFS%KPFa.R=m2k#m=9CIck_!Q.G@%%.?Mq%BiT9c\g7U`%r)PhM'qIN#,JuB3#NJOLp9:PJcHh
%T^*8FnnaBnMlU^rG\`rYlG>+]\p]?MnJ)n<WXG,_XtK(_7Ts.1]^!MZ)sitNW<'\>)X^6`Soge]-:9MVlLY2_@N/VaXCc_oE0Gd7
%G;1YU4IUoQD0cW>"3q>j[k=LJcN?n=RsP@]2*Xf832)^%].59\FV/[*Ku%p,jF`Ah6'(VZqi8o(KEDU`%\Bgl&aSGY9_9c"NL[O!
%Z1$6]`^rnF6(sbSI6ft_1#cKS4b'4-go$MdZ:<E$8(J'N1l_1<mWtam?AJ6GAU$ADN7pV<a]f\o.%n!jX#umqY\,@2cE:)rJ6Ud*
%k[a@uVXltqYjd15:&uF!&2>IbS*EthU5WSa/C2n'A,g@A_#54Z,0%`[EF%?cJ^Ze;K9IWL@>G=SZpVd:@:AfA#mLCHl3fE!emiFD
%]ppMMDV@()a0urMn6es4SZ2cc..l19+Sqh:&/)HKkfO5gL_hHjOi^d)KS'?9((e,-JkKK8`#8,*em[2kL(5pR@B@2JpeFd)#''"G
%#`[t:Yq(p&a\WgYfI/ZL%Y\b0`D@H'q-%k_S]0cXnWDeP!h7XT"H,YLcH#F!AfMFKCQBKFo5r29F^Z[Hle!7`$O5u3_"/Fe^LOX_
%-Rc&)q8f2%(?".#kb@"gdFr,jUJdu)=pp/ci[EIe5FNHuPW(;%/!)RIHG[p_)9405X;^FZ5d(QuN.-B7dVJ"(1Y4=2mMLmc0Hf5)
%#D;&kfPl(*$ke8Fa&\.Y"giF2O>&hMJ5hgU*$EtA]"68E*`i<2[MpE[OOB?s7E2&`$TCZH))p8CnC.1(<%)jT(u&'":gf]EI#(/p
%*lGuJO12@cKu2?\:3_Z6fZo-;SXr'](=%^YA'grYMN!aCI4l4CNTO"%8\Qb2(Vn'5%4L/nkYWb4][PNXp'uck!^f6rdBP!N4^o0B
%5N$%K?jXt\(&MtkF*2J+"fL/&^(d]IR8=(g^1'(!a?/HJ$jGEeL,1RZfn$N8Z"gA#0!H[dHA5n'G6)^'8&t84OO+o$V0"dmi!_WS
%)adgGd)P)jq8i"r_#G6F%oubA*"l?n6&rG?fZ-<Tcra,KVh*1,ROKo^L]Q),,Ybk(!kZAVOP*Gq3:Ogk*)bek3%g%`C(ko&_/MRb
%5L!Wt'$O`O:FJYSP+[VO>ZZGV*:K7<.,_("HqXp?OO%GTrBLW4:L#:*6n%\L*u5KM:lq4;YRau]GW(t!N77X7R'H]M_r;R%l8Smj
%lWZAq]#BJnF>ej0cEOD94O9h.Wk_,F0GK$FBEKa&-lE*orTrjKHghauC]QMMK#uq,lM-2FaG]i3.II2^gL1qlPTm#I>.fI9Y'P&S
%coiH6kG0JO(VlZjpX^uF.%O@[bg#0P5LB"AXC:t=636>B*o@-J<LEfFA(^Ru%UGdg(`&TGGe+Ati[.6eTj_moJti<O?/UY$RR?b-
%0m5gu?mlT8@R.0>j\X0Q=N:RZ7^>n#,Vu.8U;sJn/8:^D6`7u/W^<TkiAs?#l0M'%$L4#.L[P)FaM%cJcdI,cD5<)='V70XFlJV,
%d#+J$)j'T66D7W?ag51i`![7bGGkk-q(ZY/<CO^0b"/_ad)HtXd"].n:13I@MnBuIa4=q]Ao':ij2XW'U^A4RN$DR%n0`$cBQrJC
%0l1VF1$hu70N4P;&r$I["4<1gZM:[P.%p?D,lETD;B\"6Jt5BkPd,h`)nt4:P7P&"9O8]%Eg4DHUEe2($M5kUB.tn_'jLaV-#sM"
%;A[W2+JVb@KkVRF`<okZ1),ll/4YF&10%FnJ!b1p\06l,rb)u3Zkt+m)H$s#+6YFooV`b<D*#R$G6#7K1M=0RLeB-5o5Q!\?lATU
%#B9Vs0JJ'B5WTq\1l,/UNS^')CG_TP3P^(qI\mDH2V);E<e&[<hSKhsB*VNGd:F#LWL;2f;!:$&T/sm9ru$CqU6W**#h9JkK/ZX'
%/*lJ*V;X=mgWhV]#?=Td6F3Fi1DU\WlS,J-G/6u,Quk:8/`*0<;AUYo)>)9,bF,9jXiEsA(j%oZR!cp8\T)]P'9;I,k9#=9+5'N`
%a:U<R:f/sE+uNuYfc:UU`@VdM#csY8RfWcC!Y"Yun7nVOC5jSSXi8(BMB*;`P.D3,8-+1&4+JD7K0"Q<GsOZPX?WqhZO*FYXupF9
%%@RF=kf/K1.'U;0T?\B[S0D`%:''`":4'NJ(RDkj[a0[Q#thD45[fe6>DgjP:7S11lit;Y(@q`XaOG`Lp;Y6S..e&fCN4PE1@18T
%Cb+sD@&]jB'_^koK=O]@!c<:-!*O[@kS]*Z4bT*O&&b3lLMafN$P^MD_Lr!L5.3k6]flY+1>YW6$k)FsiY4'KDEOs+B/N[K?3T]i
%R,/!']225;`N^MCFe^SYf9oHCXR29%FJmV]M2[i(4/Ot@@Dl@E&S`;E+Rd1'f!'k5<!Rl>&Nt_6HCEYI'QJf<[h9R]eV3f_p&p&O
%/hi2mlueVMlVJ_5(g.OY72A(!JuV.^S:)Rq\s:)t+F9o7Ar-qCAI>p'Ki9JGaqR2EM]ZQI9$?cRTR&kVU+MtP7MSA=/rsh-JHDZr
%`g"PPNC"Y\,r4hP.8]$C>D\=/!^!8="WRlugaJ:npfM5'N;<B5G(knMd="hHlJ#!b!iZKQAI;u*]p6ZX.Bqi*AC.p8_CFT$;0;oG
%K<[\#\O\:"DI69XZ_9YCJ@?./hUMe(^pqN$2M&iib&BT`rTSh,F<XapN:*(e;kMpr`<[/BS;5%)s)Mk2%!uOmZugu!&fLHb=/O?.
%&!dXa5:0l[+#Y>`WjIHTJ29Q)Ub6V.6t<F>',3\#UILG>A7-gU,r4hP.1kq(8n:U0fP/;RFJW\#co?E%!%BFg'fCMOd6k$<kBg8H
%1SMV7Y&Fm:#;1YkV*p%cJK62%Tl7#AD[4s>RPZi]>QN'M\mCB6bW'HtS3<p2Bi&2m*&+;f&fG%T(IetqW(^WS")(aeLU6!I?6$gQ
%JMK\%1(L"n&:IPa31t5h$O7@Z94Z[*;gcEn(`(c',r2^.7:hH>;cn>0oY<sp.5Q;Mb3[-EWDH\C1@18To_ite,r0'>m+C;33HL'7
%9RgP#YfKX#9#`b!2u+8rc\-nh;TR7!G&JZ^]F$4K/<O?IX\gF!d@Y8G:+,[J$n.JO9hp>X[CR1cL#*i\3i'A#)?3<7R![3?loX&^
%1pZ+!..h@?/2S+V?WJ!:4m4W0&/8VIACrD2r!%:pM(lJ.7YZ'Hk#o#?"H&ke>,Yq5?-It2Zn_g-?$Il^iD*c.QH6k]$??>O<[>%`
%N1TCRDY_&>h$"KLK=qXg,r31_Yi@33Ql0p#.rH\V/80LUm,O`Ukru^I`kPRkB_D%><YLq_N3'PWA].:kkhe,,9j)`kO^YFe0h,FW
%9:H0;SP^TK%#o5Ce_!].`cZ8'`R*s(TQ!l-d+*i:&fGlHUY.$^98kNd@GWef)l#e*(UjGGG>L7sS_g%o[]hoZaKSaCpn9oM9'AAA
%=*I,j%/[_HJ]1ID*>(b*YVZN@+3*PnmtEfESfbWT]1jo?@D&(p#J?>CYXp&@IR]/&^nMN,iJBpr1!8c3KfUc-_<S,\W^MTT15/Y4
%khb(d&fLDc'Oq8h<f%6`XIrKciS&]icA9)e6>'Jc<Eqh@f>F]7l`ER0]eTb_*NCL=,r3IGXM/841H)>i6D9=]<sj(PCh'c*Rh?V4
%aqQ8Gm&`[1nVlB?pAhK%5#(-$iAh;M?MQ5hl@8t2FA<7,)(gt*,d<NR&fF/?BD-ir2nJ[B]aOdtiAg;c.o7)[miG)3fIKmZo.FX>
%aIm@7.<N#G*<]Fi13=q'K\Jo>iW=uZ`aL%-A"aC%aET4t@BWDq_g)$LEa9m,rqF<VTG?p@H@l7Crfo5ZA(:bAU-o2sX$V>)``n9.
%]DPG;=S1&JZ_>2.rC_i*i$=N:"`)OrkTNurk/CrL>DWd2<ga!k5=%`jh\j>d*#D=sV,.E9lBMUeQ,p0o$oT%'44n"IM%"`BMBAe6
%N2I:+L39E74""@-pjm3=H8!cV',b^71@2Cti7<Y'&fDA4L&DTa[kM3^p'YFm`iBI`,r4hP.1Eu:6\u6KUZN3nG1MlOPk"PH<ss/t
%d:qm_oIbkkAD#cKpV9.Q%!uOmd+q]Y%!3VYLl\1aEXb,tJORRWM%"`CEE]A`6AZ+tAVqSloC&hTADh[U(N'kf;kUAEKuZM#2NdN1
%,/[`V!oZn$.ZlGT?,3_ck"]O(@'%$(1*%%X`U"3TqB'RYNQ2YL^I;G\]76eVa)lHtMp#dj%/[Xm=6Z_QL:o?rDVn`aaI(sm%!Q\#
%"h$1X8n?Qb0M\k@pjIOH%!uQC+*t1%%ja!t:^dr].hk4LVt7Pe@1sMs,r-lQAI8RQ[h9Qg"kLL.&;l;j1@.g[Jc/cGNfi";$Hso\
%0d<jY8n?R);bYs"Qr#!E%Y^[iG:4$ONlPp5M$sNF?6<\Jf#GW@)>;2eQu-)oa?Tc_!t(Q;o2HpO%`JsR[ZC:u)><nDGWX5MM%"`B
%$EP^?Q,kZYFRR'\<L5!elqmVaW\/OO_V.u[:a/:,bNV.X[7&"OJb;nbA$l-"$?_<+$[3mPn1.fmS2J0JFBKf?[ah7ZGIJDuC5E?,
%#6!3U7qYUOk_YXGb%ah2%"!C2*I'4`1@18TI[K4P>aNMs;!@R,I\>^^AqJo7M$uH[L.gm,7#&B=#275l<[,FfR6l+Sbm;`dM%"`Z
%N$!A>;%Fs.lqeN#qh7?WqX6k!/WjIK=ua.7&fG3?h+NS5_H%brSg"+8'M`f0W^MTT5)-<QCU<Q;8n?R);bZ[5VNo4Vr!Tk)52iJ/
%L)gU@_g3ep@BY`#32IZgACrD2kj$#XM%"`ZN$%PfP.)&AFsqeVa0aWgaKX::5`49"M%'<"mR_[UO^YGSnH5Dqn5:IJrbf6a?RXEt
%5JZ]p7#!j,))BR[8C&]H0h,QaPfU)\`u$VE(FY$L].&kNYE+6X^qH#SYZI\=V_2SGaKX::5_S`0,/Xloh@]?Y,/[_/",-j68n8cj
%X3^4A7#&B=`Xhu7T@iqN/!47ia1-IIe7$nJpjl68Gq"k1,-Z5"6I.3FJIO$1O+HQ`WC2KW)^D\9LB;@1GV"tcYE(D,?qnHX.ZlI:
%^([YBAD$3X+Jt\H/^8rX"F+BfM%"`Z%,JXE.?QpK.T;9c-TY\5PfU)\a7s(+I?3.a(F:j';#EST69LOSYh-o\Zf;Z9q@i!I94Wte
%XO5O'M%#h0e:h6'^fuYSZ*PC9>XO)-A,O+QH$Lj$0i;3b]bBF!AEYWSUM#S!QH6;^a-`<nSIGbR[%9m#f^!%W:`$RTOieAumVYX-
%@'sE.J\-7YO^X#S/FWiXO>6)J1=/BrUf!b8_JE^q/gftg7#(XN4/EVO)&k"pM%![,@*V.N]JrMod.j#QRW/Rdc*s)E"`h@:Enu%B
%cij;W7d5$5Y1AA8dpc8@(0*e(Reg=U$bBCP[6Y>?S#7e#6KM)G*MfhbF[<'$I#kBDjT2l:U+1e%^=uJ5r,8(*.ojtuOLh.sht3VS
%6/OT3-E,X*MV88Ao6!pg-!B:D[3K>s60\Vd$sID(>-0YEXFBj"%"'GR1e!]/&aR03l3I(c8*L:Rd8sA&)Sd2;2qth[0Io&sj>s*0
%1VT=DrY/q?-X,,A4#\B"AYCWQ-ITm`rrdNK5S\'*fML'=gl0@uJnbAlI5Tke_'H&Z*`s0\Kp*o@)q]&QR&[>!1pOt8DbhL\HU8/A
%0$,mDP#5amWf(VkVFjj4&.;[bQ^5U.]l*t/^KSe\(DU:u1L`fR0Jle'f90m_Zo[E[Ht>a/c-aSe2eTGR6apH!=+]qB;cRA-h_D%6
%?RZ%ROD;('qUO39=j2S#pV)GbpKjkPodOTAVe:DK['lF%G-AK%O[ka)D_Sg2S>tO3SsJ<LS^$LYDC0=DR:[nud)q<:_g0Fq8&)]e
%ZPZ*UeKplY-Rb[fD+]9a^j6]jl3qB^bM82j5hl'+"%a.X!EV<FA^IRV8hH_a,4RHmQE27o$F$dY)]B44[&t[*DjKfdJAMCJr:o0@
%q:W4f^-,^8/sX#(5%c179GLq[Ia,BfoPOWaOh9O`(p".-DP-u[2V\HF3E6fKgXKDi>Z\lsC-h[ho"`nF2rT\g$_e)JDA*sThd-Tt
%fkid>r"S4ChWEFC-=*<t>C`]&@;+eS!gg*0Ej$cgaP!L_FVhR'7e8r96,$#2E[QAlXo(=$VZpV5gTI@F>p/<D4YJ@;&+>,=rdr/6
%"\O*Q`C?^N9$N[a!ZRon][1YNbTs?uj70VS@2>AkVA#r^$d]o9Y%jEp;fj7)p;V0KC4r6mUK&'*,-Qlr"0l'OU\0DrcO2aMTN2<5
%rND'a;8g.[@V-*62hYe<U5Jo#lpdfg%HiF?=".hrE7niue48oKP3bfF*3EKrRn4HYdkI/+K>mC4*jbr3SIQ%OEDh"DDKPYLYgpC2
%XeZBTRWsE/F>k&I6>1iC9E`^sK[LN6!<c"I:pHJ7=^Fo5ejiT*$ZYu0:`s+i2?8),Z/J?Y6Fm+KP`)Y1\Q(&eW5u&,\YTVo>j.:r
%%-:_>\s>19CT%;:?MRK]qQ!_9/2F8.DAC?s@_#Ji[u0:e\^'(YQ4$XK,FV8`5=N-4''dVHhdUqmN.%U;`t^@&'CE;nRI;0b@#Kk^
%.,VgH\qo5>>!4D8PQV8Q.kfB.HsV%tjhW38oe/[aH$TK=_P#eQKPl)kG)P`H]3r+Z)td).H_Em*m`'+Bcd?ZM-QWZ!]p)!]05=F]
%@>SRo$K8FX;XWN]7":jfKUQ#C$*p&uP-atsfM.+W(HeNr;e/>Qs/S";*cou[?g_mOm8b^q?_IL]cX.,.aiuT<"'l%P&F"`sW#;Gd
%f7^:GX@BhG%6q]mK"8XC8ltY<T[dUF"-,(8Hnp&.rc,1ks3*3@,i,0!i#.k8m0\d/)[$*h+/>c*?*3$;q69bZ^aSHA>0u[&;E?r^
%o)]<71Z6uK0"ajH-hd`ZRl&;(o6B$O=>UKF_GP*\&c;8AV;?o?CJRQQ3,j[*[):[Z]"oQ$fQ<L6VZR0E$.RH;=MsU9:G/T/f'8'[
%)e>8W2Th2;*rTF`a+(MlMe62,A9toph`M3k+f\6KY2iK,473:>Hd^r86ErT5o=NF.Xq"hjGg;/h=#,XWVc?Ula2NeN_B8=D5P!G2
%\N7eg$(JIIA>3@;o=`I)OV&B?iN#:N)RtnhUZ$U\ZgVoaX"MMGS#teKMTf<:AngsLh(Y6%.m-n:=&F;r=QRn`'=<9uaS/SB/*413
%b3M,P?fpLmV3UWJDkb_LE0g,8kcCeB4eq,$n)+$[co_JZM,1t!,/^,_L5Vh>9DEVD$^Yl+FT8'th-Y<bi%L"+ri_p\?W]oPMr@h0
%!X4e5\(DSBmB[W#IH\N_;_@tLP&K:g<*c`Yd\pV6a=R6ig5V#-N(cn.G"&qeb36l,h!Ad7FI<qoS;YWrn+_lcRBs<C9)Y>4e3s(1
%1`&Js.8:<21]I!*HmB^SB@@QCFQ<*4%2W3)/@o$R#[fV.S++T50"B!%/WYnfbuHgfWT,c'U"P?<XL?dXbnVfG?.@[m9Y-J]5$TA5
%Q:L4G+S34AIaOsniUX3W"9%GORhK6$r!;RSUhhHIP@#L:B&Y_uIU5RnPPd<8AsSpt27V0<CWM71FPQ@*C,R_-\k:S.p^":]TJMt@
%@IIS\>N:"&--1QB^Kb^rd,CFd]%$G`jkL!ZL$,SJn[k(^iLl&VIW`JGost9UhU2kFR8)ju(#ablWaaGBf;H*I(Fl`?'a5BacdW*.
%G+lEk#/\r5Y*"FbPrc)?fC#8_i#<AB$aZmt-jpW[e\9L('K=)a9DW+S:SP?C_kINnRkdi6GSK6Ys(:1J4H!*ASOH\EZRB]>[4J1f
%aj6]kE%RF;/;bsT>5Y]ThngJ6IAaD"DNJ"l79Q0Mq(Jho[lfR8rZ=+Xi_#%Y\m#,7B2NF$kq%]2A<t30?M:]RY%Y*(UAeHEU=?p+
%=VNg9/;r$Xc<ZlM4B(9tQ6*EQ4DD@]`Ud?*n6/[uq'p85%jCp#'_@"9>LbCfns(c+Vc*?8)5:]L?Z%WJb>RTf]+pS0doCn[W`Zr7
%R9Ac307#4adVCJ$@&;IUH>TM1Q9qe:<,cF1Y-$Ke7941JAC?`D>A5s5>&EB&Xdlea<a0:Gn"SA!4$o2mlu+Q2P.4VGJ%I#=<#^?<
%1%HqdbY!h!/AXr;<at.J)4L'B/l!X#Ui0KY8@5dqQU_7E6W*\aP`)j:X7DaP#+Q&fs7pS7/Yi</\ok8$FXR2iV;ih#:DC1;X26!f
%[e$6..X%&5eI.\F0$PqYZM[.*82hh7QCo_PWg_,:<-)2B6CEPPS1C<*Ha":.CimBp$"Z;Hc:931_FN&4Q10@>,kqf)PMh2acTL5C
%^BhbN`Ks#7NP=!T(&eGhmX3=C])&,jV)cK_%\<WXa7u!2gL]?9.!Nd@Mlt>P!r*]mO66&PLXPE9I1V0@%4:>=J#UcVW<b6`G"\e<
%>\(b+D?R^;8%Ei+Y\[+h;f^e-S"o<9!f'?;R2e1S(Rknun9!SRc4:/@T(0\P6uTY\iGG?_8m88?C2Q/"V6uG8W;,A]0TsVh&`Jk\
%X!djH:\q3eJ,e1#mr'i#\(^jf<40?ls'>$lY4d?HqnKIiMUh^0.oNMCJ!]>b0]qO]_B!$A8@nF==*qXhRb:m67*o\pGI?VGg@P"(
%Lq7OmV++tA(GeZ"\1h2I4>tVt?Hi+9P\&s[fdP!@Z_`3Wi>O8_klSc]%WdOQghMS,b=_JgeoUF$>c@4Eg&UQB>I9pF(L6\d\u!rr
%q\pD!f,/r1-cB%'ZK9/h\M@:E+AMQ(I_9li-<m=g<b\ksV"q`5RLI4caegPFh'DJ&`?[.U;H$0dPS@9MP,_V[.]Ujd\?ETgT?X.l
%Nf._N."cFjo1c[%F#1>-$_2m"Us;5po_X"Gc"FDRF.+F+TgV9LH;/HDS!(aA7R;7UQBLWd1A]96Pu[B`Tp$#cSlc)4YPQ;2*153#
%!#Jn<A*tKP45+8>`CbnDpNI.d9:c^%\uZMtX2N12nZkd"X:d1e`60Y#Z:_dR1qPHdJeKe`('`l-<f*.HN^-[&(GCW3q>!V>kFBl8
%,`kWE^pDN.V!n"JXf%]-_Ilub?+#MRShcb4Am4V3'5e-[XGT_'"qHPtCr/o_N(#BXiVjtRi`jCjp+%3A[aKg[Bgk=VQu?=L`s#LW
%/*",VFBEYFp`1h=Gmq"phE\[(].;VqD]5`-0R^,39HNE/WkPj?^,.K$jmn[79;j@jXa[).s%8EJn+BYoMqV@8Vt(YD-!:#afj4MP
%A:9WlE?&0YH[`'X"pYsZ[YbtT[Wj@9p/2fg^8O>3:rU"=Q+UogIt_k>^DI'#Kt?.t(g&W;r5#LfjWVbr6<f0M/POS3ZT6Np]q2"0
%[_g6g/_i"4RIf*sL_26Vmk:[.lG0(LDJmN`h&t/Zh4;;:)pSg3G=o\G+S,7VO0K7Y5^\j;=JD0pl15bY2ooL=_-rVL=P-/gfjoPs
%a&qFX(6()M4N8k3Yp=T'QibV;<sNtN$%VKKcWp@l7pd%?DG#-"\Z0A\:KPm)g)J?G.3dcG=@uTWMnCNg%`E80N>Fb-IU9NA;unPR
%I&TYSSoVXFB&[D459E13OY^:36:>+UUe+a,;Td@KmXX]IP3bfD*3C$F;QC/NX$T1NOe6-W+ZK7Gq<JH;P;5M./9XB\3c<R[24L6;
%?PQ7<Ne0hj`5OANBo3l(8XZL%rf1Q^rcG9<q'CO'PR[IfM4a?(XU\lL(RI-2pjK07\FQX94d#4]Mk8-K<U9#qY>q=HL#(S[%`c76
%*Enm'kjg4`]5U9SM!oHHb7ud*F6(LR1>huEQ](GV9:1Sa^2GW1S)m-n>:(C8[*$@7cGe,Y5@)6K,Au!n@l\`G[#4!HdG-4?>Kgd+
%KtFXJk#Tmb.[jR1F8rZU_%K4Y0!JO-@."sTXBL=!X)MqkcE4so<B.Gpk?L5rrB14nHUXnm<P].)YG/SHM!!pi'[=0TAndu"G?WsP
%a)g/*f,.a\EiXd#o+-.P5!Zk.56JCeFX:)]0irKDQE[O1*0L+^b3Sd9aI#bD;[2b'rlOj3W[uZR8KY[BoRr[/rRuI\g$NRiA2dXe
%^"p?rcK-_&09$s^`+N5kLkgquPZ%.]3\_#7jE/RPMf)5'h=%LqC[[pWlD8+,QYu]o^R(ku^1Kk!U>PQc'."(]Ql![=eT1?,^9%>g
%G^,Z\Zm.Qc@:&`>re7IP9lT463Ej`:.i672q?+,Ke3pcZ3Ld2RfRJU0legH&)S>)0(PKPKTp*!EdSQYH^:?oJgY0qI77LR]'B(%4
%1N9bDA@A!E503B?TdJ*XEhBWMndu5s[`*Fi,ToVa'Qhg<Pht2>pNKZ0_*WJQSpkL#BtONa::>_`LDXa4bM;T.@It"BF+<qKY360X
%X38X7=uf$$cm`/o7)'b(OtOXFm1auX"3R4:m)&W.h_'Q]a.8l'ZMU\uEFHrCDT':Q8*P5M_k_^/#7e#X`aMc!,mOq-KoQMoPM/!8
%+QnN4qn2+O>K-&S<``*DXjn"hrOBdDfgf2nMLmZ>KNoD8"]f:ej1#qJ=ENTeL(9,Z*'K$Z$Z@0DleRhC>^RIgT='[%QpG'Wf\iJb
%4b#pM/e:,E-ko=r&`;n%\A.-D]m])?ZJVl3dEMGFbBPFC<L@IY2*'nGo`)pZ19\p!+St;VGXfS^OL0^#>o`qSkG%Cd;Wtn0d(;O(
%8D6s3G-[iK9I&+tX,6<,n9rn$++O9H\9Z6DdauPGIto3c@2E@k_H4kSF'5BNTQBcJ4V'VMl!NEo'42p/''tm.E7Yk3K"g%A41LOU
%3Ni;#8f`D>NKPT\c,.X6l/jq)QdVM7'?\;CKZb]29CG],-OU'&m@b]']VNh-s065OVL1#iAi-22Mg'(1O,hf_U,E)4pS[E@WD3.R
%[s#*BC*^[k#iCNaQA<^[QBTS7PqlPj/kaO`E!Qeji$6'L<Ts,qDLP/c!I<Pn!s]4+p$h+A/\Kj6/JB4nlfRM)Y>QJ&W.U,CEO*67
%E5'JuX!<p[k(r+@K#$E-+Dl(CP,RHQFn<Y8cnu_JWa%%0+rCL6(^fT\dpc8@g@+t7hdm>SA+@7,492QdkbiG$5[7ToMS?GYkdPpU
%6<@iXWp`Q^!uP\,o\mD"6'e>o2X#J9ZD,Eei,qk3NOc_=oL3kP!"r%GrW$[Hi.Dk?JhX-qK;)g=Os&*nr/\^MT70$"$%.e4[1Y"r
%hUaE4JXi'=N*R-.;:EH*s+=\pX5H.X`"EI^:l3,Y"IY(>%g9BH4sUCh7PjmdY3kBk0LB,F;1eHuL^nhrqubMYkf/\`'l/$qHnZ!.
%pE5!0pS`n6IbXP.W,!=&=Z<r^8V1O$rCA+u`X2PTN(1i$n/<7(P&NZ98lK-Ym@-J+NVQ<Z.@Tn*&*&<QHQ*AUEm'i&VP8$c-qc6f
%%"f1L0a,b,hufMMPHrb=E#=H4_iQ\YL&loeV\m!Xb`PH7Bs\!o9=&UFc4D5[/A+<UM-(0,Wf)Cq^a'I3J0,_cPJQ4nR-?u,G"cG]
%rhXbW6bj:mPpiL]^,!7>)m^:[F,][jH1`]I!#-Kc=o-[J.P`"/s0F5mTrXAhd,E1u[6Y$c9j'aaCTp[h1G1ps#JW=D3k/S(q.";<
%[\0:uBg_p$@=HZVP>'e%AZDf:;;'gmp+&?2[@`uRVgueV`loEW#u0=QFm56m.Ws^Rd`js9$eg1Y/W&1-=q_^qAT,;p&BK$[mVLJi
%[$-bY>F\i'$:/,XrLHXPmh]H52n2_)7r&Fnb?RVn)sY_>pth:Qr_N9'!Oc8B-AQis#(951/:dToUFa"6(HO]^KJjMm)Y]cu?cYrU
%p*$[?)P6CDb5K=e$c(XmTZR):<;Sjo4A6>0mbPJe"aLI#1Cs1'#_"@]b'&K%X'a.@5Zkdl]-O>cq]/rFL$b4KkE"D7b\!H0a0RE)
%5![_q'kJ:I<CI"=76ta'=/sc?S`</SN-8AA(BWhjSCU0Eci)VJjECn@c\f7H?;Wf$m&CDcF[M>2WND_M@;ijk!^M^Tm6FJ]e>B/F
%?OCCeqY@3C1e0WUV[NV];e^?=$S\tJmAIgk$g-f[&=g!Gi6abJ;UFrgD.h78SS\RqSgJTUIpAjAConKU5@UL[IguTadbK,1B%r#)
%DRN=BJ"M>Y!,Lam8_]^f"GX89Z_o9I<UBIVTC*>WNqNj3j(tPAG,f"7T?.dI"e&:iG`ME!(dDi6S+5A_9q2uG+[FJ@.,+,p.)>\=
%^D6m2Ni38,6(@MjU).2Mru.7i?/NqK-'u'k6PFEaP4Y/HK7NBBSr]53_pB,u?P+\<;=iIa=A8,.jV,?9Z/>-.#^oEHFiNt-Lj_]5
%Qqo4AFgr?']n,=?$X0*@YSDh/F!*;.?W$%sHA3%M<hD*pKUO*cet?.(!F':e+3%-?opuj8DV#KsD>dWpDBR=?lLj+jrLT`d9?lRH
%gd"e3*6gU"M,_?i_3:r`6&!:QHqdV@qta>\F'RA'-hIBVqGLrK$apcoD1`.p<`K:1m]5#'4IV.)m)2@Wb#buqaYk;EDhCu9mB0?&
%.tCet<A@Q9:=E'do!kJk24^t>+F%Q,N2J*d1I:N[GkO0hJ3*p/">*'LOZDbRT[lY1e=WJ=/H2dIEcjqeWfkV@,NDWZC;OEKF@PKn
%'`'*\m4k60APoPHKZ9S@!75nuXRmjs]R`X*qeb&sI3L1A6,!qX"1dl.-j,qOJ+(S%;U8EFI%7oUL)_$I!!_m"5:'m6!_Zn2*-CU:
%'opie=\>`+j[*X=Bqa*9R>DbF*,Yk$N[&Wf2^W?igD;YZ1WhG\9uDr0]qEjXVoBU.pI=L?h>1,Qr\\OdIDF:(d?';D)eg`a>JhX]
%#>3gHa"ZqHHsIMoU+H3\+c<B65^0`oBZ0=\W_0"5.VO@s^l5"Vch>cRnICr>(9W`-M;W&aDc)8$5&fd!V*n4H&l=IqerN]Nc_>-<
%['TA&?)/<EC!c03T@nup=S]+KMJ>qP9G82J8[WH?+DIuuXQ1mf5=KjV?k^8/C#+;[PGPGGlYENK2EfK*1);#Wp'4RN>b3%YZ6?V:
%YCjGs`fJlo(V6'r"5jH[@PJo8%4Da>5?N!7!8kTWdM`B4:4TIF5dc^N>I1F,PdX*n3#\9E>j;YZYd?1^28_.pc+JP"qujJZ4[ElV
%-T9,I_I"o"l&/9GKTjI(gBl\>92UV)A@3F.UU`"+jCWX^Tb;uB-)YKSNFb_YM4ubQ_/_`t(oQJRK$Wq@IANN3!t1XboX%sC;3h[<
%W%!/c*T4&)#\,^:bV!JM,E0m%l;Rf@L=4V*0l0).ksQs#*e@t,!E>(*S3.<COQk-6jHSfgloj,N3jnFSOOHJ;GAHcB%UlZLL^VFX
%5\a3A`-[05:+3H$Sd\d)Q,3WP6b]ZU/[cchWKTfES5>GX;W$']Hpl']8`k@C@*-gP06N3l/!]VVOYgZ\4a*X@P(#kb_nC*B#>iS*
%#^]j?R,,<E50lV,(g9W7.[eDB7`Vh/XBrj?7@DQH^s4NbcF'H1c,EF#_2N:%YB=?pC<'JjW38p-$68$()`bc>P8A\\>1L$Hn):!S
%3"Q_PhtGi^h@a-!DG@O4aE:n`mH58*W%@fk-7"3*]*D*1o%/[$*Gp&U2'#S(EiTSA2S97&gQF@ME=N(Ud:&gtKG-uHQOir70U1qT
%LZ_$_XY7>PH(&TfT]^5sp>jjaPLarF2Q2fCToN/N0TS5Q"2r'Kl]7c!`\uNt5e\s,WIe`.^N#!ZVu:7P)iLu'd1Gk\4*rGglKWm@
%k4*G1CCbbid*q"NI8T=&Mdn``iR.@XGZZ]UFrNl0.)Fb+7Hp!):Z/j:FTE)SJEkQXFdm/#9!'Q3K\kTM<G^@jcm3^hCPl:3lXOo+
%m9M31o0,b#&lg4=j79nt<N&Q0\HK.637TmVWJV<5]aE,K#B;QbKsC_(]ps/+^0Ir(I59U&`GD-PBr!lmeQ".5qP5`IDZ-P-XR)N3
%`4@ehf]IU)BKj'Ydo)'H*^Yi`p*$3[ou9:!B;buTD(ruh@#Qrl2$9308e8-uN_#4ufWK#o@^?ol=Pc2VCLcg#WCEnNee+Pl%+0Mt
%o3ScPN`9F\X>CiX6!jao66WW8W0r)Sl.$BqFs$Fp7pq&RmE)[og2H_(:=?k(/e]TGnT^FYfFR<&a/F,)4ic.!ph"8Hm72hI=4)V`
%(C?(T[=k9^m&"8,Fu5j8q#12V[037JXGd6=^'3G+;&YW,+.3b6Eh5IcJOHX3X$$VlN5D5lS'pHf?:=&NLL[TO(A5MF(,]ZL$^d=n
%7YGAY9;l?5Zr">!6"i6714<?>W@cAG<8k?abn8'+kj^6q[N\=;(f25#MIWFbo9kT]Che0m@D=)gQU`%(Cr<ACD.pio%:ui"I'2_9
%?lQJ<4JLb()Kn"11s0?o:fHZl7;YLte&2s.JYpP\^)/LZI8,aoH?CWdEn@R/1ch_>g')WAGgQ#;lAX\J4k2!_P6]%N!167L/3ucS
%L*!O._6EXNY%'2;NR3]G&]mHgNeJ[0Lb(Fm,.!EaoX:2tL`amiZNaHIW>:e/+uD0j^!d6t`<NPpF^Og.0<7]0*D^G]pNMd1$tmCG
%Nh`stN/XuWJt3%,U[dD"LSur,Q(f):SSW@5X1HppN/@p?nSjFFal(di^=;M0gSGkO5^css"Xab9Gi*CVa4W8T@9#O!3jC!XJpfe]
%rYNeX/&N;\@ttfqfThjJb_@#!.Aj.1SpfP4/sM"QF]Qmgd^fi\:f,4ZFhdEJV9Db^%:K!8MY`Agk'/Z^>GB8uOm-,MCYGCu7l)'$
%5A)^t^3d,rG:1p0Aa_qd;7ZH_a[]9?=[XmCe&NMfAA;12p8<4NTTLSSp'2p%lIU?&mFTQ>!*#5;Sr:S9)uc?_/b3RDZia-sb&XF(
%f)%7O=4A#TW$Z4'=n.VtI@(Y>eHl!+ZPq@n9,]#h4jefc/.<bf=[i_*<G`HZB$Lo#$WTK`lD).L4^^7FDF9g]5\I$hg%ERj`\uT8
%U:&h8\Hn@7K=bf6_<mu%lJ1J<=h@.)Mq$jK@l&4CU]-oI<?Ufs4ggtc3L/e2LXNU93n=N/6'M]YgZa`/=)854F`MJ2E9!2$)2Wnf
%]Au)WU`ZRd.0n.3k-OG340no@E1`C"5^A(:=TCrJ>7uIkZ?!Ga52EPhLXT7;7gLl=I[H;F+GU08)U=\o:9`Y:An5#F'G/E.%*p[b
%4Z:hXOCdHWc"ti>o`oH%S("c!Ch\iBD`u3@l*mK1E"onN.I:r-GK+SOO;tY].VaC3RfJpEF)*(AS]lGX<:`@Tg0*%Q8XL8L=:$i;
%J2YDM*:r\14.jo$B!3W]/]pLZD2:'Y3NVW2]IXSTW;n()%`c?X0-H"g/71-W7bQpS#Gf/N)52hH8P,d9NfETmjGG;b6:!m+ksK\$
%VQ8r/PT^B&7@$WnAUOKm5ik>s.^bSBFMt9O<u4(@5+:?!!^]Hl\om=(eQ<Jt9P0jsRm(]u[P]gp;jc)8Tr\U7hQ3"K!4:F@[X<[@
%6lnO`1T`5u9^5AGQPjXc5\o<RhFZ^6L-dH#!'g8^<V0uWdAQm6^:pj&oN+]PqYGFq8a-!nf*-/W;s/'iGG!6;2fYZF0TUM707n@i
%1c.WCpN$c@9,[MNJDklJf-b#[7UY.?RtB/_8R:,tB4L^B+.1\#TF:8`BaPiY-Mf!P=;Q@jJG]:sLFrUecm]-C5dh3(FU@Pf6l*b/
%emN`7I6PG:!s#aWYQ0j_^-T6a"hYbA+O(*lJ<=WIe/NUNG9R?3B)"J(+5rG!csSIS%d`3ZoVu/KOe/!;Fu1jJ%=:gG"jBs&iT<mO
%>#qJ[*T@A36hfc9Vlf&?%<O4*RuV"MW=FKNU:J;>O`hq/faj\,*r[G$GS$cffFi.Q7?%Ptm1!;@,F_!>B1rJY"4_[YG+o$@!fkKG
%Gue$_l6'ngb-k7'DAE6+.c;2/>D#\Y.nHs_2eOTi)(WU?>IFh<c8ol'`@@W.#\;_rj3ac]l\;nsK@2jn2M]s*)^1WX!N"+e^pH?/
%r2$?/Ro,ZXQ1PuB^MKL]9Jm#RZJa"i)=HJ!B_jhnOMPDUm<PU$Oo)A[\@:W^@oGf3b.Arhkd1@l<IVOL]8!,0=A+V):i7?=n.=:_
%M%I1XUD"SdVMTrNEoZ4h\u'O`+1E0>jl$8:XHB[gY<ltpAg$&,<8?51k=T#ASf+B'$#]F'`>[^?Qn*57JP%QS!j8CM<C&,@^I350
%Nq^I\Z:t+:7#*$s"B.74*=3fmkSUuj3\!%^3aM77pk.iFpj^<"o'*"cXjE.]ogT=E2`AiFR)lKSNWs@)Y/lt2V\.4O,pSZ98st'u
%V6_;7Xc)C\m.b>e3HT4i\<RaLG0cnP=5e6n4mB?IRpH%3n))sXb"+jp^E1-Qc,Be^WS<W3MqIQKiFV=!V%.5KT;+$k%5J\,&4Ab[
%O_sM!l`&rLA1)N(gZtd6kL:Q?-C$.W<MS*4Q>W:#(K(JmZ':@\O)!?=A?.^G=/#U!-=jF[`]j!9U1HPqe$5h?0%Wr-I4emT>+q^9
%@)-DblhBWSH0ZMFPALkDeZkmO1Pl<WGQ%HVPr"Q7ag9^UmD#M.gAG`$^E;]nZF_%XIf#qt!7RV6injcpB,e&K9Nk35&,V?.9?X]0
%-do7Dn!huK=nkZ2*,jZnJH4'qbZj[5!M;87Zh\q(T+81LlWbkYk[GYUK_b[BPPEc?eT*PDH99T5<K[UB7W^GN^>+,IV(u8aHq#+B
%*8R.h>00rBBZ!VD.+]lSnC/_g-SVR-rk:&!S^l3[`pm)3%D<1[6>?$)+qREocWX1"9g!^qRc:odX\S*L,.Ya9?4J99g$:SkS6F+"
%U%UZa%U$uHp$]]=0j>iC+!p4L;J&])6maPs\&5ge>%WX4N5K.6,F-@m"R^?C#o_A@cK:bZJKlM:]S-j`lHf?,2=QLC4mHnbP`F`b
%!D&O>pjN(O$^^-,h%%HB3eQ;>$O$8D\B+(E#Fi@joVB?<ipar,)?hu!dh(';HjkE0*UsC2Vh=m%3GtJBc+W/bW(/<J3;A%1*?F6b
%WU+Wr:`np#n/tm6\9pZn1a*(`?);7F)UKs^AqKMeJO")phS<0$$sfY,l"gMT2t3>tA+?Jl7u]$35=4&ChYCeZ&@U0=n`oN7_.g>u
%`0FOaN@V0`0"<YOKe1"oYE&_2WW&-/GX!7:X+Znm_6%WmCG](PW2BjI*gLQ:PcLQ*"lfs+cqtp2O/W7P#1MW_AEYWdHT:%aWnP%D
%m9eWj,:]t*UrEE=GBQ>f-1Nn+RSMB"95c?r-8$8F9Tol*%^u279W!Y&H69ei&/$&J-sfnOag/@pQ-ZhRk\:T)e$elQocI-t]N0bJ
%m5#r+_b2ks8Vm<<AhTNc`G_>g<T7C6/#qke+VkTP-7!h)biL7CE0W3ln_?G*SVJD9*m*P/(dZaTR&XueZZFDt]qmCW9]M'XaRa/;
%cdY%;8<](-_b"$l+5U4Sa0ieC;u3j@3#hu$9EX2aYHfPC%2$g,I/oO,P\BF@/#2SD\#Y'U]@ohpXdVe6P-N3(2+cs-8g>SRV)VAD
%iTDC"%-129]TV:RAd?EL9b9)57Hj7-l-,O&q#YYA'\qLmm$qaSHA=#aT4Rbm_egG*d+CC=F6*e+RCXp3"[9t55CdGX6:C7\>`i?1
%=1P.%c1q8?+T*@EX0k/NN>[hNa9#DkS'P:BTIUP^\/Vuf@rHQCS,u^#'k;,b3t^oYZ.&s+fJL1eTTUc\Roc#pB:3k/OIaX4KA1]n
%R"QEMY6=eUKEtDi>nMl.>ogLlYQ/LdG$#eipDmXB:R'XP\TS5oo(jD`pqqFAkV+&HGIc.>Wgf-HlT.GZ&"AfikNAaOrZF]9d9VE"
%F/OrNQS25UC&*^D5^GRtK$(=<dS;?9=5@ADV\_:&p$J''DYht+<,hdf6_7fq.JW-5E&r88Lt2H6Ed'TdCgK1)dl9GJVW\rrRYD_9
%K6j8qnPXqLL3F/*GB8KI]U$Q)E<fpDTu5P&Wq+Z__'TC`6c8We9%KL_%9m+A"6!tPK[);M-MU)CO!JHA_'pRq&.fBl0G'"jJXBo:
%+]r]7b4&RINFkn;`Y`#.#kYW0d8si*i/f8JJtc"3GS_NDCoo%%%&(QHfki(>bsa%S,rMS\Y[_0?n7X;">n^_(&n%.O@c1"#]r]$^
%,&!sG.rpI8ZG*',bc+Ah+M]g/Jf]n]]W#GX5bh+%??fN:X3PEhfu!u3^r?Nk08j1l3EO75id)VS>`f.,.ro<3%3&Z6>Lt$\"k/j^
%GW:AU\LdX'0ohg_A?<N/ma/$>D(G^pnVr1.7i(]j`c*ZB0d;f<5qJI>"LG+g%?K'QNU(buD*Ud+)RSdk"lNRQK--*%L'Te<7_LN$
%U5?Tt#NcF#b*t@`#-ZB$9EGl/-@QbF!-S8QeI>r=lZ+qDjuIB?c[/%QK.GiMGPMqE[_XdJ)^cB)/G+,@k-5>t2\,V?<o-CoM5!5!
%]6cLpCg2/?k%!%+L#F`.h@;:tN#T!""0?Oa(;,b9&C?rFj'0;H$pIGq\!Z5TJ`icpoeR:.3)L$Vn,Z5#.VAmJ$h#u_g%47MR!kEF
%7HA?tV-C*ujZC"L@;jnG=6<G<NLg`'g]XbK%*t#b/q7nCR<0$d2S.MjENBTT;k\Et`7="$0Zi&9%EH,Oh.4j]SbI++E:iC1Sia^%
%L-DsSg[.K-Ujj\j\kcFaVh$:HM3su*A9qoD4g%%&LCm_*d2;$><BSScY5>%YWV?m,lJ-"V46'1Qm<O#b1bhr2e(CEAMbtX<3"USt
%Y5%A(I3g+d`:oFSc:/JW^,mTBQD8YY\Z%(j]!19SkoO_6I^Oo^%'>Ta]`O8iNgVjdau7/R@m%YOo]R;TE*$83<p29E-QO5qlh#3M
%Pp97B"7D6><jW9XR[jr-;a^[@CGZ$t$jFlP3fhu;R1s^Y*as6$jIg`I_na.s&"KnU%FddM4O4"ll66/?Eg4Y:4>I?W[HAri3f.,N
%O*g7)^'qt73iD(uM;PMCNSDedd+Wl5$J'9#'N$gt9gSn3Z+#A1p*BHCpp\kG!2&QehPlK&LG`2l@!@%fR:U,eZh/Ap"gE:=>j@/r
%_;b`DI9F/AZba4m_r>rQP@3*sC69p7=*msn4e/%8T%]8aRF[:G5BM!FW>PR+)?FB-S>Y*X+lN,3)j^!]_lV'd\kO4AXW(lhJCq&L
%A-1JL9=WnU<aGn5Kk"`ph,EVLe>6H,H]dX@nX]/`bYVnLan*P1&7W*GcG?]odRjB>d,n0$;RcW.U&uUViV%d7+lbH,%B.a9>Q"Ss
%FQ+4;=>8!h!6-G]F-ReL9dO_e,.=9c7E]Jg`h<+CQ#D@H0Z1Uun1Uah!9Z1TlK[>-#L'*f][E1c2l,-6Cl#?E1m_YkFX/-.9/8fP
%\]nqJ-C/8$Ymh<o`_FP$I'>"Hq(2J4KoR3]G=I@0OU\OS>His(\km+7-&&]dMOt?`OdgYV[=A#"2JlJT^;b@QH8ZA>@(>s18D1\3
%ABJ$&/TIs?^:hE1mH`,iA.Ng*H@JIQb>4rr=%CW=3S]b?=ScbDI0.T?e'E_kiXM@`Za^N$<.$juaene#5G_oN[+\4@5OeB?Yl;Wc
%I\I2@d*RXllorEbdGQp0Xu@Z85rc'u!"GQ`=g<0N5X%Y":l#;52(ErZ^0%`(BC=hI)-FW5oj!47^1J>G/5-W<G*Rsd8#Nl[>cfCZ
%LV,#uS(ZS1"7;OZA,:P=G?h\?K(>97O+MkcSPm@^!EZqeHek%FfES#Fr=5W_c0N4>l#71&9jn::/MFS\-/$ukSs;A5li9X:rMe-'
%RV:N-oGV[b[F^A!Vg#cL2*bd;Vj5ju_u-s+#S,Z8X+`ZINFA8\#kV[f/U*!T@%-dfr+Q,q0pV)OaAM$jG)/&L.DoIB3tkhl-N!I^
%olIL^;`IDqT!nEQ(iOKWX?`Xo2S]sTm\c<'^Uf^CdHo"fKU:'R`aS8n)$j%3K"EJ05"?J9d*G7<(]DiI^ELOVit!N*bKSeIkr-Nj
%Hc$go[HDA?G#M)TmO<"+qJQC!0IF^q^O:918=[E`RdM<aKT#nS4-(c8f==AZ)0h,qqn5N)3(_PY2&(3=iFiZtJ\:`)&7"+k5UJ_:
%<VN)2::D4\`g/R897/%i=TTFp??0s+=q.;[8!ij9b>m"QgL-KKMbs&6/!i3n%[K-#S)Y:VUmB:F"g!lHY:gR!j>=Yb\6%TMVXcE&
%aCf_?[$bOEn0ZjoY08VWRq<l<T'cS8e&90Ocn5SXQ3rAY]4KH."*%N?m^SfK39n=sU9r]%2TLb"VV>>/=ZZ8dG'eQ1'&.G\X7$!J
%7bNg7TP<-U9+[]U'Y=@b;[TmmB.uUY&>l3'&4&E)X>0E?epkdH+,_%]r^bUWZQ>]Ff!G$E@b7mF!FXXd9)kpI['VPgai\sg[Y_)r
%pOUk5kYh5t2A0YC[^m]#,RX#*!RJmD23^HK@N*;hE'nUE1:-_<4[20`_`f&_>mg0`ZE_[CF#Rk=<U[DJ+Xlfu%sdRk*T-).ft8GG
%N2Rr2(^-o2H34mt,^Z+iK8H`S8NPKE'Hd,bTiD*O]2d_&ZV,m0pD.pE:dBW,mm%qT=kgI6Sa@O05aaD!Ao)sn2MS[0oQ<^qg\D>G
%BY@XTph]Jp`,G9W5gS5Dbu?Ou'XNHjpQ!$:bO7b:JK.SqA2s(&RQ:^EK&`b[XYrs_P5,9gb!egS/^WWhgZdJJG/*k\FUC.A?:9;;
%#n[2/E;4GD1o3O-$9$%:`uqk:l7fG+kEOQJN]jb<-F/I)c(K$U!18'/B=*9kks]0;d`K\S`lT_=R&3$N2:`-4.q!qX3q?(n<[[I3
%j/IrQjJm?1A)=!UY/9W1GN6J#MJ[l7,:0*JbG:N(h<Ff]nZuF]Y4c,>0uYMaf;pr]Pgeur]N9%@gZKpj4/EP4?G?X$%@J_HHOUrk
%;Xq/,]!KD*fGpj>C%'Lb:WqUfC$q`$!gC:2.WVB%/N%9NBJl:J8:=mddN&=^*9Z342A24eJuehPR-;[te-git1cHB`2PKKfE`M3X
%4JQ2-oDUTp]][npS^=7YAt,<&o1=rq*rrhtgGseXd;/kDJh&Z3N=$fhl-:Yqa7GXpO[dLc6f!(H2[;K#*?1e?-j0Tl>Nh*9FLG>F
%:*VbZrUE`YAb5S1/UOq>c,9M04PkACA>+W<VOY)_pD[&'_<oc-IViM`F/sYtC7l'IDjS)mW;rDjl]?;OHoB?-r:A%HOB<@P!4Se*
%hS4H=%f#cWWWP75C@9>2fbs'O9\ZWLP^'hR)asQ@fSYIOCh'dfLhl2-+^^?VHd6?$\(rC(8:QEJIg_P"N`'PX2UPnk$Cld:^r<aj
%PQZ8]^;mK+I1;c8!01AlGY%L[%r9kiZe*O)Gjr.R&Ih55mkJ4Y)a0ic?M<CUeZ2ERh-o1DLqZV[q24kak#5Jnft!jo8+NB))^B5K
%!c+>6[ob?Cm`EQa>CO[obM7NS8T.3gR`n`?LAiq;2ca'B=`T<<nFQh<b075a%mG9AR-O'GoEU70Ri%39P)5ZE/L.X/447Gp3Jch9
%gf#Gi1K0a@8I<IeM2/N3i7N!Z%;&=0O9WU\<d\B!n#(M[G/0g=c"l6lCk]3CQb*55[2_lLP6YOPD&F7t$'\_0:p+#X6*OtN#JFG:
%dm5%HZcUblZV?qSe/OVSqF^(sGK\ejL%kAiB<Z4`XPkq4[gibUh:K"UoVFTL8f+TGYf8=/>dU9PS[3/*6+d5-GBA0%=R!LDKkZFl
%K[i!fUh:GRJN=>5J[g#SH41dfA"^'P5LTlb1Sm]LDekH8%cXt:qAp4$gKf8\g]l1!p!%CJbhjQ038he>14JuNi/iZN2[[e.d,8MG
%aD(S7;mVs1.'FeYBH!B8ehqrGKj!O.aWT#Yj3F9KXMk818AS?02HY<9Y>1kS7!//Sa]EZSp4on-#:eo$+]IeKkWRC2nQTrCSTOpL
%%a^-+E6;gC%iuV!b.^K/!QWd#V$cqBKY%V-#opeT2=QSYpoT_hrj61T9d#&!?]SaD635e([B-LnC=V-$3gO_\*UB%RCR^F^($N^Z
%3-+)`9IfiR*cU3L;ZW"p*<bAK@=_?:Ogh"$UI;T%A1ID$RqB8-17<Q-^/?X<:m+b(`b7V['^J!qV#u7S_b88ERjWo]Fjql"hb;hE
%j(D7G?4K1`;)s+c^";Q#L%Rk*?3S-9_Q(1]1*cUe\"MN0G&!XP@QiL8-D1!EG"<0"FOi]2E*GJVl.-;!qYuS)Qk-;rn8U>C'm^"Y
%n&qFlpWhsGL5X6lU92FF>>2n7B?E6!m3pr%otV##gBX@X<cG\0W_rI5-C)_p=cZ/>[cP4=WS)`1`->*3hei8KDe`'m]X/s^'JBZr
%-M:o3)g]NOpA>q"9RZoc?ES^T!`r1]Ra:1e!Sc6Cd2EXi+18<5e2*28^HXYJ'[P2Bs5VL(1qRsSRRm"dL3f4>2(eraB_'U?=76Iq
%B'f.:[==Ii&e]]andg*?3+sJTqraT$r;PW$f'hML>4_X#cdlLXKJ)>griuHRC&Cq&^!;i"_n$2iJtVeE.>&-MfAL5"4\;Qi'+E9#
%$T=YVGH[W)n6p)?IEfIWnn7H-&q*JEg#OmcHA*<)T5+8mCCP^Rf^!2]I+VbXK-,&KnY6+K"V9QnB_tQ5,2=gGZ3+=5h#K@JN.Oj;
%Q`tfHG]2\,p_A?P"2u5IK+DB'h$*eWq?apn_QVqRqpFRbr#gNV"J)Dn<>Br$fH^H5EOoX;!:J2!iBP*dp0,7r'5RLH0T2',iHQ`=
%h?t.1nn3H)c_Yh6Yhn-<\a'%j1CBMUkC_t;=uE[Y;5Co,"[ZJ0hkIFPkQR5WJ)2R0n&UuJrn6Y?X/Q[gcoDFN1]cFk)^7*aiGCq0
%iD07V?aSWp=2F/)f&0_e.d/)C%^)E)<4C01_"G-H1g\pl,eC"+48Bg'?j8>[qRUdm7UIbmj@T4<l%ZgL+)e#tH\!#cBKOZ?HjaMH
%g5!45j^I<tr=XTU\+f4#WR"'`D<!$[fIP$]E+I]9e2Q,9:"C<R#CQM#*^?jEF0DM=U"i(fK]t]JPUl6in`]hBp<PsMmB^kAo/2df
%Pi^T4IQFH2f3gqGo5YOr5og&T+$P[sk.U@U.)pA#akIt`/s?&0knUF5]*"_)!t@NAO&.m-\:0/;?FNaO,UGt01;-P-S2F$R6:"bd
%4p,jB']AT`l^H*rN>%=O_slGseaT\IU=o1X`R-AJFc-0NR/%hR+@q7cJ\>7-^K*StnGBQd0u1G:`pZ,UdibH%3l-D0YA=-qjhn!G
%B0WYRQlT*A1sr.Dq\=P^``HT*J)^323<]98-4=aG+d;d^rG.n+qu4BKp<p]NKrY+]#"\:Hi>'RUqmZ9U'E@d2r9OsV8rA,]4;m[E
%JEu@T]mIB_LL5'Dr^\mdo^=Z66U/sI?Mhi.,Pn/9D;?9SgrB<bk/!HM^)M=g1LrrIZ`/k]5JbB8rVO)'2h/,6K4ONpDVd2KUSG.G
%s7+oRe">og+b+ff-gT)@#:f`.VRl3YMk;Huksk-\T>0Xpr9(j\q[:81`IE.Q$Mo[Mn\"n5b";S1rZ^L>,p$t&GCtr6s+@VHo064b
%@3"K\H+7G`DqFQ<s1M+pqQ"g!-%Gle\*e1aNsblP,&$uL-?8>>lp#sqQ)hu_s0HnKl.:*XdkuV](p!mel&2soFC90,]Cg-T(<RU1
%CZ594q\jGt,hJdO70cMm7XscsXg+3sgM=q0m`X>3Q>j'o;BJ-T19I%o)ZOt%>KaeDjgDtKl.+Kfr?A[n,@>ZHDRI+Ig*6V&HK!qm
%[7\PJ=fZ_]e;\"1>*Ej?!1cCDFfe_U@:E_@gU`@Lek54R?o)u]$3[3jI3;dPT*EC#,9*:7US.\B&c.'2pLGM1](pRXA1u93!iI>r
%%i"HdLOnI.FY$Ag3"-$5"2V+TCSJ9R&;l&X&=]Lki.F)j!7M(^2jm^>^WA@bf<1,QlW^uhk'H7YUpWrCcTfups(uC3nP]0f5<A9/
%f/$QMC]-*4L"@tEp[n=,DZ=\S5-f[Drj$`L>Sm)9cg-RKo@A6b]g#WfBd]#PIrYN"$>jTC>S]4aK.Z#7?OGVK\Aj4\%PB]$2UY!g
%ZuOO*DJ`XK*sOYr9I.%9\>DE*]ZKQeNV\DEhtX._(H6Z">%c;k(Lik<mJ?KfA@'b>N%o+ic2Aj^]U=pBR&8P!M;OkB?9GU,S)qoN
%_p,+FPNo#18?pF:83_$9ZhKU,5ra,([Fr;*DhZ0DLTT4bCLer@SUB*_T.@1Kr)K`1<I?efhR]&^HWtE@f#:Z7rYXAS'_7M@XdqM-
%g2QBAd(^T8,TaDSM>7)Di<QE#kP4,Up'&g*gZ<<eF8P&fW,:/4HA-2r9uONKo_D[0.kT>(H^R\ba:ntO_;i"R,^AmJm0AQ3G!5V>
%QFRO?/,o.5FB""D"@$I`hV#u!L3=c1c[hY^C\Di4pb^RY3K:2"44fsZYk+fLD`^s%GhHe(YKo;!;L&`UK?`!Z`@@-LnoUuPb.\OK
%d,f.G%c(JSW$,TO^Cg=P?m?h3m=kYjlu#l+l!91m?g\tgQ06t.T9j`)CAks9j(gB\>C2FnG!"7JI<_kuDMQ+K8"hWC+6LGqjl_'e
%>](tK48L6AIXeoC#e)$;Xmi"Z6psB+kDMlYZRSICXWEuZEdkKG+1WmAX@Is8gXCt+es6!\cCtPjiL?>%*a90%H^V_7gYUJp(>X>K
%4aYoclq$Sn(>l.1p,7+[6uN0Eig:L+i_1j,Lq@9mSu>scBqbt^-9(MM0GQj9QbbiUYS:o9H%EIJD\\!NX(4[C];NV0C?&7P.-bb%
%6ld^:R6&[,4]2ePOV=`IQ5Jnn&D2jEZ__Or*Xf\P1\CQ][)f&hU9BFH<:ls4A7KEL=)]*>[\m\'Z,6ZU1NrI/>)PQ1XD9Q\EP3I[
%8([W[W4etRM0iio507=nkhEeO+C,@6$2S^eLPbKdUlXOeq0j7FdsIp9q5.,J=649ZrgA#dA9M9gE@):!UJm!sDs%YTh%A1LlDh/-
%o]slV>[6*k#H+I_p,nP!Ytmm393+)LI3\kq.4RW?kJ]i8o<+FicF",pn)?BiI.grlIn+gthV[MJr'5ZNTBne"/J+J;&$tb1`VR-H
%,\*5U5+0Z5oonM(CEZiq5MJeF!c`]TC^90V<9?P/.(3md"+bk,*dfl;h@INEO.!n\SU0ep;J=Sj.sL=BLV5K)HF/$>Xr\TqX05$[
%k<&L7b0pN)JYSgdgH5t$1[X4t9D.uQW`LSi$iFo9=R?EOeDA`t?A`6e>H-'EL-J],[!S>CmBt2-KkH7ceK::9IIk1hI;B4lo[Z>*
%,Fu=cFOK>86;>4k:BKdP=pr/c1NL#>c#?Y@-r\R$ZV7-?EgL'](t>n9eR^slFqojE?gh3([eG5Jb3a$e8\$[i'?o:Hpplp%ds:#`
%mQ^PqEj(bd0?*W:?bOna-iX)&i<^N:hbNaY9/t2<lUL:$j>.KL:Pm#8jtp:AgSYRagsKhK7rII5bNDB@/f=N-h`fXIq2`INH57Js
%QY/ft+EUX6[pIBaGN.$Gp=46ar:&t<mefNg&jU_7>%*n#*t*i=$6J:[Pd\)m6L4(8j!%%jmk0WrFQT<F.o@*)l(n>7`&(\b>Whb.
%Gu"Yt009ClfrN0tT=i=\&_,A&g0j[?1Y:J5;Cs%gbTFS.MA>MQ]Crut#1kE0XBf0Z[PtuYf8WThGdG(b,]8X;+3_tM]6AYO\\('U
%m>7=AV3AT^C?b+8fIQjN?:&53I!eaCmVcHtRp)S5]2Q<Lgnp^ipMZZrWU!crS8@*1DhmE07I00sY-FDl\.>H00egj8f507!5Hu/C
%pM/_:pCKQ;rHPgZD'pEom>K\.k^B"IbeDq7+((Whp;nsYNMl_UiV9Cb]<=>>El#UKg$%leT1>Ahch4d4d7`u5k'tKh85Clle_\]S
%s"sk=$bdr@pT(L,f;6?b;O3`[Qk0e@?2:*2D\BBt>D_.ljsp1DP,ZqP>+t[u/3eC*FNO7RgTsoof(7E.iAbt(00H(g-"2lg?<<=L
%`FAMCITNVN44Tf=H`=jQ8@;?fI'+p]H(c;:D1:!<CP5m[gcYn]fGQu5`P\U\-te]%NTfV>X`8L`0PIg4WG"([7J"d)dUo?/mOS9;
%oX^N.(&'b5/\/!`;X>]sPces!T;Cse!BR)"nR=*M;0iOk5'kKO@6:_Cf@tLPNbS5PH@gO+]4U0F!@`3C*]cf^e3U(_H)(/@macPj
%X..if?b3X.i_\<>,+<Oq)SK3UeY@a<79g"B`DYg2VhFt\@%'mbrJ:HccO4Ng58k-a<93^IXm@_hrSU-iiQO-;7(2.(%KFBXcm6YB
%&<\_?P>>.uh7?_m*InCn&9%r0mAL1o8W-<BMk4/OnNYHWs!,=/n<HT?8;d(;1_%1Gn7nZnj+#g^2>l-Y65P@GS>qSG^#e!r(52Ck
%FTo.l$V+/]o@n6gJ8DuEK4h]XqXA-'SA0M/Xb3Al>_:+Zrt.F)^-);sdGoQB1Pj5180SYD.=br^ASF%tJIf"&!DF.$5dQ;L%';jL
%@+\Qq?DC%PcGk:e2i!(TjH(R5ksLmLU36>4R<uDL9:k4Ump,q.6baJ""EuBbQSJ+TN=:XJA_8gJaY4-44<2IQOY[+t[%M@+r2g^E
%cgL3^(.CcE!Fg<Qfi>Ya1?0E+,6%8Mj%$duk<]-1s8!h_?iTk'q[[%SqXQ;Sr9sYUqXWg!FT1f+s6/p:PgYo%qVT'K;ZHP?r2K^o
%s8;ZXp!<[#Dm@pokJ-t+S,ZMFK3TSsX5Ep9(PeCWn>kIFgV<O.07NH7huEB<Ie20@qPuj\mGIj=?i8n@fcm9=DYP$/9i1jSJ+_):
%q>5[>]Dq%qJ+;:fJ]U.3pS[Wg4o[dZLL9s'rN5P[o6aX=c[*(tN0SVdm"XEEL#QJ>d"(24MuNKq^SP<1s84gjU)DT*r_@B<r_@[6
%s2=[2'E6nHl'L^cRMu1U>Ed,-j;.`5In)Pu5K\^&J,M$Ls6G1/++F+Us7TgqrU9dRp\k!drpqQ*D2o"U1#(uCq7hBtmi7\e=+C$\
%VYAo-r9u1S2uSYArU/#3i\uAc5CV4Ln@NJM(R0EEs8.S$,E_e'8BZL;SF!)\,QI%$F#M4ODf)Ac(6W^!,9bAT)_p"WO1?AUF"^$M
%QC^</A>Yi;D+E*)m@t\9HaLp-J9gRh][QZHFentQV7aP'\b`egcNR[r.,T&KjfH]ONk'N!qQ8=*^\jP4q=e.G=g%X+R7CBBg$?-'
%':59qc.;/_CM0aiJcBkqrGBkYI="+qZGp$Rk>ta9_b9e`kGi0sp@J62S@+m%Q$j@^f:sq3jaLP1Qe\1YcCDq]gqKnYGgGsr[Ed'$
%5.Y8]f%*tSXL7Y$:><7M93^E;<u^%3=k1"URW[k?UGSuhT4R5tr,%ruI,2M]'ePc?H2;f]h=G4f9fD"m2nO#mke%k,Tl4j^F*?`p
%`7ANQm=cWC]6)oCV8g->*F<NRVju'p^U*CKmr.A[c_Y-[Dl#(0DN8Y7Stl<H>5rbpOMb2ngLrXj4MR00Q>b[VgNhNKUn_eAjf4)S
%G)>\Pit0l\a8Fjt7P=)0S\o.=`U,1JG>F^_.i00D4_s.`.YHLAH$PG3XJKj1[-d1"RO+Q^%`qI`59HD1RCq`DfZ(2jH!\32^&6R.
%=o$22DDU+8T4aKoiB,4B[*lL5*!.)N/0.@8LWJ,lna.=8H-/+9d..O446J[%mZ?cYhV'tukciA?Goh.m;acha*P-bZ&*L<KI[j=Y
%S,M>&O$*B,ntE(iG0"<dfD*JnT,l1XeSg3L\F,kkJZjIuH-_YBQW)k!a4ZJVQe'G<Td,j5+)NYO+V6KJ@*,!K2f4o'lhn^.n\)JN
%?G.<oh&?j*nAP[%WJ=b/+.gK]/RCO=]R/=.dJ>b!@FGbGSnBmgneb]>Po$uKZ0F:WHMEIi\,C0H4?9$_Cp`>!YC1BLj1H1eBQC51
%JRPVN;.k[:23)Yt1[qIddU?cJnakL*4FHtY<eKu&i>gc87c@LQLKB39-@\[f:=d]cH7ocEPfC.O?/%6.hYRn58A;D44'<]jDVgSS
%prKeJD<lQP<&!U2Jg9K,GKCCX'(UFhTgIUA%)B$,_`s'mQC,`\-]uIFTcLV?Es*LuS`P6F.jhAN=k`Z+/97.K`kX%i@%-46aC$)r
%7?eirW(2o.d"<d-7Q>2\OSUq9S(\W`<&QV'fZkPhF$H"O,>X%H4X+^#e;jl,U)+=>L_r_Mo<%3AI/?#MI;lhMGO7)"UWg6T<g!5]
%gH3AX>/@(T9!-1Og#`mHilNG1ZGb/7rEMD:bB-.i@?@g^LH,ikhL->us'YD;50dp$m-p=j3qD66(;V!LH@CpEd7Xn!2PU]U:_Mo,
%CbORL%W<C+FOgrfj\e,0\e(VJbg?jb:f22SGu.enf$Oohn9!n<E=(V//*(R@3>*'A4^XTFc%haK$tE9mTZ;nueWFD*k4=nunKUmm
%C_-99&t;p^-o%27r"f0V8?Cta?(SMc*)fuZLgu83YgEr/b(60ZilXV#cokGO)QTSK?=L,R"$T;NX)e^JI(+#YFO5.,/E^N`j?X@1
%'P[*F'sTJ?*7:JP,>9&n<:k2j50`LG)lGKP!Dn-#+7'[:1/KT_6fa>h==J5G:8*..]TP\(=Z]e:cXik]AX"1dSPKq''m*uBA^k82
%6I9b@nasM]DEhKWfUK:dRZPEgeG#Z:&RQ$cF->8D<J)gE(:=ScRQfqsq@Ps]4n_Y<GN0/<*"*3*j=$-d@OasY_m!uj1!ee\m'n8[
%O-n-7>1qoSgDrS)G%jW&AM5"[e+eg[22(2(XCW*cZ!qhL=ZsnC&jBZ/O%J;)b4(#7;S$W_1ZX>GcaQp(@66\q%Vp@IMg,cSgnkAF
%r9Ho;\BZ+3#*WQV6*?$k<?rcKW+on%,r'46oA,DX3;\G($7gj0$fb05L2ce&2`,nu]e0NQa&&62SM;iIC@(e*m:5eYTHhr9"IW-e
%L\rDkN\2n>edb\]Rns3V:*am?r\+`kg<a0bdR2@D,K3^HRCm0%)'#=sC\U^o8g,4;&PZMU"R.p\p:+PGNSt[:&).$)A,8+@Sjo(j
%.+][E\Fb1)?Bn;NqXb%<1&>$g-mc$#78H,^G:\a+pL>?"cl>Pk*=JD_l6Qk`A,@:TCt^rBJ]&s_./,^oUCk,Vk$e8,KS-0E`Np(N
%+u@PR<1,*22<6SnNiIQ`5-LD,=hK&e8.stK&`?0(U1?:6@gJZ54OsrbT/cMMI.U$D\RPTjfVQG;BakIJXIXE*nF'/^T@7M';B%[*
%,H_['es6GUo3'Qe9;J5T>E?DB=W[_+.hCZVWDB!G0];$8'5QcUcO[:h3L):/+GM>W@3AK.c*MTSfXZU?397EbJO`qg+tMpir4L#s
%s)F'fgX-*dMnY3.*GB-mFnmF?bfZ7FCPTTY?&ip=j9S0,B#k%`NCOaUV";Di[PZ#hjHU0Jg`@[1(lCh+`G-ir\>*S<OrJDtij]#*
%>S2JW2;916hOJ">8[NdB4a$-h5r7P&NMDo&DTH-Gr$7bN@ef#oI3FkeD]R67FhVMU#R^o5&l@A5f&j.+;DDY8IJT)<]l2YdLP:/Q
%9HJlL1$,f"&9cFY`iiK1XlkC^AW)T*3><d:7f(#&(!csSGZY%el$UD#itEQ;r+MC[N;JKV`bqBU(60bX7leOlQYPIP,Lk_j&).Q8
%Y4LE#LR`7N(tN,;*7)drZ\toCo=VuoTc+E'jZR0"Di>1?&o/?kf<HBd\E@+?4C'R$_KY[r.;*oAD_Q(R]ekYpqJd[=#K`hb3Bc?q
%F,h*(.:c+!ef[8MAsiM/kE-P7RZ:4HDdVjh?%Wk!4V:f+SnFCN30't^*"V;Uo+?'.bKhD+Jh6#LN7de,M<`baoqQDP&o2'nk"7fD
%IM&l=ga36e0B:E>"!T3_WZC\85<1gjJtkAnc</gif4DV%Hfg^8Ebm)MQ(gq14UHriP)i?hI\S,QZTX5a^+F4e4=`quCc2umq_?-O
%"X0B)cpQ7+a$;W0#YrX,3]k<`GNiuoj<JHcI[iQQka.7',IqbZGb7>7;aS":4GeL(.7N%Do.p\^4#5sbR`HDlMFX_T+U>7n%=C,a
%*aOmcX8=W,A)N4hf+6t6g*4r\O$4?TOr-5LeIg@JNL`mu9\4`RSk6;:2s,\$[-;P1f303<2T&D9p5Dj:a7Q?38X[Xj7NA&,h[Tum
%FN.HF=tWB#b8<47XP8dA8\;s(V*&lLm&h]Ve[onm;NWoX8*'8/na7A2UigK@bKaoULb6t-[\]k.6V6'lTeXF?kesQu!SUBiZU*36
%i)GgJG!pFbQSQ4eE,^gkfZ7up)bS;GGr.(ln_%ERYpIlpfVNiGkLbgF%,":l&DJ$;&hG+`6\;?\G6VAf>Yoes_7\f?BPla+S@+3M
%*`##oa/UQ1b1>RdSYr+3>LqTR[_lH:06ij'"ung.\UBq+E,q8=(YG2>4J4?PJ&sDpMUtkWCR'c@6F[Z2eBUY+B5Os"T2QgKSP):f
%&m!p,;1mM'%SdTSe#@Q.@+$s'7kZp4L''#7l[2,J-J9!<&i-#^*]cs'T*nhbTe"#Vk=/:Cen4`X@"BpL^+>tm9<\e]')BTa:+Q_N
%3#3$oOZ4L)Kd&KX0f0`9]>_n_lKVf_H(OOPZ`u8>cW\3h+0;#7YL@-5Ul%Tf_a%IQ:aRC'q=^T-%u3GV6qJ'^(gcunn-IqmDp*k<
%![X`o_$/.pUN_;2]+!G?9kFem*W,J`:@d_o3M@YOlA1&"&/9h3!<dc9GhZG8XWQLPq1oMenaI1f5cYP&4_qS$Qn3VR=bLh-C^(n4
%V@08i7GPiN>%)ir.qg^;=^7@%k!:4+0p5Z0LqOG5IVb+P_c>t=k?L)B#ZR<tYoXi@#hPTUW'7S.,>%`m>XS&)f])NqcI6Da'Lh.+
%O%2.sTnS`IN'3n[gW5qKYNH"]<o3FM$9O+AcKuW`Eo&t<grI%u\S6oWNf1lZ*?p]Wn5d?nP!ok-Z>1E%d&(FWF-nMLQnEDR+t?TH
%B93"G!.n43XHIkQ?T>R,S,_,CHMj&;'I%<[hX#6_QGS-Q<D2:M**h*bc\t9qAKLC,\--"iMS^W10j")>]_dgh-m61VCI;)g+c;2Q
%_TkHR`Hg3.3GX;ad&=NnlS@JW(2o#T6gDQEpMaWME,GNajARGV+k`Bl/[.Z'k*H]u";;oc9aD>.!jO0g/L,>6WAPkd;WTub:j96.
%7&]9[d3#G0c)Ce4,N5#rG(aGu>%qEQ2SNU5cO_QoBsUdC6>DKR"BPBp+?A<'HWsYV'e3(eNDrC\.=#t-LYq!0]O\MX@"?06g9dWF
%C>=83![oRbC\+BXD`9f$Nus^"IaN;O:S$-!`co$BL6P-@e8pfn]>G=Q5fiNGJLfB#BSGs3nB5_o0`(Joe!-DE)?oNYLg'"i&>LX$
%/'4pbRF$G)@Y^GuN\1^VWMfqcO!.puXKE-F3$``T\RS5gU=)#ZVAR`Ai\Q0$*To[GIFW%2g`M,oa(mpCCfAa7,89tEU5h,J7i+!&
%ihShEp`j/)pGIf%'s_XHhQn:@_gB>Iirhsq&F%&P/ZXPQcBTj0We5R0A4Hr10,,d+L>RCl+$Yo(;7O3pI9+RMMNL;s8f#UQ&QV.$
%'n&*37"@NZ2j/:Y+?M<cn)qS\$a#sO,MH!%LHMS(<_8($6E<KGNq:2d%:spm_l0S:\HLA%`Su04S'/)9lKn&$Xm*0QSj'l,[b_tU
%>l&89FVR7WYp'aH$V'`&$B1+<f^*n$BpZsh6C]9`FC`SR-CK2C!ltlQ;k-`"EQj"aY8@rhen9IF<f^8V3D%0s0X9o-en82%2%jUU
%ibI+kaWGWgIZ4nWj=df<&eSR3Y7gM2\IB0%MCl*?M_$10(IGFB%.d+!(<JY78eXdj0"Hq'+L+]>FR1]\k)?er)R`CD<G:hINsZP5
%.h"fK--IVZMPL4uEMKm6W0A(k,aQfAUP#AG/Vid^#X-?6<7m?:,?_HJBkqkelA@\H%9<g/'M0^HSPc%)b8iW!MjRkubLt`m1I=]l
%k'@H<A&:])W1tKY1&"leTlS)5[a,lo($A>:"4*X1@nID1Oomck+:?%e8WkaZWT,`OIRVS3clNH_EW)gdhNN?7&J3<>@Ub6t@q7KZ
%W86SC0hQ^Pa7/pP-OhqT<-U]<@<F%hGP8'"pi:f(aP3"YQ7$opl#L5P&Q&fSH[2h!?h'KJrU?s[bG70@=d<sH2lb#%E9SS@FOngA
%ZMSn%bk'q,%HJ)jKOZ.qnDb6'2bigqZWYcV?(KqP-N_G6n(q)$cL)39fI!l!LrFT;36S_`F$E>%75&q!pA5@Jb/m,hm"dchqd@;0
%6_CZ0eYPe<+/Np51c*'.S:J&&Lr7pE+EEuGj`ok(Y:UMUCSbuC#JiP@hdafJ3YLkn=U<MO6sn6X&^6,sMWE2*Nb+K7PCA0(VSoc'
%?:p#2age3](]gkS`$>nH66!tj0!Ykh<a/L=,3'7-cpYq,SQ1i'O?[J`RV48jg8"r6OX'jk"([0Uqb;GZI>IPK.<IC2o'rf`M^!/r
%#3@bJH*g"NQi\L/2R.53>j((5dYC=.JudW_Xh<=!WE>pAa.gM"]K/AX@@^m/QR`$!@hCEUB]R(2&iW>D$t1i/i+`]VDos6]VA$#0
%o#s'VI1-VHDIlp"(:*Toa1SQrF-Oo\l<l'q"$9mD.L;[9BOkao_@1cQg:kQ9hjidg'IQ&,QJ@MB%AG]a_^)T^KN_KYGS7cMYZIhK
%9]EVdg(ZiSEoe&,1qMUImTJd`j\s=9[#R_Oqub*OMkbUZElK7=,pF$iC%/JN^=Q";,XSQNZ0`%KbAhEEjneO#halM:'Hnfo]>A`A
%SdrdVn([+_g<QjnSS8T!%$1bXE-SrBn/V!C.r'c'(.G7i(lAD>PjgnUe]g9(5mC><S"TtIEY?1gSX;!pO*^4p#\T3pT[%a.Ejc]i
%7G3(6\K4s.*4lr*9lsZ<l33A+PoR%QA^&HC':2si"t<"#<*J!a>1fl($rJ_//7UY^p6'Zl1-q=Q?>)[6I1!>Hr&V<CELhS\=M>]A
%U4YR=R3VMjY:GVf&BWm+VEj\5:<9(fO!K)]dG"0n]FBu52T6irY2ljN#A<(OP6\3<:!aT?MM-RkNND5^_(6F?'1</+Vq%%*/-q4u
%S[hipWek&,#]\-%E`j9C/[WqOJ"h#u8#M:tCEk?dFOg`VHgSI@&F1MWO)lVc:QltjG,?"2Qn$#T#3qA.1D1S,LtE:E37a,r';$Ai
%PcT'"EHB2VnWc]1JQ1>P,&W\%/5DHB.Y1c`.Ef?T#XqJS#Hlf[.ZS`T%ZuJ"Gpd7^GUBk+``Ise('"jZp<aQWcR_'$fCn,:XK?!E
%(Ge:AP_7(.M=Zdc#EGP.cS@mW;C@(m3Xc2XQ_a.nY%oF52TXn'&o2:BM?=t<2duu^bcFl4YOY,Ek#7k%W'/NTV)%f%!B(SAi6""?
%(R/Ps@]MRs[q2=scn1@AZ!kt*h!A/o@BM)ke"&Z^Hdj#T;q`:<C(4/L08^L,EYqF&E_p+;kVSNpcj:GU+/q7"FQaA-E)_0"q'o:T
%?P`WuS0MCfAGP/<)J(4nL&c,pA?q8iOh_K4"u>;m)pN&UNo3r%i>;R<8;+BmB!;k\N3@b3jrQJ;9(5cHLSC`5'"bY]V>AUlO,%Og
%Q(h](e/'`iLaatf!pk;H2`@BIDLq,Sn::)Y,hKd4llrYFGsbt4;_M.mnl=G'a%2U!.T&/2**REHT$YKkjsk^&ERIE>.#`.&;=>i>
%;A-8;Lcmhf?U07G%pqHL*biYp'ZRrFR*L+)r8R/2A:0NL#UZandA/(FD1q;aop"LRc63pXSe`eC,e_+@-BmQl'0)8SA3(&`iY(%i
%WcoOR=*#LsG<ch%_V!"b9QDG25b(>gR=/>NOoZ`K?3O;OTJEq8,Wfs1cLSgQ&Y*B^HXXsG5Eb@K`$BKc]/np$MZR@;[!ZE=g$rbj
%:amh)N]Y@e30n)P`c;^07sXCa9,8qbPK-jL`2,V_g4%l6706]eh$&dhI]?S+ln4kT)kAm')B7tWLOB?42ceR;8=^q8"*!#E%YO9s
%<3"1[b.F@U%NWCt(_c5[p=e6Z7]o$K^G28brX++T2[-V2S'!,aCRd$^#UQ(q_lk2hVLsI0=C+6W[Sg:^AJ4Me-erWR(I9<>?!;<o
%#_!a$Bj0[@KtJY!0-_545eg_HT!JShL*X?.iH?6!GcWq)A'[NA`<j[rc^Q`/>o&>VSF%'rVQ<lbGtW#VC:oEmTpKdCB=J^Gcmabr
%)$_BlBXi47\JdmmN9+Mq#kFG4RgfV=R$TL-'<E!D[_VAIJK36[qV\Fq;Je?SN`@^iPa4`hMd/'`*_X<s"@d%Y?5kOG0'R53Z%\cT
%L>j9+*-M7'!=!3_nqND>Qu8!(-#t-DY%fW,A[B,ti%bXoS_Nhtbufo3B])#NGXnD^Cc[^T]Za;b[V^1Q/.+8U`s$!&00om*)BjV`
%_<"T0aB3VCTW);76RI3LA,[%71-Co]6jc7<W0c$C*)M*GOG4;rGWg`kJ<4T(24W/.JMs)uc(Cg+_89i*T"PO+L\c)3)E"LuhZWP:
%o//H5G_h$/Ls(K>/7o'iK`UX*Cq`6E8a'liS'Y^0a52f:T*:Jf.W//2n9&k9ZRVauN!\6ji]e\sEaeb`mTn[4/fj.4Y:1)0W-fD)
%S$cF7+SP?[Fh12+$6TkA@Cn),g9a1-6I/]r]9g&'d#KC&EHpu+"C9!>75:tP-D:/%l">NbcB3QA9pUH+52S]D/K<d,-lY.\LbofX
%&PAB=[Z9DuI9q:FECJ8)O?)9M#8ZDtnH2pF=j3X0k3>9c?R7bS,#'fL&V;l3*@69a7-UkkF7a#Lg+Iou[C"$`&t4C`VCE%rB,jJI
%'m+^N`.Wu12Mn:tB(La2cJ8gsK!%<&s$i628A/Jj+kX;@$-*&rs3PW<9c@J4+5dh_8r2B5Et)tQ[aadRZ877;LQN3];/H9/n'8^E
%7@6]eX$U;o3"a6@DW(^<+pF/;f-e#bb^)tbm1M\8m0hOFCtFV^RFH#'BUqFC=eS8i3_<dG>JdJY5)T\Zoc!B'_9,pbL#C\h4$9P\
%MS2_/R#CJ-RkIE$SJU4)E7Dnd,YEFPmbeZ%V%YVS`_%VT(!lRS0C1%cj6`ESg3c>"8V_?_H4Z#pqR-Q)-&`U1V^cMXW*U0jI.%Yk
%_Y,Qc;B8t1^'plBQYj=L)d"f3'HfM<JCD]$p6!%kg.uNK#6o1dKN_H/N>RIVnUAmQrAqm;(^$<b]psY0Be:iBNF]19p>`7f=C,<t
%rG='8OKA($V'+%0"jk:OFBk$(;3ZWQ7/6/"]E:&VFpISgTQ_!L%+p6IS(toqO=+To-&4t#TZf`.9:i#iAJDC""Ib0\DB[n6\\K,*
%3c1)h,::ik7cGiZO@+#J-&LJ$K.IQ@eLFMj=h@LZ'eU!%9ZlbgXqV+\5Z<!:CCR(m5jr71A\9*^bqTI_*Z1p(aXm2&P?=<a>$=#S
%Uta3+W>8-Bi,;&f[=mkOKm^\H'B3>?Y_SAF`IRn4H+aOOYOIW%RTM70:-_+OfFn!A#o)J06r6_p9&#M24_I<o#&]=XVdir$kN;n#
%LqFV67O-g`osf^?L7lm0HRhqJ;//T.Y#e1/V'gZ*;Ekk/*:FjH6Z9bD;;@8PA(pnZ"/T*rk!Fno(WS.R*\:pQ\UG8,mhfN(1V'-"
%/&JM<`LhqWLtP3K:K=sE`X"-P<TUdE_+%<X6Mj9(SAS%Vb6c3jS*c)iI<Kc'6Q()Fb!p0#fCT(T$'`(_cP-lMXC81C-er8Ma\0mH
%F'",>%rM!TFC6'hJNfmaDC(lj>2h_]/#B-g7I."QM@,(GL.3m4m5&m86f:iL@@"dV92SX0:L#!2$Ac)*am)In<[JX*eh3ff<`4ZC
%:>l>tXck8qjU8kO_$N.u!W@e1]MnReI(rp>9Jts8P%S::^OgFtUD6cINlJ0b+so(WHjrM:>?UfZr?kk-<%L&hN]<BC+&7L7,uc-l
%#P)g'nF!m)(',IMRZ5\dTqS0KbSRL>.c:B+Vt,eS6)^go%p6HD[h(Mhk/P,4c8]tQS6g="<HXfb]q\32.\%Pm?=`+eq5)HU>M9K\
%X\lUZAW:QlN)ZRl?HVM%`t778IM3PM<jTS6;u!7G6T9YGesbZceeINAZPBO,=9WCj<QN'pU60j=hG;kU,+1,n$3\f\,\S,mZF#?k
%;dMo0H]!6P''?IdUXr_*a2=b2#XU(6=qV]A[j12M0\X_"Hl^as&W`@&?W8HlC@_!B5p7Dg.B&4a%WflP\(LHB7<48:27jA>b?WP'
%C+deC<*?->4!u*c`@="U!.Ipf:6Z>8G[V"WZnl`07F_MOji5&9(PP7co.fT&bgq;Z(GN4Gq=CmAOM%G!0P^frIp=5WXCO:M)l8O5
%T$nH5LE\9Xr.OD#lo+[@2AIK2fcH&ml-u[]8>sa`ZIc0,9[-`m.Fs7=UQt>c\+]2#bDn,W]lnGac0s]+Ie`J@C1I8%s6BILW;Iu9
%H<u,Rn%D"cld&-MN;ZWE9lfS_hmM?3B)cqP^;'TpIlu.`kr5P=RjFO\a7N[?B%TNr>F]#a*<c(e)GO$fWQF.?DDYiI1Ub1I.9$O#
%CiCB*_h)ni93QKDc6D@KJ4,HmSV/IqgT$)c+_Jl^JLDW%G3$^6lH]iK.`MJ$SOGl<WfY<?5BR0#%H?dN%5Mqd>,3/F\gVuh.F@;B
%XE,>C-&hi),\#BbTUSIt0J[Ns@%la"8.NO\HGmgGV6ZY$&RM/_J8"c_:fIIHa97c=_.rdJ)t=9kWgq&2lpA^BP3[E08L+P,+G6j=
%28488mlTu/P]E)BR4Z$$$]-LJiLJ1J>sei:c15`2d]pJB%,_B;R&X:K7"iNON8Vci4*@&f1;M?D8RcDueBa.$"b6rKYj-1*V:34r
%c4bCFJ<,@Sd)X*mJG`i(MaNc@;^angIZh/dVGJf3,.F9_R7Ih4/)-5(GciJT"D)m^2QC#I-,<o3XnYa'ft],o%XKJ?p*Pq.:'XUI
%gjemU$5oIKW*GpP8rDOA+SdGn_P+!PbZ5'EWr+;$=iq03MFe@ho3Cri-iu,)O_tpOZk30MJn:u"T1E3!]Q^S?`8!kYa",:^Mc3/6
%j,3$:>BJW)po,D!cN1p'3]?#RK5_+>#YUbM\gN.ATbB(;mA;<43BqJqP-$RhTa&lX5rc*(/@e,-K]0m!NHf3o_5p-4eM!ZfTbQ9*
%]n*$diWkRooO\.\%l$[%mT;U/jd!MQ?V@5"EVFS?7]Tg'I/'hapFdREZ8q)=4ZruiIZ)S2=@^-P[j"GU5IFn7Ypn1FZ`@5OG=1-c
%n@_:c&j'1uC-B3tkpeN]Z,9Ne,&rsbU`FoY3o9<oi\4>GJM)[G?m<-I>,[P7'WIXa2?`W5!0&]!a\Zjh!XrhC$C't].Qg;\_`%p@
%lmf`#H3l`3?7\aK?f4-$70A5:&I=09?njn\<H\M='C(A`75m+nEK#_Sn#qu.hCCoeFUR+SI'_gR\?ar'Gi[g_o8P(I-J2?:,ah,D
%Z=j;%!RDL0*S[p"*Cs1UURYU23%bK:Z=,<dD\W\9n0'i6=^+noMQp3>c0Vp1`u\7h#^4-0!]F18N3dRj+1\ohPZ@'MeeVOaNa9a[
%8N(9cdZJ2kJf$E5KL?;%^s,<$P=\XV6o3;46R^eY%ceu<P9.1Q0BMcm:pk>@0L3j38?B?CdC`O8<CNg]5KP2nJgNHi7B*<%=fb<:
%W]<%bEo*.2>eTFqQLhfBEh>cL:T`G!Gu)28qj2oCk@*-,O5doRbn4&p6DLjm(/sZ/S=oS#"/=c&BWS6Y:^T!]VY"8#1N8\P:9%^T
%q8L-dpu4YDMhI*M\>h'4[]ohZ3.%]0D/In0grBTQ^qhK9PRPf)+2u$*phB"ETO1\K#$Gq^.<h[E+coZeCdpmmW#qHG8]n+@0I,!Y
%C_#GI,#ug2;5#;jZ+(h?2=*mMd%W+G$?)rkp$*6Dm9\6F8b[/'k+OG%;6_f(l)H4+*4hriJBA3IqNpY0Y3QAUCH1)<U%\]-8.iMg
%Hau7I`"JrceU4O%h;J]:<M(D[KlSB9eGr[@GJkM$3uogGpU[(h@@62A9%,Lrio][+dqtGnS1HGoLf((NZB$[@n1&tlS]c%Qit00<
%cOPu:k'**W:i=,22qNf:*>B>`6uG-6F21o3:%9I064lOB#39b!"tt/mVM&iS]ib.e3lP3_%$fnZ[tmArFd\k?$.bqi8Zoo-LX11K
%DB7ggDUn'j%&I'm!h8Cf^DJ?Aq`#BN'iLOmPU8W08s1Z0eeO##]E5V2[i[$O:ST[WLe"C+.t,BG-LbKq97@SeL.?+3j4/lj%H8Z(
%,r9nH#'DHY_>Qmt$i578)>+-oRdS+*pN@6gWPoP*/Wk1#$&D.Zdm`'tcDem;%:ETWP_jI`[oT[H@'*n7&`$\;]d'[TkVU?M%mkNQ
%R.di^CJ^HrjLISOH(/n1fbH;\dD3e-7gXp^Y7,PXdZms8fa=H&$<&BUlKUMu1Sl%("J+Ggo'/G,`*4:G%9OfBWkbOLp7'2KE:FHm
%`n`I*;7%?"1b!.+[fDN].X0YDPAIR!ij6B9@>>3j-j\3gGe[=P:]c2!hp.3t1;)Zjbeu`*,&1ABVNRlPU0"4/DCl3r&WD?YLFk<i
%@M1b]&`0qHV_(ZNV7N%)nYjqaNKIfiI!1C?UJ2DtQas&@8j-pWm(8,F]Mcd+c!D('7=8=ZlZNhU$@B)6Enh_h$eEhIMRD_/p0#Qt
%V8:WM$4"#&Ze/H-G;`N<=\8Ll;?QqE(%:`THF*k/Z+R*)*au3Mi_k,0,gKC>L]]orbWF]&-9-e1jUBcs:bC<3kQ$cV]m!<AeH%PS
%q6+;#<V@@8A4*g.rD4K!F@raj%@Ee;eqI<8`^@46f=kd0d7.uo:J'%\.ud2*!Q:t=U/]VhKDLRQfaS`u-#Z28#NpRr'0)3nL3O;M
%P!T.NH<ZrD=uc=/$Q)HFRfk1][@E+9J@?E%0akd>.;c44aR6[0$J;+pa&Y?6!V7X3#)TZSGl#&ta@`k6/!5ebX&I*7*'Jt\iKjT_
%=e0Ib3OXC![(\"RM,*dXR<&!qh4=aHOftXP61[s8G#h!nX*;dTTd&[UG1]Z8`)?/4N]f[_,`89n^?$F(&JYS,@S#G%ro+\t;ClJ2
%?*gu0,SAl^G\q?/X+CM/@3]+Ek+Ue:&S&1Y#-(NT7ol=-ql>Bq``4]-$n-cge<+W0/0^gMZSJiD4V<F<c4:62I`!YC3:Fb]]/Y>h
%XL-*%Q0O-C<IAksH5+'j3['dq(RJuVai8/?eS0UUYe_gBQ$VXIrB>+k-9.b+gQ0&e.QTn-$mB*=+LTTp#4H`+b(aYT"1RuI:l?)L
%\JS?pc_(tK'LJ+JADAhi92:ZVF-3mF>?31q2)HQ$<.`XG8<pN^07mDG,PY9L?\)"YAXH&1W>_08%(l_.?T!A)#a?U%/S)?s9ZU8.
%+6+.r5#`O7;6s/<<]fDfoh7,:q((g_WWG,4hD)4d,Bt+ScGJD?//:9]>^,1Z+j'%\Hd.5^jgF(nO\oW-SW;'47t-/2"bAKVRq\!C
%jiJ0IX#72IaWsDN\_7R#)!!8dTAS->=Na^k):kZb-";k_donk>r=8r7Pgr`%#r*Hc<FE7sfBk*C[iotQFZW8uY$q\u3Lb]2fp=Y>
%jmu.D#5/O*9]]r&<nY>*;S]-M;Lh,f^#b'9@RC-1<(*Enc&rlt(Qe'a*NF't<^#%3+I]\u0:jSs>s01+,T&ao+]9St=mkRD7B`P`
%%SHN$?$Hk[Rqg0E2(j'Y,+9pue+K:m&8LKl`V1o$)9u/5o6JUt.9LK6Ke+qC#l%FP$NHE0D'VTQ_W,0cW_jb!ke"mk7>3f>4<lsS
%-<7F3U`cifo*Uf=6>lm,\ff$%Sj9-EjH#U1j(1:JX;^?-DSmMT:Q_8;`T.C+LNll8.02,#Rg2R"J1C.9;CC:9[%?5o)M=&(6.8_1
%KT!'6eR!jnP$fl[.[<1gPG!OOUOleKdhBPp#p7CAVWK`B$U\;8&lEguP8ci/3YQ(7>D1Pdk&#s0*lL/I/F#+"[d_hPX3\\cHf&`X
%^bDleTH$d+Z'b$F"IiC)6pto0)$R4OYel2c=1aI><9l)tCiaMrl=mX1M5sq=;T2dP"sT45HUMalB;nkcQ_JF<)0h'_);i]_]D!'-
%@.(,3.$F.4HPd7q<Ej?KAX^_@SFr%!7%tZ).e9t^g'?SV'\]GHYun`NZN5l93Wo&HMme#d7T\Bfo\62>-m;ChLJ0/DP(3TEF8Nj@
%QURUr%2@"2Xbs\)?723bKMIi</eq$;KH3OHK"Ed:iIE0k!OX3l:J(p5Dk_\X;IIXK"?a,*paj@'`Y&B9iLoN&+TgN<Ae7EV@>Y2*
%9+clWFpur9Gb&&X/%(l-mGq6J/K[U/F,lBq6#AqVJg6*`21C-\s!WLK1M<b:nC!$_#!%a,)fHi07l"#ub<\ko8/5Aj$-T,.Q(S]0
%muk]CcDq>?D_+:#Sa?f_cp4gk/ESKo181SB24\>;>$4ZVI5;4'JTW:;$2g;6bO4Yk&<M3cd,*]M.alD<Vop6YpcPWb.m=9E\<:E8
%,t+Ee`DASG9jQ6skRfJJ/#m8iS^<N40SYBX7u,'U>Lam$!M%NTBrWt'1M!72Y`K!(2hr!#mWs2"N'ct/)W>*O!P\b\!ZeF9e:`aX
%Oq.W-lIVpVhC8`ln\/G>EZ2lS/MrJ.]d6Q&Cqq$#)rW/^j)1d[GpH9H=a]m#Rjpli/@$u;j]?MZ'Burj.S=\e.GMVk.h'6CDj=P9
%HM_eGoM12gJ9%[C+l'1jQ!YDMaO!41cf@t)W`sP=C1'd$r9'7)T@FW"2@NMLrm;3Tj4RUMiaLSgW@(D\CkZA][Yb3B&hMjq%3c0X
%@[-+'#G%*fOe#7?C-#9\po7VXZ[euV2[h8pZkJiZik5JG'ii6$+85ZT64pp,ALR(Y%@1*<Gt,Bq/O$S@F,NKMOU26Nf%j[]e'Wn&
%?t!;F"BC[u]5`Pc#*iMbP^hRt8Aih`C2]#XH\5-b`4)d.K!JL%Ud,/^m?#XOX:>hh'mKfg!F%X[el`;?-)q.34sp[g3g/G>+Pq.q
%M1ZMl1oYPd2\HO^`/(E_rN64C6pQcKGqMiV$l?k1l\>mDFdcd_H=uQ0.a#2g"\&t\WIMm/6r_QP8YN6X3[rRS?4KOiFVQsld>CDf
%EajW4"(*CLFMB@@S6#kp#a+I'a:&BKJ?9DB04I&ZgZfW\<LG+dJThF/Arh9.f\fYc>r?`bU"O,^Y[^(<7C-NBSX5pUE&Jm2,4(Ih
%Hk(Y$F0k/dQ\p?TPHnbq[Qp3,;K*-)8>&eC&.k5264`*(Yqsc(KQu#Y!2!0n8P.a/Uu+c%hTiuK.ah5-NC0+.V@jV3-5EPTC"t:_
%>,JVdpcfuWU8Zpb&u=j+1bU`dh0BEXe1P[r(KuoR</fg&RD[],,uPaARm6[m.5*O%a$Ub3H./)6LV'pYKg-(P5d\G:b0pV&\d\q[
%.D'/J2)A!J*S4d&ihoF^aL;S29?!+SKgT&"7`ld414t(ud1-FDY,p6E%?uc16^#<UYXjr"31S`m5kFBtJ-qTKbPAJ6?'SqO"_QF:
%/]-N4AuW/,[YA:!-/bda'(q)-GsA9XK+3Q-ZAHYR)?%Da2ka*5@EgD.+B26n4hg4*.T$rtjl9)MTY$*%6u;r"2<Q"q\5>d(kZD[0
%RRdC6%9OgCVJOcO<H%UEOY@hm<FammUjPBtLPiLCT+bN2mF0-(o$.=KLU=8c+btRSanKi!%gigjXB_=/3dZ/G`sNHLbtt-lS.jEX
%@!>o!b_65K,$Qt3FLiY.#'119On;n9g;*FP.ZP!I`@h9:)[WWqgRBskCk)PsL%F\o4\45q)[Mf&+I5<ZA`^o>3d"]t&U7Kd?P8Z$
%p/@doY(X5E(l@%V$'3"V?'i9/k2.@iZ(bgC!Yj/7Rip6-7%rH\Qo'-A?-SYe<F9'J"c,X@,MM3.SjSZ7os;M"'q0g'<K`Y,=sVT'
%52As`FTZ)qZC9%+,,u6?ISt\o(3NZ1)e"9<Xeb1URV<k;7XA^8ar*8YRA85lmX=%g=C0H9VS`W6o`:k_oNm<=H<,83KW]XMd(b)b
%+nql_=8f.TeS=4B*[Nr$o@dU4AKP>"Am#1<\tVi&p4t"C'EuYTjaQi1LfV6<YYnE[2iAE9oa7$_$jKA)nEngm_ZYlC>U2i_*XBj6
%D6u5aLV-^":pB$?UNL_/;!k@4"ot+#d[SLARg)l#];bgu@T?$_E%Ckje-(nAmfpnBKkT)O7K"gDQC=gL(%$r`!:HE4hB<H<F+ufZ
%q]Qf[js8*r7lEF7X=4afWL`b7JMfrSWff.U!i$V>0S;ikZjWP;fsqXf7AASJ@18*k+ulQZ,#g<uf_Ie'/qZ8aR$HYi@h&cF-8ci9
%oJBC!:SHC7!YQs"jAWhahb$c]*Bg?KJUnUl-+/q;8G8RkYjNKG5H1H5Cno1#$L=4)n5ZJfcfl5F.#G%nFgC8%-#g^D\m`AeFc1[+
%]Ds6\BoJbZTitDX:V(K>F0u8fk*PTG;f.*h$;u_NiYAeGO\gq2MYM#/Hn8\*C>b&W)XHX%UfUNG+Hk>!%X#:%ZVdN$;rO'^RH)jA
%,Hb9PV%53$9dUJg1eD6$TNCrpa'>V/M]q`NEAGQb>Z<:m0_Od/W_1mk6@H*/#bQ"ur^(&6[4M]\)P%.nak<St/NJ5bL4*<o8r`3`
%oTPEcW"etl'S[/!L6;cO5GO]^ik'oLQV!/8m"U:hAQH.6:7&"6Q)oirR2o\KnX&=gQb\nbfmCUXPQhMb-/)\fJu7J*KFpqQ<%08[
%]^8@l4fYaVm].Kp,q4+!mG&F"\O7oG8-;8PO@R<NEM,M-CesFrMEL&`T*@mg-NVe%4<WJ`OeRg0%8p@W9VSOZKG_Hgm\64s,l6#\
%%lM!L2[P^J>pAZ%X1GFK3$hcY)\ffW3mag+"sREI/rSNT0>g#FC?KTfP<Ano5uTAPq#rI4i!fD3UQfd]X55aA8P#ls?acfHE/WLk
%9$H9a1[K9^7rI&?3+m)L>pUS)DN-eU8:iV1cuj+9k=nB"WHM(G\?9CY:6JVBHMgf7Pu9#G'^<4#e?.CJqZ6n%ET7:5LqOX%9aM6T
%Wi_6ESoJJ\/Q?_USSL@;B!6(['4QKeMAN]L3+lG6<!TA4)dZh;U2)Tk`^Z>K8Q&-.(DZZn:g>lT8W.ggWmm_Ub*0':V)@obqbtb-
%/uCO+]`8W)>>5opSQ6UG&AISRqGOn"[8_(#JiKu>)m(X>bi2The;KVbZ=_8Far0:NaLfmu38n9smsr%_,s+=YK?7]t:_`n.2]moD
%r<#;CL5Mq0LKNdcEcddOj-C-$c1!X'Ck-k2h)FJUAel5Pr`<i#TRCWsjN1;X\[1S&?eQe]7%;c/h%BoRp\5RqRHmMA+ZXmQ_enBc
%J`rjr`3LD`QsF+1LH>>QHD.TS$CL.`nf_E(5,XQ!/^OT(H$O1H\uTGR`O(G`!L;cbC.mgQ'HBMHg6gu55UCQD'uFui4tj7A$,(U$
%F1\9'CkSmMM/(I<>/!;*8sb5L-bInuQ1pkj.KhdaWg-8]+^jU!nX;5MqQ)kIoa)dnScBQ5HqUfMRU4qf43];t+ppmeZ)M<-nL>/I
%l:io,g;s2jh\??P+=EE?V2mSPM$jdMq!(U;eO6bGEN3W!RPc>Wg2'C1GI"+clC4"QaM4SEoBlrW,Kg4YF'lD>]4IDaI%A6MIaUN9
%BG")r)SUkI9<*4t4-%f`$>"bB(*1d^FEKOQgo?LFkU/MB=Tmh)*gVMdD-rSYdVNj^8P]0Lb8H]_L:h=o0MGcc*_"_>XufliQ>86(
%=D2-,_AX1d9Rjj1Uu"og@V(4+(_2\'@5Ee>C($)*OlRQuE0DXr4LLA)R&Lus"h3bUUV(;mg2H5'U//K96ipUgAI=WSV`ZJPg=?Zb
%63UlbQ.2?!2J^*;DX'-Sp)Q_i1>##:+@`Cs'[dCA<2-gbn%1=Q%M.,DXokdEXd@P^6o7VVe5[3U@fhj;\[bH]6l=4sPaSToU2"&"
%e>?.99,Z.n*X'#S'UVr(ZM!4n+eXD;!R1s5L7Oo8l_)6J?&2:%:MPBPAfAA<XQ*8DOE[)WnuT>X(&1\r1cQ=\U@`-UX#b90gTE\<
%eH'"D75R\+)K^1o%UJ,'P>dk:r\-qAX%V#ZGA/\@)+3QYTunC^)K4'J:9Un.*'Er"k6jtWW_"=3Q[]s.;BeSteNhgO"*G0X.o*RU
%MlUQ9L5JNqWnJ-Aj>-9f#21Kc%TlpijXTE&\EbSPW-*-hROsg[8!bYuNLf0EDtP<Z66mTdc(o;k*0u\N<M=>.(VjR,XJneE\AXi[
%nMlR[`b$"*?*au5obc!%CcC+Q/%=b>;(tl&$rgD-6!aSjDca#1Eb!K"?ej1e4U;L,:e0ttq^*8@dR1(b2Qi8ImrNqA7mjFoo9r6&
%lKX55F8ICH)fl-h]@+OS)5`LuGqmC?6rJ7U(SS=#8HQ0>aXhXH"?M"11T6E79B2qSC1kII^i#5fQM'O/OHP'm&bJ8##*@G.<6r?B
%CMoq]+@fF%`tbs#eW$cZ=ft;6q\:@e,gol/0&OCnG;F!NI1ke1D&7b%gNEGDHU[4(XUs#!\LZ,8eMLdtJQf*eQ0=@_<=R(o[ag$l
%U(<[Q%@btTE$_O;g/d\.%:;Y!5Zc'?BsSdE+)6SF$:18RQHrN2fbUYG`f%)HKW/#KTRLOIdVpRK)0dbd:i'Fm>La&JVJjO'-ZM5P
%p7nn(?2\7-[]DYo=Q&Eps/O;>0Fp^C%8.J8\>[6$hE[A,OC:k,e6:2;Ao;Srgm;D's(Pd+SfKu;[X4`t>DpNFXrg`r=-DJ>]aR%V
%2m,+6L`^<qJ07+8+FC](hhZHAcEspCQ10Z7`g#kYnQVgm^/m%WYH$#LQ*(WqQjd,#g(7[jnc&ap&S8"8_*OWr0Xf`_km*N#C5YX'
%nf4Cq\c\1b#`j]BC2?/[iHB)?[nP$^Ii[U_[\&;T.RR!^DkY5e>\k>>+s=<Z"=b;2(YPtbT[PYad5Fui't7t"*i%/d6_rk#8Q&(<
%/)$r;&:@:YAeY%cK3"5*d@Ntlk1(-^Ea5$8SOUrH=r\Y2\DTj+GW3pDB^/Tt(:cFl/mr/Sm@9)@Y_.i?-7da^IT_7R6!f;^XBE4A
%>^:[9=^/D0)R@"27DS#n/NdQ4+Ta)V27c@r01NM"ZSla7OCA[La$Vaf(ejbh.V!J\a[NjudsS'b!cMd*`.Mll1!`Cn@J\,9pPJ==
%'?aB)p']p!Si*:BnWM>08PNAm80B?j8(>#\Y,Wmn^Yt(kP:Z>1M;g+.R7NICiCQonhi+QR),D0B3dTB[cK5&H)S1U.ero&*Ksn\>
%@]brPWJK@_ZB(At^YI0m&V]dcIt8lSKe:<8j,X1Qf7iP&Q)oWmYK]#KZ/!HDaC&VE(`+/reP24^m@r);&EKC#?D<PMZG1"$:ub1P
%rPkqPM8&7P(0Ai6>$^pVXEC9(0Y)'8lkZHD,'#6ToJDi0h(h4&8pC)6M4/`>s5Ma..L)_Y]@t*4(fU$:n&1JWq3late'_E)CrD_l
%a-,.CU(auY>VQpnGjh"B4j*&9%"qMQABM+@=j=XaS/6u]070j^OqD`^,uUnfnOteQmbMk&L0t^>f?Q$^?,=<<e,f&;S+@qWaQ4qP
%kJq/A3@2'6PW]n-^mWH5Ds7O1.a,&!4RYiC2lha"#o_(OP]X>J0DTHgB%BH*i<&F:[Qo5sQe@_8<FEsN'F`&]D!b4h5n>c0ICa9r
%[0T&%_>>3sP<W_MG85,^e'@ndB^LV('7CQI"TN;-VZ;Tl+Z[qdd1&SLIlA]We.0U_%N,s.]%&#`f"-SRATo&L2&q5C"Ld*j<m=F(
%P!#5,Ia_%8$q5;=8Sfao.r=8SpDrQd8?t;"$PkMlNV-0Re^Sl6Io`qr-RMNJm<;Iij$o?@M[k;DY1qoCWSJBW];JF`1Q3\2d-)!>
%B5uaMF0P1r,?&R4%C@('MD5e.*bF>L_*'QlA]pV4E)Taf01VY?`[Q0obLl5>['@e<`a(.!/fQd]Z9!ntX@8PWlU9=rG%K6C&JIMQ
%,")O1.Mim29DNsT+_R?I,*Zt1!#EtQrs:ofjGR_HT\>`inQX84<:seHG>WX`q71XC7'qLj1P>GdUE4jNRr(^li+d6=OfE*IgtYCZ
%U<<%o"EH?ME@uB8[q_WAKtt@d\=<S##5cs^"0kl7/\)-YN)(pF\t0ucZ)W@3DGX**$Yk0'rLi2UY=IX(4+]uaaP`^P;F"Z+Z5-,2
%Y\cj=YZEUu;fAN'?]%!no@%[<"gBSq':=`H)Kb<>e];OEnle%M@b:@C>s!Q;g25$[U\52fU@)iWFDW#\Pn6f(4"^ijS"at*mft);
%)?%.d-E`kK<s0SNMAqY/%_-._I3`Hh.Q24LFnOsCL(UFh>Kc<6R_u"]\*8FA0*4JggHE:SP:LQhE)UVU!@J4j;?QB>b9VK@)rggq
%>;BTM?EXkjZc)5b5ddV=2:6:ZMM-dCe,>tgbHKeal$u#m;OfS(8iTh#WFZ'(DNdU)0Ei6.""5sQ"J:JGS@&u.:PE5Jd3'kEIatbX
%9q&mgI/E[u1KoCQMWX.J\Toa[@BI&1#\2+cSdKN%7GXa&<FPIfo"W\`).'FiKQ1$_pAAJu?&C\UIf2koT(6O$VFI^bU(QcsT6:)h
%_%h["AQPmh;J8k&]?,)q*D"'oQ*SpX,Na8Cd0Sf$9Rg,(;gCf$NMu^%<;EVpfn,+i=Yo)]Q<b&s.2n=0/t--5;R@_fl3q_[40Cp(
%A)kk$K@mLY@qZFOY:K\hQ!mUNjD`"%TF6INGh8C,#HtrXknFDFp$>LuFg`".rkko=3mIili?B3Ys+^dW132/s=;g%C96Hsn*0YmX
%h"ak7(gUa:Wf(d9#M-6S<gj4<"XZ(^MeA/6XgWo][Fd.(%C9U&@VA9<I-jY,%5F^ie]neQgeO41.ghL-FS*d*7`j/I8*DQ,I70h%
%LHW/s>%=/]N@1@Yqo]OlY+M$2<B!4_$bKhe30m^<SJ=@]NZc]OFkdTM3d[]Z!=Xm[&B+:l$NmF4!`ZXdC.AQAn<+eos,ugHEd._/
%oG<:!RYHkJ:Yd!dec#:fapG59jZJG6?*7"u6%GcGVAU\6$A9SpK+p2SKH"h$f?F"F%?)toW.C;TCc(f?c.Zl7UU5hYQ2XKgkO#&R
%hQt5c,fQ(MRk(LXdeTZR;:&is\*sR_iNIK0'IW2O_J^]1Qh:IGNTnY4\f5P#C!7TcCg^J)ZR'M\0ht"]Vq66T";J(kQu;6<'k_7q
%89`L(WCKI[WFL`6Mn1?LC*lo,Z%&Q81d3+qT'kr2Ec)T3;FL@HMO0)uF(-d*=;;"TAn&0W\2YPSr!>nr1X_81Tq^6iU:l;rPuMWa
%e;PPDQFohfXR3H9?N]5pSEF7s->eV@KhbDTS1k4RUX'@M+CWV*=s@XcRo<X!Pq-U@O=lflS/f#S.NOm`aDQ3I"'/Z@-NuDC\<_\X
%NldDkl2hlVA5r5@gq078K-Js8\tP:L(FE<W(h'jjgXVP<#&77u)_I*jdDR)TGo>\Z4fdCF6$l*T%%Q&*%Dk.fV^]LZh!"F-$3<jX
%'nAnN8<dUX0.\[!Y3[YFr2UYiR@.&lZ;B+K%7g`l>OV!hgHQ?NaD;?j8Y;&o3_cLo@-jSG-NmLgFH(rL(pq6@h1I7oRXJ.:\K?L*
%.GKa!?LtjLVfFXF8<@q%Plc+Y?0sNf'L-?hqBH=Ho$oqmr83"qBE.1fr:M02fl)B=LYr+1GJF"?s7k[lXQ;,8kb%kRpOD_pn,JS9
%rh"Z4LHk_!YCH:ZJ,Jd8lsKbW\%hgH?iL&.ro9XLrnmY,J,e]HrPLl"leh`e?i>U1s"1_XGPod\NA#e]++3n9s6>[EhV\7Yh^^.P
%041-]JhI2gd"/U*@YK&nC?a4r_[md0:=urbCnZB5U%qeb%Yq+*,kl>DZ9'J<.@O#4js=F/PBL\V9'7@ho]8mD:V%.:]+T0q!=!-!
%FK1P*johgb`UBq>i_k'ZJ&e0`3!=\\g>tR1kQ?AH3#bte,DQhlTqhB0VA8^Gr.F&NEch'JMNSA*6i<qm&<JOI=A[)8r>KoICi?:k
%jTc:T%0_kY?k=+WOTPc\U/keHS+Y6#=S2E3kWY;K7q07cLAr7E_&1$?nt<dmp2>=*jce=mZ12@U0o0<!Bu6sM+8p(7d053e:bRbB
%F/NI`LjEU0)SUQ\f_N"@]//l`*Ss]^2rgLe;XQL(Sg3>,T=eajZVp308GC9;kDuEcjP28Xl(n3'c5j]VqU0bf0nZK616k@OFnghQ
%e7eh&VbS)7^RmP1T8g5NW@.F)q5OoXi6?f(Ds'b"Obh.%p)oT#@&(#&7bC>(+)4(3D<4<4D@K'WbX`1kmi*_q$(gpE0!YG4MYdh`
%B3Y-"(U4o5Kl1(KF/f8%*tU(-]Rh\A#VY5Mi'.=VL+X1Qlerf\EW;Htl;)p$=24R]++EhEIs15c.J7%;YT]Sfbs^kq(VHPMUHl&D
%8ODCO!,V:B3_HU'P.pkcInW/H5GdE(>I2_<#2-3RetV;.J*_safMC>.Ir::Kq5)%d[$SBbX%dV8956=;5!7QL.2@kC1ES*0bd$fb
%mD[P]W.Lh737njr36E7Eqplqg\O$!XJ+0B0i:$.7DuONpG5]4J?KeA9rtk>"$$g:DBmIUe#4-I0!':Y>BmE4>#3[nYJPI:AVZAg6
%muZ!`SF1U>kqh8i$#fYC2uNkrq?/^)_O<YU9qRNE!As345grMJV@P@ZThN3+R2TQrI__<h@bT]^V?WEr09=QEBArF_0)Z)[qBgJO
%J>GKJ8d1/WhgnCl0r4n"SaVZg-Uap7V&)gSnY?15SaUOG5a1nc2!HAqdO-U1'9r,&,j>u(e2U@bBjX-R^lbcAE268`dO,`CJ4P1*
%O;^H#TAX0L"X2EDKF\W.?qA<K(fE^lpNI1sT+IfZpsG_]UXsD[^lCT'7j!8V&%L"_@&&8kmI."$-d_')R*d;&kS%D^!2CVV2@LE3
%]P)c3M[!F.]u*:2d@pXW*UdC`-`h!ne^;,.6:Cu*g>A$e!>M*n5g`AHU/*Jj5`)pnPircO1bb[$*@(C`&Ud-)4on'$`eV8GC(Ic<
%K;n\O%Xl3KrX96a=fG1dl3B$8!>kS4$Op)!%2W8KkS#B:#o!.A,kMBTq?.(P`e,0>3oA>X%q*a[Yb4cgcmL)P!(#B*f`m$liBRJL
%]&-qhT:eFO"Ie4FTE,*Gmi]umJ?G5Y@16g75g)4l1_?>U*<Q'D!qZd!qLnkWph0U-rqV*D%.InV#CcsOoAVb_p@AUeq1S\D"SheG
%qg=!D5,1:DoNC$:T21j#:EZ9\paklicR6NkB6_`M\>R`Gj#aX2-X]_[4hlVq4s<&uo^"dD4eH\bL3^5r@%O!`4J+m1`d"r\0V4#D
%c6"4$6?oN$pBSY.$/t[d_".Taq#Km]"PrkRmX2lp#.4!=^b3"c$/,+Wlnkm:P'au*T2;(ST[$=eSI^h-5]l.487s&+f+3\_-U?i.
%T(<UTk6%1E$-`2OQLbF*q1Ri,"NVH?cM!"QI"H?eK&R1MkKT\.`;,)F$jc#ZZjYh$"D<-QE'=7]5J_7BHuls<2Zp`RhU.gbJ2[SB
%=hhjl5!_+l6#IUNRD/iA$F`%QE19=6?:`7.D&T`@hD(K1Ls8`bRLaA^-a]beRf,a\jqCeE:sJeGeML11h<(dTWqh=tHie&3K%#*t
%Bg/4I565I^?o4JuRXrhu=bAtQ4omL4n<ooa1Ohl,5(PLS_.Gkr1S9bs!R,@E!&G^9R1HOG:JdG`AbPRHR88o<,;O1!g_V0`JB[Qo
%aF(p95/T+7`a%tGbQf]]1D99[L\W_5dhp=&!s\>tJSG&DI)fSXUG!^nQOh/1j"A@_\B>-,jTFYnLs,T-i_k<Mp)W)>Gg#b#hXV>i
%V9tUj41++q@*;?MQ;:?#-`#iO5g(OFjV,l/).a[.bPVjU%#j:sa&mclZ$\f=4od,u_,giRnf;$3#d-"mo&AY8fZGRTjV+rj'4Bo(
%Y4<0*q1u%u^f:;dW&1+:Q4..q,4:_c7bWKlXDW3d,DHOn;Un/F:*4=a1lI"8TFJIt)FOJ(Me=/4:C(FXHMn<dq$`(,J3uMN+Us.<
%URM;lq(iTQ!=&?+#SIgF3s;>[OSKmsq$I&j$3'^QIPgi)r;_:o_EL.K+$W+V)Yc;,"$Sp-*Y!I$5JS>"HL)`Pa!]6o-^_q%aQ!rn
%d=B:.,N-soa7^P1nIb3aKQ_aY3^+Z,hf4[Ppgf&-V(pP=dP3%[$)jO:Ade4kB)<_?6AR#8+E1O%me#KMNg`Zn%CIgW\+i.&cBIC.
%=7&(`mU=DrcVrsiR5*k:F+L]U&TaNt\%]LNR.Gj=4/(do@I@jFgs^Y]:WCS'\su>:L<FkNg^(iYB?NH!Q@#&OpG?"?H*3[Xb&QO`
%=Lk?/EmI,7INBs$JTBk#TUa'EN>J.2S=GAVp%Mm8*[TFQ+!pY>8<-:73\HR2gI*5IOa@i&5\4^rl='S^Efqr0mNAm2roPEKW`02@
%;A:R`)T&F%?SPLHH(s$14LKrYC6,^N4@r6n`-7B5kGX52??=UQ7dW(Yjj$_MR%h#(p=WdCYb@s<C(DQ=*X8Q+O&,XuGhU(![-,8>
%%qF'0L8MYF9M:=WOkNq0]>c>DQr$+LdZLlVn.\oN^fd@r<o\^mGnjE\Wu@sl@A_i'f<&IMo7A,3=!%Zk4cJcS(u"XFZHE?^k*NQ.
%>oqVjR_U6-Z\EUff.hPQf>FPiT*BF$O6Ls-dcD'Hdn:b0ofSo5kODdf_mu@/F$0roH5OiurD5*`:WcXu2]WI$NOl5J@Ut5U;LU%>
%R%EHIm#3_An0PZ+U"3MTcRjp1aCGIj^.'qB%VU/*cfF%Yh-8js9[BK%4I@S[.X<e5k;%`.Nk%j0;je\=1-J<AqJIA'3QgS1=aWIP
%5:bB<0(.!3k%Y`KH9G*`\C`TZV?Yp*HBbtt'/+:Z.QR>uTeY@nh1=HqqfEQ??s6+pnWiC0amZ>JeTQ[;UmJ",(^Lssi:.VNVg>W6
%3QR,u`#*6jqa,m!_SCj+2k=:e\.RXRQGF,OiP4]-WEB>=ItE.hr;G^dqu&\KHUMh=5B]F'])*4C)USmg?]=GGOkj6I<W'i$A6M<i
%*T8PcK>>W0P&MpKpsFQd\bWO80:+>1Xd:+J0>$WB8(2"X?%-Iur6TK;%@>9(?C.%hh/Yd@h/:ojQEN`ZB$5)"r,JoE/O)'qIV?(c
%fOXfO`UZBKA[bb/07^(W/%`?4jSdn>fr^O7K5C0\IdaANn9\EX$MZbGAH]g/.p4(hasGqE/oF4.A3mTC)$:]'<'2]n2.=Mhhf9/q
%5hA63rOUU!,lMYbhk*"/]$G9tcu%sVbAYbID=[!.^GglpEcHllR$$A<^X)k,T=Xp2\SqB9?$"o$hS)dfIGNR8)A]ojmrMiCGP1q*
%f$sGfV=/U;I6HVj8K=q5%U35LU*4/Ne>Zp7$1on]$Eb_4'F2U-(/9?(<3euhFELE%(X-VmpqgGIKRI8\0,1iLf]sQ1D$9QL@4;>f
%n^f^.J+;,$k\F\3lZ_"Ic_/l#aD1m]Fjr)&oeZ%4!Hr>0Fi^1??%2pe(?SfKlN;8-KXlPa>ea>L4;A=8AjE`oWYtT-ADjFr5V@Nb
%Y$sX""-L<IeI/lji4W7NTiBs^634_j[2::<Pm+WMdGPTKdC+Qg=g^/Sd.!%!]n=[V'+'(r9#B^(Vr!:Q6XEBX^\SST.rft0X"3_d
%4c(7B'!!2G-+$`@@eV+-kpb#@f^4Ki1+(]e],U8d[HL*HB#OAcHSaZZ?GrJC,(A`Dr6U8p\I\4?)e+"7*g_36nierTId05se:RIZ
%%`E6M>edp1+F`T?r)rpUD.qG"qlkDX$eKKI%mP7ZrjhLecWu=`.Kb,P%#DKFp/W"!I9Ag7"b\/^#I_XCBcnEZM^cs#XH=!a;SB\K
%h1)&Ds$!jiIHpar`kN>BnnS+"eG%R3Iq.,.[/Ks!lgI3ihrsl_iIU:i)_HQ[Mnn0>pSm3A;o@MVp\SI<hktq<DYG+8d+s.8C%hGR
%lh@C/mrPDaVaeEsI==CpoD@&!2k'Z)0CMVaT6pK"[J516nG?LD?UEe?=7Yk]@B%Ydi%p2>:@%3>8r>$m#[s`AZ-!o^Isf`#Q5GQP
%h6Q,#7uuM&>4b"$k]MMa)%o/cUjr>D5Q+G4pIXK/;rQk;h.DmgL&q#ugPi/W05j:K:GnW6P\g=uYo*_7CAr2\2F"1mHn*`qWn)PM
%er3eWp>rDWo;P^\P=j)t6Ht9HbtlJ=+0%/iMDRPsd<m@iN!di&?D/5?Re):9c)AsiDtTMojdD`?B1?n'qXR[Wq,!RV6YY]?Tm5t>
%=trSI(oW^,'=D*3<\=_q!n!g`N%#GX-!DR:N`C,CDX^B4_:Pk_S1*i&i=/D.<:fAV9Le-gDCuN5Yt"bq(_9[,NDbeiZnW]I=n\3o
%Q=E=MeheRE5Oe7lrAs5%?:1FWCFYQ!`29g+fFnuabO=E#W1!H<%ECQECfQ_9H7SP180p(>hqAK9jk#UkAB];!]_uN3\P',U#@-Bb
%$!6q4`)V92\B6Pe9'Ia"\Y<!diJ[-EH74Wo3):<HO7cTfIFt)`P%-2f\;QgIq_=Q#itq?6*_rG+f:>["5K8mtcR3GsX,=URpAlT9
%@mWc\L_<=k?6`)5CIUnp(fHOSVj-6Z;ke3?F%Z#DTT]5A<0C`jM6HiE<K]S$Q/pQ(P5I&;,erK,j;:uC7J\pI`3j,*S>2,Wpq#T$
%D/0*Eqi6m[QYKL#%*O#p%:s?Df`'s[GH/Ygib7Z2JeZpZY(U$k<?Hq>q7X'o7qo;'Wa"5J5Dks%X1C<@PW.dolC4JmNV1JF_2fZj
%5/@,c?GmTH0;`@m-T:nW(FcY=lN)k!fDKqlNE,*m8!Ae?Zd<[f,fSu\`uicSo#LNrr0kBa56gW<f*%[8C;5_sRRi]N,H8TeYF/?M
%L/Nlj23hn[gM8??rg6?DhZm*AO3(As24?"A2H@KpLK"1,Rju/`Vpb*1O([HFPbPD_gd-V3P0+"9-,m@I]AQPcB"Km!E5YK#Lq]9E
%a<WPWQAR6dNsT1hIDf3I)..^=46.p4PV;Fk*V8s6X*;JMJ;=&kn=]`/NHiOJ)%ZOQa?tt:&'H8e*qPKNk<.rEG'0>j)*,[6TZX7D
%Lr`X2<aQ$C?aWTPV/)HEktaVM1q2%d<2[9b=M11l.WHrsh5;p;htif+P%1F`8D2ToQQ0L@L.e1&f-S09]B#$p0)9q&Mq/",5\-ib
%Mi^!ipcHENg\eh/`8<cPHAlba9:Egd>:!ZFPkA>$A>%%WVY8VtRiF5%Jm)MKDXqSc:&YuNP@&BK*]N34s1bRcI4N_C038WF8a^1X
%SH.$f&2Z$Jb3MX`AskqffE+f6UVnUd+Z*A3Z,C/s't`Vi12:RNKi4He%WYqham5\B2=Au16],_))*3Jce'AY%;;7R#A-H0t(Kr,5
%O^U!"I0ISpDWm61:o/qDCPF]Yg,Q3K'j:`XS$(8#ehW/f66nhY<ggCsahYhi(!oj7.l%tB6T'\FjhFu/H?fjBL5L[dF;1njoioA`
%`FD7J"/LP2Yf?Wph'1!*<QcYKG*'J139X<)!e&Y<J\hn*jD/d.F)!sfYTks`7r/4q.TruSg;:ZThE^Qnc=PM(`Wp=%cS1![m3/"/
%'&j=#^8BCTdB.,ST.3<jDHG>6&"nqD1uMmHW>-B[bB[7JCun!\L^Sm1O:g7*4aUI:af0sa/Zt!kMq.M3n$&@]4P%=Qhc?q<+lKG/
%a@tX;GMT^b//YA*HAonpmDW*O1m_rQ"0k&sV'N)_m+ao3<:=3'X\;=n+r1KBBbBqkVL2eOO3hpWLY=Pg>41CqR,b$=dj-L4W@FFV
%k`NNF)"?rm\nJ=eI9IU3)75,F6l,6/C2mg-q^]>](4e38Mp]u<rJ%F<Ck0>m>KpP`SS;kV$Lf.cFDf&O7Ap2s"=/OCeAh87!``<c
%I>o(FCW>.Ll#3F-2^C=0hZ5#7IM!sQX\\@Q#J`m%`Tbt"^9Y.q$f*P@("OI@7o'VPihoU!a)is=jlt5V`bEl.Z%aV+rT>/<SK_oi
%OHEh[pcNCC7"mS0@iOL97?DnKc<XjJLm!%;,/[;H<`P7d>N'dE>Bm0uNI%Lj,C*_NjJg$q&^P0B"oLpQrb6p!f4#Ci`rU*2Nfc;Z
%m%)*?**1>QN<0nn,Z290Y_^-E7HFH"Z3+Dd9$-X5RLdJKiZ4o2@Q1oaYk*m@D_s/8mV"+XE`eK0ga0h4;'`%k?Z'%1'D%tD9u>-A
%]H$PKqGL%M<#E03fH,CJe/Q[N$poar@Veu^l&nJ7k@Feul%Ms71I$Na2!3=dF2?k8%B>JLed]08C,kNa;C/,=19OtlcDpG/9+Yjk
%R9W>E38O[JP"4Dd2?W9eo4(`n#;rCPFgO3bC,q_EZ('7GWe0Nt1(<.FWcXUQEeDF4;DBtdg#8dpl;eo&.*@6ABA\_A:bC3DAK+3c
%70md`"O4bb"sLlmN>cE-@1X<WqI29\U@.4r%Q>O*WfQV!4uG1WE68H'=]1n!=dNOg\gC+C7CipZ0-]&+f;@@cep=;]%Cm?CoJLef
%lAjMj96)bAlb7u&3-i5XblGhY6/6HsP5c7uSq#X'fpP/')o40S6!01+),)!>0utD^hWF-$8lQEs@&*F>3X,BJj+2bG/?fCHKQQ7q
%at96Yd$[VhE9B-25;V8(17DB2@iZNfnkI\=]/O58X0HLK^;tb9;'l%UZrB.<O=T&qo^TliZ%/qp*\TgFmkC,(l<CZ\"Ib4;&0>V;
%VRH"%oNcPMIZOV,g')If0fF8TY>d&UZFbfd)J\Eu#rn=]mjWpg3.T2H4%$$Q'UFWC0qbB]MB,Dgs"Y:HP&?oA.OGfA'%=X.@\qko
%U''X]D;3`RX8B0+TcA3E!$DP.NJ3X2Ag#/<6@pJC=L-H&MP]SCYT,fFNodGBAoX&\YH7k5Z+,"hMePV0,.OW+q3of5=Kp20^bT^I
%1KRVQB%:EfAf0h+E,@h!_NmS,fKYN)$rOL<)t_F=24(X4?3Fd"j?o^STjALMFLC<F9'Xh:f\f,Sl3<,CIq4*9#r=M/]QsnbD"QH/
%0Ffs6>UN28#.FlP2H:S>-`^,6FalYfjq?`L18AL26$&d/'D8997tZ1mQ^!$@@[PC_W%`fD&Y)LL:(H-'XOs3LeB[&m_[EuEE.[fq
%6C;IIEAYSc(iWe=+fTXNXR^n0P"C\<at8p45am12iY2l33N/r+"Ord=c3\j]3+1_LK#e4-d1Yt?_s%`Q.TdO`+a^f8.^+#Sf1^LN
%mYIS[ArO1chkc$7(GQFsE/l*b!.hemEi*F=U1nKQ\W$+HZ9bj(r4$nh7Z)ephi#-8n^[t,3FWd9%m"'758B75R^,YH6`%B5r,?24
%`!!L`F5hZi*4:u^,6Q@qpe0CT\ObG9YbN8im=f%/C@%795ZiDr1C"&gb'PWEiZU=`E\AVhKk\luFCR[hA\a:44>Eg1n\9CqQ$!ms
%g=5+?7caGRaKLo&UDeNW`F;$ulDc@T*7a.PHpmrN'??tGfDhe.6^ob8^2EO\MXE>!5]]rjTN6,h]u3cSgK,rZb'f!2b3iJH5Nqc"
%-*>17X8G$$gt(Uh8]1tTb.a5]2L]m'1P@k+drN:JOVIsk>3#fi^gdA,aW"39gtQKl3)iC@1JP5K>0TP4+VmEDq?6m1c,+QF(h-/9
%a(\m^G'j/PDH8e*l`^0tGb(!@I-4O[f[6Y7n2>f!Tccm-0%Z^\O5n4aN`1>Mgd/f3]!o"JY*k1mdjW'nMeEk6@anSAd?B3-\)m%?
%(9ZsaMhBG0#raCmARJY'Ztt`Gq:1O5QnSDDP`$N55K"g*H53*d3U5b;_R*BieQ"'L&08dGh4_i[(!e"2;)o)[$H[A9Ienbc:!Vdf
%2k;STDMPhLX.)n_\sI4<T<n\sJK!5P)fuEV^M"pP\5#@.kA%N0=_iAR^2u<,?CN5cX,R-%5Zas3^O27oauYH24Dh@R8<3H]JF2%&
%6^oL:2hX&PreH;r%i7U[.,5t&r3^lc$CMp\i<sU;r88NU.6u\`=TEF7)b3p&#ld/=NEfuHYR^;*97^]t7$6-?,$CQLgNLm7%:sk<
%gfIdDKS1ESHH>ImP_WpG&;u>,Cl2+O(%i&uE%CXSeYIpjf2-%g's3.e84fCr[8W%sh<m@dIcrj%f0L0A^UgVeS_aH0(FDN?#[Gu;
%p$q%r"&BisHV+-r%e7V?S/l_>H1)@4gbi-=V2/)n_.=oJ.h3i:HPYB/P$+=.^EAV*MdP,a\dRX?(3o$:UP$ES</e2"fr.A[W4'b_
%$lSj^i#X;.8@cHYP;CdX'<Vn1A$lr0d"TXtYn#-h?Y32YG\fA-f"F&4*W&`jRSs3E;\d1lao1qm(Pq'S(B>FQ/rTHeceY9Uqi]s]
%b4M*fn?#&9X-W_G-$T0j8#'Ii=ne(K?.oIfL2N2#?YRG5X?6*<gQ]>Dfm#""&;8/<_lnr4TuH&"3i^P,K=O[N,=\BLg$M8Gi;?HQ
%mDUJ*UakV@3=uiE4)dBF+El/OYc5T6:X3SJ=j'$&n?BD!$V`4!4bllL]q+"WL&j+LXs@at\jDj/[ce]s6IU.H"kN<r,DBZ]0:!&%
%)IH2R[WGL]];N2uT\)^rB^#qu'eUUlU'YdZN_:DR@W=fT2^tl(a8H*>6"c6p`0Gl.cA-&2b0jHFp(*?-l6BQtVDR4=!bTmfR+QZO
%FJFUKW1+n8XBfX'p$0Ls`sT-uX[&DLem\b:IqEL[an.hT&D!eY+4;oWo.8d1C]o9tX78rs-^b*8l8._lm5qAtTb`PL7Qr6XHrA#V
%Fh@3N6MuRQSaLSS6LSX/gnp`QcA_7F\p>.'d#.I]?tu8%RmYH&#_7+7RkT7GGT)a'3%)Ik(5u%$dY3X%=b+[Br3;3qaYde4:l:CO
%`+br'0^Eb.4AmtnqAWM#\<u2#\rXgEJ8(jQD>*i71hqnKmdtN#9%H6IX=t$tCD(Gs;k\)CHI<HCH\_d4*/DAY*C[T#\8ZHs3)h5A
%+PQK&e>B7AbEXh+>jX,[JGKKdY8a<KJJ\)Y[-KEW(S?E^KSZ>j40ku05_?$,=.7Cj+=1ACc]5*8D!FDC;1n]KFe,nA/ULDd8U/7c
%4@HQn*P-4.Kup0^jsh(LOkpeH;7=Of/UP^DqX'C*BaRMHFA0leP$S<Rh$Sun.SWitVJY($BWmX5)UCRF+U&eFq&$>0Q_3CI*d1eV
%#SS7F@O50gRXjH<Y+.)<[YUXDEY/ZcSJgr:Vnau@Rh?^rG0JuJ,j:OLkR%EXHVsGW7nH:2d6u$UY^q#tU17($(eHU(/!Nj^?Cko#
%EK9W#Uu6S,*jc\e9`$tb;@h_Gh)cbg?^P89U=0V79hNtq!\,h]DH'Gtn4(s-cCg@*H<1!4eZQ\-?*RS`#>=FiQC/Ggf=p'c<0U@c
%>p7*d#HB+o5/mWC7K:#tLMZ5q_qM'WngfH"JXJSQ#+eHHmSH'8"]?OmD?']C(jCg\d&25,H)!e=>H",7IGTr4?!CEK`0W(2@'F_Y
%Uft?GUJ>@3MBVL4X!?+N\<6J#_Up2];E&i5KCg68P1?0k7=&t+r>+B/F/>q$?Fs&ZAKCCLaqkMJ_\`tl;&_i3@9]1<T&j_b(b1Id
%IM8NW_0<0bS[^tIBKBh9F]<'ac;FJ](cb>d+F;&OF_AiAZCqM]k*Dh=OD67'Q>k/1X?MM([0KEN3S2"Z2+@@,M[I\_`)YIr+kgcp
%YjGh!h7lqKWrmED=%g^j&:S>O5?Y)2dWY^m#rUW8QJikNK'sqH@!BX$S%A$EN045H/bZc_gN$rFPR<=%jdJ#d\_)A19-t9W1?^ic
%LUV64Y786CW0_2rY#fo`WR"o.T)1_$lV>_!e=b6f\6MDe;aa0s>k2Uto<?D]O1V';gL?uO52mg\*L51G\eDWDP>:H^R;equ)DYF)
%)6)HZ'*Di8n5ophQAChU?0NsoVX]G<%q3Sge7N6j%u%/37"<CXl%i63#9Y0+W^cA`\4ZiH-tt$XnRJLBgd,<$0`;&LB`!!1<isoS
%pdeR>?_$=6U"uR6:%I.KOl+^md#J42kr&3]Q0Tr>D/sD[AI1J<-7SY<];:=,7sr6#B:suiach_ZLe/Zoc"Krgc=YJ,&K!fQH*"9Z
%9Md2EEk'@#13q!#K61mCf,i!K.Nk\e[ON6*@lXn%%^Q;PSU/<jQg6_l>]]f+V:["ba&B7Zg^)?YJ\5b3k+9jc6b%SZd]m\J#)n(I
%mO'.?L2bf5L=eFb!9)\[e+fjJ?TG48oF'SKRa"LjcC3Ki'b;BBfa)l,NZobP^8_`rSi'<gnI@+].c?,kg!ML9Y57jk7;@2gD10D]
%)1fk4`=X"i3kMAUCrTXUe;Ue@CmCuQB!2b^a1026g8eDjG(;+2c-^N^"^499/G6-3>+RP0[4(J.=]Vg:#h[mtg5^%_&'D2mLlXPK
%911="GE>S6aR"T12-&jj_Ph@_Mdn*HXpe*]CWY<((etGZ0"7cp4*t._7Pfc:N#9e\j%(i(ChF2r`sCl96?&8m-;?L5Fj$kmge=/`
%koJ[!UG_[qUYK0h;b3N$lNsD_hO#bWg!nMpFZ51leU:E,.?-F0;(^%54Dek/K>`F?ja,g[q2up3a8Ms8?',:g3CF]R6tR1)U?f-+
%8[M[!fm9N4o3k34\U"n4Q]<+>:R%7r,D"PPqq[6Fn6WQWLJaaiEtoR#='.nUG2Xpu(gS]X-unc$EQ<"uRT4Wq;SP>#:7rM(.k9PI
%@TrZ?EP9'3BeQj=)[m8lekYH+ZG=dNY,S/GCC\(+(JJ5M3_Id"XC2\mq2\l&\SuIg^]VP60p/ka+0Rk8r[=5/.LFE'L8VeGUcqtp
%e5kt=>O52DQudY(U=`P^5R^!PcH:P-FM6m(3)euR"&X$=1dSp[>7YZjNmXYQg]XT7\oJ&`)00+BQn(W]d.]:`U?#g*d#U/Y+Cf09
%mALR#J!&uhcG.V$()hh-(GAMTL>IKG89\E&)GJiD-[Ck,X!qMeSO,R,RoH8)P=fdsT=!"*?="H-F5p+9E_V]lM[V0EWD(cf"8@$D
%\JNa1bo+q;a9SDR\rD\of-40^I)?ZHo8C:*Ps\/hAn-"qYgCgAoYG\BM!fFD32%eGU&Y9-W8lfEX"F#5GG[mlZ,8mc]#Sg%H!S1#
%h$1Si>8j5))66M/!7Y*LW2idG3snVaKS@7R0ROB!AXZPR)I)+(<_Ql4h!bo6[?aJ2Zt;&S'&ls/5i>9%QQj/`GYmYibe+QbA`"TF
%EcIBL<NikXp^jE>?tF(\KNr2^*QK,cL_I*d_jIO!5$KGDXtF/rlg-p(n##\YNg>kf^Z0S_[:3Z+]=>Fg`MIRJQ7%Pn.7D'(Qp0bp
%ZiWLIVf9(Da)d3hiU4i\dV*9<SW[O$b.S3C7jRFh8g%8K]B`1fE\(gHWkoc8OH+LGb?,+3^V31<p2u#!b*se^KtWp[9gTCbM9#3&
%/)!E851HV+$AB,?C3TS\p(a?jXWlXR0f?iCR/mY8`sZhte*%BQqRK$3Dn5Vi+<,tdf'0X%Lp6#a7F"2=gma)Ni!.S,-gG.((7fmg
%6LWDC>S(^T&YN[j=O!OGgK5:b]+sL,R\F\^GDR.eMsA@KbY>d9=Cgi#;`_</B*8trc(j]>6_pM*&`k=7i&%6UM3_899?B6?ds5pK
%e`08[Gm$eM>j8mU<\bE\rrg_a;Qko5Zu5lC<m-?\;H$=[78rLebNL5XQ`rnuDoV!Rd<56:i)RmsIPGI3-BDiDl6[3KDePffXH0eA
%f"14Pk!lG!>&=lg.FBM?"bDfWjN.bFBei'ZlN#e?j']dZmNH=qp]a)oi2%(R&fY/%F)67.Fr<P"\Ic&Y.kj@(<K["%q)FeI!XZ$"
%@/uGqa`>pgZFHb4eOrc`&NT+8aZ[p@2s9+`2K^p3[)R89<%\#$7SK21.iFV-0uTc%gU<>a2!:9P@GJU-NP@62N?F3J[$]I-AYCg1
%0gMK\ON1CI<R'HJ=AE^$%fqpGCrREo7Xqo26*JkM2PL1>;q-`C3((6@rUMu":$(ptNV'_#k5`X26'E>7;*`PP!WWon/kAsc74Eb#
%\n8t(l>[nniC,VQG^N3("&UoDPY@GegX?9nQ4U>oF/sr&0A^`jaGEu6/J^j)Tk0#slRMu,,s_98j:W"@>^"(G":-D.6Ym,.`%U1Q
%PC?nk:7Rc67/Ok!.&-pLYQ[@&3T"J-R>nK\dKgf2AEZj14+`X.Oenc!/a:+U+e2U^+k;#T\nV['2Tmlf#Hf?(&**^WPRoR8$4I.G
%mAltk*%%;90u8fB--L;^nr.=:jAWO4ml,t*R]$P7J9nK="efH<%pNh\S!8HZJpf=cgY!fd#WQTE^27q3m7PCae5ppt>_pc/6:^R.
%7nJ\%]g6,YU/?_J:^5X$p\CSh)+!BmhI=C8c9s2mYCu478Jfgd.:3k7X#M=t-*/r0hI4M3G/k%AYNgq%qcsRlQI\_N>IJ)C<MiC4
%]aeJJMnKJEiNSSblq)?/dA9kpO],;I![#;_A(-u8O867`6WF7q!SWeJ>ofBunR:suPS>=F)@;"4O;q/eC)FMCRhsgG?NijD(V5<k
%TYcAc!ng9Q6`E7"(RMIn)C4=,e;MM3LX][?A_M?i7U@imkgQ0jl\L_dNf8a1BqQ<#*]iE!3>j`kcl9d/iR<$J;ece]fdh+"Q4aD5
%*sFCZl^Oa$+hNG^4/1%QP@/Km`5JDZHYO>or]iCV,N'];AB9q`lka1/M\G[brWAP.DX@hp,S'2sAq9=7^BB77F8l<BWK)l:&U+ZH
%9,^,.ZqTq4&X\l<*2DnNG=aS?,mgqEFP*.5=<&u5[YE;D^_7d:#7t0[.E)@STc$/6H;#%R!,5'$NPNk?O02f(*E\3(:"u)n<V1rV
%TM0JiQ,U7mZ7eCnm.-(V1b]=.FDc5a"I0]p*$Caf+kZ6SU+WD]B.F+rX<I\0^Bt17L`ROg92dKecqBgiEbS!hCRJUAN_Bd\.S9o0
%WCR:[T5B]M26/8BoO9SGR2MLurH4?(mbRY5'W\J?lIkVi!oOr;+@Mm54\T1X$fl18btTn-4VpW@,dg9d?$Xi-K7HTDLX]V%6)tt^
%3fqD8?+numTd-LS\T;Ve"W?Wl;lN&[H*-NV(QYM%@o8pP'j=#-.uQ9Jo'flL5'5nZ<F,\0\sc6A74h6[9m%ISD,K.P2,,7)\qh]J
%#]\hjXnesJ,rVP@R.2:An7Vq(!:^pC3)+@nZ4[_go2SAse;[5YE/W/AV_i--'bE8XK8=@"36G.=XfhE2#Pbj^C0h_`=$mKRERS`-
%]+IcS=ktQB6M7BL=DG>q6<Kstq3,dB3@JDFhG"?UDNde]-\Y?oei8t0[h5=5H%'fg()[%DXcF^`mbXT\0H)\26FY6;A]IFl&giPu
%i/&8N!%C+/3f@0#Od(%=WDs`b;5tS!Z32>VH+N2A4jEo6*RWOoRRRUG-SRn]*%f1U==W<[]Aa.O5WKlR<?(U3cu!2uV?5'Aer7oj
%/_Y^rV\/$62"2,0$G7oJ>>(_n[><$u2&9t6\$SpJdk<<UltW1XQ%.(3(^.%<=p=3^C3QER9!0Ba_@Q:I5"ZE@eE=N>lC.ejnn?sD
%j/BR4Q._>*O$ZnBBeZ[+3nPn36>Z&O(-9=?c>I)X:\9IG@>1%bm=8=bm@kB60!,3Q@Gq^Z\E3Dsr:^PqY5UI<jS8!qoC3Z'n">oA
%A1MhBIoSu1>L:rU3nDMW-Zo)OM`HMg9rb/N#7W!fo*5eEKm%EWgA71?,@t>L?#\4,[Fq@a'J\"o+usjH5Z+:QLWeJo#\];L@H-B3
%+BPm&E,A+C!@%R*ic3N8b&s&lDhG)rC=7^J1j.Tr4P(PXp1bk([OA359%Bm]6_Pk@UF)6u30,'pS1Z^<.r`U$_/>4rG)'/H&dl6t
%EP&g3SR:_ZciKq=Xn)LtpF`SVD<lIRh4Xd%.ffs^[X5WqSo>%f:(RUKJh(j.+LYhmajq'HEP_Z=rH[;(p!MA2D%u?h_-eK4YMD%T
%*<";<hrVQ80*"I"HC]$nS7uq5@U+Ok5+LVmRMVp=))*!fM9)bnTi"DkeqPOX!YT7LLu/e"rWiWt'i<K^=Z\6<X?1:gW.c0T,ghYu
%]&>CuIZaDl_srZ&:Z+9dJPY&,r(M`gBK;\G8k"F7=l)I[Tbp2_$`Y^$39<`bK>U\_VE"q_2.:Z=p0SnF>*WQ_gB$s?6V6J<W(7sN
%FBaSfl$Ik$X?d\$pYWr$,$ToVS+C+!Orsu@GuadVodc6D"ZPf/l.0A"r\ka;Ko3\jgB\"qWNN7^'D\esT1(G5GVAAN9!-*ERBHGd
%%">l9T)MB/5DM@Y$/m%gniObXl6n`6PgDm>7.J\p#pCG7qh,MWkQ$T"7UP\<$rEl&q3ODOBHmTN5m(dF!OPc*qB,bPqEHh]'^>Ya
%jF9Mp-cafQe:2Z$5<J8)OT+cqoTK44\JM.tBOXeg6tBjU'CLDRfLU0WM8%R5dMdP9l/PU%\@.D+2]Fo[+S-a2duenPT_]=r5F2*Q
%d@ZulcR6i,K6Z!2IM>[6+M9=iAPlruYR'<QhgO;&''Oc!9>prY/U<LsO(:l:Vo;T1ldipg[7K7YS(>enl28s.[:9Rq6L%M'lJ-qN
%.=37^YZh]GHNKK['8,sP\fJP$S9A)=EH/BIdq4[6IX%IPo.@_Ko!mB-dH>YY6JtsKPcmhB>VkRF0OmI2f8TAYp>XO*M$r#kO**Uk
%*7SUo.&YEg4^@o4^SB\.Z[8O>S^>YWBBOokc;%q`,I2B+45Nct?".HEYd5"qq5gc@Lq@B?pG7>Og`h)pLp7%#UuJ=%mS<6k.T`oj
%[Q6o%F0tL+@<4cs8Gh(<3Vjk=Zr;tli@&J0KlGNHh5Hl\PZ=LD$;sH`5H%&B.RQYK"]&0fj@P4D?e5+QQM'<uHe&2$?#8)E`_T8u
%1-tTFNuEK(&ZCL:Fc3"Z(;7]9+%q'=rO!tF(G#H7ZtD*GD4s>.a_gkN.@Q]H$(;2^VI;:`6oJHm8G;TtBfLd:g._asP$?1$[O[+P
%P,F\ffb-E+Vhg*FY;4$FY:P@C@VZHJK/K%AgSbQ"Rif6L1d)6aV*==`1md#d?%8/A\4!\m@mAT?/@MU0ojo4%4tQ:cb%\k#CL&R?
%=qCl"hk,M2p[BgBT/p6'eEfG^(HM,D^/LE39;kh3]TlQYY.m6HfF2"3Sit%H=L*7X"ZVOT/1c.8fNf.Oq=2VjV-8VDHptpPF;F*i
%Qm3(p4Y;:6A</iZBeKQ6P_3G@8(8QWXP44LI$;*F?-]4pFbY[*iTiBB)VI9"<-2fT?%^`b2PZj>VAY=,Y\GDl7E.H$$6ZB3f5XBC
%O!KKkeFc2b,Y+ENpQ.^@f\$6gW&"<n#(WS36/T0a2$<-kASQMD6'1^UWBcG)8aHOlRi64#6Wo";10>FMkpT!KOISc7r(&WP\jMto
%),FD9r3QoX%kF?F4I<>oI"%(>Hq#k\*11A@&^<jke5*?c7]:0Mn65Y`?4a*T;TjMc>!;O<f$S!C0b0/e&e>DBD:oHJ)0_3th(sgD
%:A/N"+VhJXQL.ju=A%R#\;pSU>!X+==?Y?VL%9os/>o(&FO<CY*#emt'$tVY,8kGDV)$d^^h=2-7<7d)pU4e)KZ/c$=AnJ`B(<3V
%ZGg1+We;gEpl<^O<gm#)PccZ^Jn35bq\=e12Ec[8SLjXLr5WU0;0I(8MpfIfcc<s"@4p"MG25cb[('*H\Uc>s<GC\nAa&6IO40OT
%5?n?6Z6A`*(NXfS#J%=U^'[uN6s>um>e>B;CLYm;+Nb`@ksTDZ-qh2SEkVoea$Qi$`1B\cS.p@`&Jf+KI^\SDip/>f>!t+g)](i&
%f,bB)Pg>MPWNn@@^S8;9L51B[:*b4GA\poL_m6Bl8fKgujO.XgG5f9#bV=.\`P(UO.`T$3W'MQEYpTsFe<@^qK`sG_@^41p\?A3*
%[G((b=@p!Yhf?T%DGp!@VA-pN-Ik5`'2Z`;f.e"=k_IY4B@k?XIF4O?,c(ALe87[f!LiJc!gg!>RiZg@>>q!*jR9"^Nl_NCAiJ4i
%)(qn+(5e+MXOkk\BSQ4N<6GbR%<c!o+3@oe/hQPE=h8EIN"q_q55!lPX*+0"V=UBH55o-e3c4f)L;%+jou&,S^oblN0iWF/H=)I>
%R!,<*qYV2pR.o,W.\cHC-YZd(Xm2Y7^?f(j"P$I\==-O)1YtQF'clE918FCIo#/g+5_0qL;SQ?d=.+`K:tb5:]9i;7[7dqB5&Fau
%G9B!>,l*sOfkq@J\^^l@;:SL=ZgFZ,@56LVS8aK/VkRuKi2krR;60"5//X!<j`"cNh23O$MG]`5!_q:/g2[M`WsM;\WJ\3EUHit$
%RaRZ5P_UQAoZ"m(F#eD"S3m\FJ>c%(L/:baj2'C_1P4^;ENVP+K)2!0p2r.6h!,Hfeid?^%p;KlOKP*"re@Ir^I?LR"JhDXL-[Tm
%BndND,R+^`%`14n:u/G<b!ea'[=pF$\3Asim^5ehh82O[3V@ut["O6uF>uYKms8IBi7Xm,cHQ#h6^/OZ!`7HihA[+6C2J511,Wj'
%`'SO3keF"!Esb)L8PXPJNd;02b:S5s@29LpVc8._p&PcR>8r:hV)i)=FOr/0po+$>DoC*^=qn?T?+#i"NSYXjpsehQZQj&4ae=-:
%a`to$7E<N8VA<AX$k(&$W]HII3sHdTHDOID(:4"5_GhcH,%dYqMS7AN-0-45?)/sc0AY'=n<&)p.,[d'g^gMB8m)oa\*2^B`&om#
%*Df4)'b][.BP<c_O>'1,4<*iWq*_e8L\`8s9nKJL&G!D-21s_-"b&:+Gh\_r"bf5#K^3*f"g^,7^.dNW*J[tldM9NfAKRcm'&">r
%8ug"gJ+gIk"AW08*NPHHgbr:uq^oeOX_K_"+sN1(a<mp8V@1.B@ssRS$%S>E'tgnCls[_qO(_+IK9TKaVa5?9l/o)I)EDSSAjFVB
%ahR9UAg`mSB*ZmCaGA1Z`fUlCn3_%>Vrdtc"LH#7V]5A"kLW%R1=F7k)W\a[HKGr.m#&L=H>BE:B(&Xu-A]]+#fQ3(iBnZ8`4M9s
%r!.B>F07bB!QYr&T1i`qcU_c8jq`*XjrRY_s7!KG@^[1L9SkeZAO!:qk;ogF`0_EP3[IAWpVl_KjDYlY]$IB80Q$=HF?jnBSku+0
%Ep=?Dp+_)4h=I<..J!kE?p;Q.OYfll[tikAKQ3LZ]o!Z:`&'uK@"BWMOn?B$O&705d`[Rt<6"TGb-KneVKZ6OO!4r0:n(>*6]-*3
%YEt7.j+<TEio>XC+cB!bBCP(AGXQ-&<7i'hZ!eY(RHPmi424EPOL_)L=*E.h%[9fgYg;?ValM.=;9@NY(eDObn2>aI3$kKdO<5eo
%aW.@nN&AU/ea4:!9;k7JaU%F26Zo]#ikn9L791&TaRf26k(0\oqHIio-=_X/3B\0_/PMjUikn:-Yhl@tmOk5A/C+u.+&;JLY2/@:
%2'0klfG/$Y7%2LgnZ3)kTB%ooM.\oRE?BJNh?/RZ'8cN%>a&FX%E2p]d9G_^c.#QQ<G=Lq$aVfHL[MC0ngT@I36@ABl,7!TYGgE%
%GqdC@G0@iuaNRQlQ5lc`&Q#$E6d*_IhNQf`H,i>['`&sO"0=K4+(`#dh*RAYnhRBolS8I0\t]/nn/]\Q\>$\p-(VMl$a4H:H%=(?
%JXu5_<*[rq9B"r"^M4Tbf>@7P)@U%A<RIQn:'ae=YooocHb?5LR%,@t,0:ig>0muSVn-`j++4//Tg,"hnBCano8,qgRNMe!kn3%O
%iLFJ+:Jpi2XZN`ILf3-)lZV72SKS,b0G26kU\>U"1?'JA?PJXR/P/SQ)W7Z6(N4PBc:@teQO"U;/=QdFjUe.[b^FhSOPf_PJ_XtL
%"]B3;3AlHE+4qRKUjCt9:W4/;6%K"e<mWTUD`Nlp"AUS+;&tcrGJ[,^PNT-JI[q()5ZTpX7-#?Sif%Qoe61>gj=V\R>^T@*V"+TV
%PBd>NTI88ZR$Cf@UkXn7&%&)NNN+4-Q\,jGO&9p@5DU5AHme$I8\X<2O&h&]>a41kH"T4Nb=6a''mG^lMbm$]<30fA=mT78gEf'Z
%N+Jsc3&+1mSs;8?MB\3/_Q0GT%X=P#8Vkj#c718#qj&X&[^Fp3[-Xsmn#Og6[ZCbd]?(rhW4a.ec4".EL%)nc@H3$F1IAU2nQl[(
%2]IEh6!3me\KL64&3b=]lmr]k%LA[9&7e:<9IupsI3KB"Q$nH.jC%Yb+0I*<p<t8aZreo`A1dj!:nCZik;Y2DHtkCDD"3'm/-P8o
%.C+[G5-j]P20=bi25%Di_QmIie,!md.\*^f_s<J2j#dNKkll9^FC2^C8S=AhoU7AN`#FJt;?aGp],.n^DI`tdbYP]Ck)=O_;nE:o
%7P^q-:dBOOA+d1kij>tD;O#q74qT'_-gg,(CeY+nC7V<2ie&r<7)cPYM#D5K9_iMY<,E*m#H*I-rTiRerE,G1mJ\Q!CKeF[T$ptY
%DchqR&>6+9`DtWHcA#:kHBht1D!1)Dc>&jA[(KaWX!\n[DJmG#_m-?KOH6thnTe$t>V?>\^_Eu,[?^XiK\2dB,"YhqG'I@p_nIP<
%#iYd[1k:eVY,Qehaje]SnM[6Tk$sqdUfc$1-dA.CE1af60:--DYiPkHQ4uP6G*sOb3p(F`6Ru1+T#l:OF<$B-5IJ>*?VG69,/#h4
%1'ifUNu*KV,$'"[;M"Q8E^6h>#-#n=kMptp4Q:V"msL^bISQ=iV)hnX2Wr,>::kVO2QpZ)/9&ES$Hs[kX1+AJ@\sP+cr-sl&LSYc
%<YFrgDcbtM38qB6JGVZn3mY?E^u^gSJi%i`V/B2cZ`6D8Y&@<C-c@)<J]QJ/^bt\HP2M;j9PcD_C]K@R6lf7rX*sO-M[J;K+C/NX
%bDDf`9Gs^/dIH$Dd_VFUe$[*sM@37#-4?Q9aXD#_H:k?8`_P4);QBkp$sa89]'4*.lTD\cT$r-9IW)nMjW[#)WrD\6KdOJh9"f9A
%>?377-)mEbIY;;KEB8*L`&"%t`Z4ER@V4u_,kiWNd.A75kYKa;<fB=[oP6NGIf%Hrf(i+N$G;G<3"a>NFQ=ZdB*u$;"H!jI/=l4U
%+<lI3Zq8u^,lMPB1h<l6.opY-FM"#R(UUsnLmSrq=bkK4a2:+LPf/--X8T@MlGVsI&/\EP=aRE['l8>SXHR"'^957'URkC"Tr0Mk
%RP:r$b*XMnbjGY(L\]\KgV*[BNGktJ44Cp7BA`Z1?e;UMgH"sFX%+N+6L0%Rln_b)b/4Ui\+Aq_@+Vl/le@j#IIQOV=nV0PqE>bh
%m<ncEg%;tio^,BL_P8bK4o3$iY<FQ74ui3%%/P/HI!^4SSNG^fF1uj:^(8eB4(l9u1#E4C^7?k5cB[iY)`>l+J@fhhj\QRohG.bU
%W<5cWcO/I*PZO*VdYO!:9s!5/Uj>!B9,^>q6OE*dXXeN'"s;S.c!LBiEAUO7<6>0)T"jP$G^RgWd2.e,B'J+RQS!19WXot*rFH8;
%`q&P`If""FqS@C*[\N5;qMp$2*=^WJL\]iaFEH\+]!ECTi&J;(*0#R@r7]uJDr4h95F<u+;JnZ](3^OP*ul%T#)`MH92C2Z&,qGp
%Y;i0JMW(^_YF%7i`UHp0hn0\JequP%`=KtG4(#stXl>hN,2*ZbJmp(/r9<m-!D8bb7PD>`\`f%pR[G^g8V&*e#A2sEr4pm8&\^*@
%IF>WA8o`te/i(rP@]<;k[SbOG&'aD41f(9P'i1A)N:j+5iCG"pBlFo:nR8u.Df9@Gm>XiRTrGb/NZ)J-7h33bDc4kX&)iGpCO70P
%8B92Z([$'[]R7&plI\DX-';ijii:uj.b*'.hB!/g:Oq`JdW4Ma)*lsH[C_oNT6I@)KE(MfIQ?2Mf?Wl'^)Z"Qq4%-Lc?ad!]Gs)X
%R(9]ro#>l6>*ehsG9_*c;q?;QPq\aFQ03@NX'>#^@>t]WL<[;AalGlac,c$FE]io>EQGdO[jCX1,hB-6Jd5lo`I(Y>?>-;e(=2PZ
%MqjNVa_E4LHqE&AV\VGE+.X]LJ#npQo4^FkSD5s7i]4=MaM6MQ)fe&+RAWnlM;;88X1JW-T,#9D=7c[rn&d*VIsAL&Vg,`NpZ:kU
%JR\Pi6)WNKSRRMk]s?PikS0M.qR/tnh(G7Ag[n:oP/fbW2B2;s>dD&>[ik*g=CqO4A!Oa4/cRie:V2!=m1TDjfQiO:5ODAJS"H$2
%&G4D*TpKp:^%?lNpW33[0'uHH]K^g8r6m:i:V5+@IE;B90)8<#ZN'Qgrhk2DT:u=IScsWY'nGkV!2L,OJ@)?XUg4QTmAg5$<sD4Q
%l2^(^&<K(T!n+4cOES$^oV!+`G1D,M.gPu/=8s3HHsTL@(L4ahJUe\i-PY#tI3;A<l8#t8E0/_^QWt:1qI&$ZniOtF[!Ic%Y0C'u
%&;DekdNlYA64=iXXoXU/*oOLq2oEQ^5YGCgPmO7`acM%0LCX!1J=$Yh@)[EVq?&9@[p,LC9bmOk((F-cL$I5)-V-`=h%Qa$'O$('
%dA-=_`lTpt+reN#6Z'(AY(dM`,:gA=NdbD.@2'Tb`:-=`&mC2+%oOf5nGf3/!edu,BN3ESZ]qu8e*`c:EF9U0,[2I:$/o$f@?Mbn
%VMNFZSdj.J%_uAe^_"LTg8b*HKScI+WT8h2V/h4XMe#7+Xs\3G?4In%1op\kCdU3Q.^%#K,%1Cr?fKcB&E:j(il%a(AaG&<Z-u:\
%ZX-q38!E/a[r^;!>/kdDDV)>od'_UbmF8K.c]6h:L0aH;`hQlWmCN43fBp1m]4P@@lKY-GpN*C<"Bim8Go"(OEtp%l+%WP*'S0#X
%ca:Te,;F0P;\tcOM?,$G_5cZNjb)71DA]=0BE]',7P_(,@JoH]C>@8/RbGIdCIXT)g0*W;.-EROKZg\Nm3)_!*kX#F@koIu2pnte
%8QWT7/B60F)+6r`Pj_^m/af7%<Z3WcGGO@V.`e$6Yf1fA&*)#;dX8*@-qL.?e"sjD'NT<W7YY>\lNq0->l]HkTBpmX3.`Tg@_4]q
%]b(@ZXb,io]jkCD$ikS.`OO(SLMEi/lH+_<d4:,U=o[&&Mb[E%G04ufZKRLc6pBEnh/uP<%FjU6[Vu,n?2N.-;m40j55ihkNTOr)
%2G\P1dgrS0?0?=]38O='GAYf'fC\7'.82,-O&aa\l=+>WE<7.0;lRV]U'5J.!!puYKHUG?aR#Em,_*=t_DYD\7h,\KRX/pVh5HZ6
%^p94:\AF&,nADF-,r.FRL_"bC$Du!f1.@WH4a>k"q1RY&`iJX5%!pfDcm2$!ekeU&U6s'_8&kgb@hTf?)/o0bY!?<u)GDJJ_)`EM
%!JO[Xekotj)8\HO'pC?[,\R3;S^WAXGJSl%nmh6G@C%(uW"iR]Q/s`X-"1t^28]EfpSE8^$FXdpHRMoB?GPBQpd6CNqPuPOliU"!
%#87K0=F$XZSfk9CJh[7aoa,"7r*k*6(\dF<*I;]1?4?2[dY_A``>s&?K3\<S>hn9R"1C1]Yf/jZY,u?1('Cq2*iR$uBJD3!k;UUo
%5Sir)ZFE7QIK1o'?El]aMAs'7TG?(hWD,=g?LVJ43essg0OTbp]&EVh1lK?!]u8@<\(rA'N((@XmrETnlen)j0T.)eT;<qJZU36[
%8J_1`,e=g#kHMTMXZ6tN]QC8JI)'ng*e,:Ogr=RRl%?g7gPirO2S_u3oH>ZWj9=49bU$'toU'r\X<`:r;iqClgN__f!lhW7pBBRa
%'N]RS\99!t-\gr<&)=r&GNcgQi4p?kE!HjMJ.135!s9@lT=DZIYeV8/E!$IFJ-cWT@!b3AGDO$FJA<0H0]7KA#mYiF"'1ORabd>j
%>L7nDGSRW\RA:58=!`emr3b$]&Xs.ga8sth?*Y'r)6r0XZfL7gI%YH^MrT2j3-HR-i,J<Me["P\:A#f!0Da9fo\tMc`D5tJ'JCX5
%XmmdJJepM^MibQ4E5Bu7fZRQ:e1PoR(E^":G#B,<V2GjN(H\1GS]o%XQ&D3S`CAls06+6q\C_*mI*f@Ta]n,]/O"tpCpYc\g7gg.
%/NtRem"?s6\e^U>a=ltkj+s8-7AsCsYD9,HLg%04[5a?'Bj-1c`RdK)ie*oC:=!AsBCS:4@OGcme$A`kAJ%NMq<O_bYn=;:TOSQh
%(0W:_`aYiT&L&!152RP"3t7+0YS^_#$&]<$(-;PTd'%]:=+!iJfSN[GZn"=2=+kSt2n>/'6F`b;4bP=LkZ7%\.s@p-+%.W&RM?uK
%;8+*7'd",?2M)Y_]o!>@'qn[U^)h#(+]b;?0<pD]Wi4g^.X"])Ti;V6n`tOqMOdL2aAe[:&"/:c.MY%-$>EIA2W@c:p`NJ>e#:nj
%<*5igh4'@]ZTESmOJcc!%sa$Cl4c="MOcZE#AK&lVC5d^AVuI$`<T\+OJU<.?a:@b<Jh<]'K]$HSKu/Z7>dWY7HdU)^q]Li50-Uf
%e0m4a'Ha\1G#B$J6nt<+'H_uVFug<V)2\qS'KZnaSHd%<$&VQPGR@:6oI'A''0GlDSbU,.m>7D+6mtiET*XP8&>"]CFph*Ykt^SU
%-`f@kmiBEB'0FHqOIXC!&'9Z)S4MNO-[((T42$I]EYCOBM4N:P[3d)RHAPA_ZmKro'-EGcG!Zj(SVb&(`(jlQ,;Sf-CV;PO2A-Z^
%>\fDO\cjEI?_T^V,qL]HT'?q30(DY?@OE`>aqEa6/.o`3YrUUV&tpi'T=PXS=UD-$XMqk@-$G^i4%Y9*P_eFH.n].2,skC:54p0b
%a@YaJ,^*W0+1*;:;A)&;M%;ocD`SLM)2Z%a`(!/SLA^HO^UJm77R:K2+Rq`^@OE8&;ig\r*YI*<:[*[3NbD5ML_,SK1,=Qhk_L^K
%=q(e=]Yd/c[;?VU;lI"&$/><T/)ne*QH`EaQ4o&nR5O9C'S07a-.97?]t.%R/F>UY,#Rj+l91lt)V?YHp"j0)I:S4$UikuV"MpY$
%CSet)Zgh+eCoa^(GK`GidV)ljf3^Lr6=][FTn_%%<H*AuW9qo=5,/;8WG9KQ>a?3BPJ%AN>H&Q2l)JmkQD_SuiH.X%&!1IZ-PYU=
%qbFdp\L%k!*8M,<$UnnWno46/b#]\mEcfK'G5IufW:IM8b#W6\&I9e2IjpG5n7_/,96bQV41^UrIB&=A"DC/PG!>P22tF;%p">?"
%lpc>F00O[Bl!MT>)r]J`md*Ddp'0"7Z1K^"fo>4^7W\9mj=J8Ee_?lq;6.ZIPPsYmN0TJ:@pZd:6iPO:9#T,H49[6VXa$SIjus!!
%e1#;s(US^!kZL6Y5iH[&98Q])_rfQ3T'?];hI!bU&:N"74D=sTVr;7nTN--J(#deb)IXIE$n-"]-Cg/C;df9*3.B8t,!,GsL?(e5
%'=&CVWRVuaSD@1W<,>HW57trtH!cuD79USH_Mp[28X!,iiAgcI3cd*lKTi9u\_(&gRG(!ffB-NlMp$D>V9U+@h"*_)K?3bhc+T8%
%I\MKRN1g\hkbV8Yj9rYSl8Lcs)k$Pp^3cp1Da`l/hV4Xq[UHjd88ik#gIn5h,>c/&Vr,\HDq+#1iq,HNdhAmem_M1/0*\c.5pCrW
%aNFM'VFY/lQ^8J/1SWR9bU`##eqQAB9P(f+Sp8hs&Mb`U"#8pT9@8+"$5E9iH:$?LRo40kQNu\mZ=mqb=t0s#OsZ/R7jZ*Q=Y[m]
%Pi/1>(mp-#oWoM6J(S,]8Lij]>3^2eX#i`epSn+e!i7++,klUnJEX*T9C`8jUS3uqQ9gb!N5VdG+,/ThGS?4+Q.ou;VY^R27HqBY
%oRBi3(D4K2*.\XNB0*ounV8SpZf[O"jJA[Y0;<RS?kL[6&kG&6R^UDJYfr?+OL;aMO(L.(4//b=f-QYggm0<=<3o-N21r^T=_5#V
%TFlcE'.t1K9V.?!4t&-P]D00nh2l#s"8hbc_!W)E)`I5@9YBO$DlCSn-LmZu9\X&\\clD;jj0GP3]n0<.!$"NbpfJA!6sfS4`p5B
%h&@]VR'qM)W5s-[BJcVLQ/G^a&QWY[)08'JndtNi^dcrX+I$3=AaL1oqlR(#hhS"DLg&#C$-?j9*D)>A9!Ti<&ir+deW"6W-oP7E
%Dd&5[K<LI4/%!FfZ(d)&L!J4'>tAA(@1^H8/;\C^q.=1=C9iF6D*$/a<'=#i?h`r&&1Gc+nJB3=[PFKuftjXo0o?2bV.`rX3pR+p
%1Y=q;^0`+dSGkD".oOR@Pb6c]'u_LG#l%6Md0s8l?\Y+f=()c^%;5>\%iQ5Zn8i-S.[RicQ"!DO,WK-FFq=6Y[G;DZ3MD[eV0@hI
%c)MgFS^^dJVu%K=;FiZ+OZB:L+/s_$I36<8O8?9GUhqMo)b/PQON&_j]q$s2n'Z;'bI^GV8"h>M7UD\h>C*rXJ%;+\)$B$poI?ep
%rJ-cX`BnMRam6L7C($e7ZMS*e%seXY@?r=QQ98QT$m?)4qCHh9lr]gZ<gK8TXdPp-R:G*RWgPPGPX_bUX\B?UlA2VfV9af\<E5$?
%,;6S_%4[cY7isniqhP;C'BkP2P"lP0&ZROFf9hC-J3/VrNH,-PoEFM8K-d@8ES*.\i6Tr"gd/>p?`'kH;%`6h3g<P?<p=Do(=Hs;
%SXhgW8;jWTW3KH@p!2%38b5n*-reM5XqU/n?JH:eFHn+*Ru=Uj:?oK*,g93ALu)sVm[Y%'a0>oL"5>A)NuG54STPd#ll"D:_KG@M
%7sn9`l_%Htkf'toKaBKL&`=l`QkEYFUeu)*+/cHVdPS-fOcLFM_F%$I*T(#FF=J!R`\[/fI"_iFo!PGTA*&i=UTN7BgsPb&3F_2*
%cqun_Ym]LFOWrEE8U"@D&-8h"5oj(,NQ0L_AoLk?=+f@p'[>_9P9ZTeg$`tScNt-Br=6o<1gp`0fX5l(DB\!H$%#mnMEj)282#\7
%QIn\^6FVb7[cjXVI>$2CIS5,pQ<Z)M1j`6c0'H\*a/VP!0!uI=P-=(t\jV;ZC0#6/@>K!.*96@LKsXWHhYe_.h/e[%']`XEchOFK
%T-,8gi:/!6Mc(QtnnSH]UpM!%ot2^'kKkG:3+9IOE]C#!!6P@[6<Kg]a!to*(;@mg[aa/e6HP>A;?:Q>djfAQS;0VIfs@!#\qbD>
%MXWEj>*L%d4M_04es3Ars)-\Vh6j5T++T7P^+G^S*HueJ8Mc!AKUf`b9aq2aQP1k?@T[fbdeTljpB2A_("-'J]]s>Ldk.OtBb;%T
%U:Gr'Y%SH\h=Tr8*D0DU)TO?#%;5pfD[UQ/;b<Fkb^r>d$q#Eo]U)XqD\RH.GNXZY7'g!CSCkmmq^!%U-k;Lt^hmj.j[fX'_V:ss
%5J?a=T%%)bbV_L6$"mJW4qN$a"Qpf?3U"`E7pkn#Z(&Em"h/bID;I%;3Tm`f1cYcZZ)'R**faXD1'm^bg=%J=N25f\KtWLK`)QCd
%kq8u7G\H\JAd,h&T.,`3,Rql=!0gL7r$Aic-NuHp6VJBWU;M-).bp>M0hrlbOB)#J]P@:VEGDt_,R'M/Q-6Z!F="`D.aSW*XsTBY
%.^=\i*19#kJXtcrW3X-p3d1E_/NF3Vb::i_&<h-A68%9$@%V]O4%>`h=IT^lng;;QZ6sEA?mXY"l8fFJ"%>77B_JJZNLd-\GjKd(
%KIG>QFD1E&D-QO(.<`OIbsjY.;UF04[!(5p,'<R=BuaRnah46`,DjYi8,KM@*PK`]K'^"#di-4ga-IJp"]gh01$)MP'M;[_bt>[m
%kQ>WHB:8:5ldBMP2d+DQAh"L1A[^kb^$!X_)="^6elGMUBQ5TYp!@<LEI,'fT-hEP>9O]\$3kRDZJkM.83JA#>Y&L4QI%67gIje/
%,p2!)B1U9t9.Yj"4NZWK%U&KuFk>]iOq^?>/:so_YZ%f1\1/4,[@2Y=X")1:!;-f@0`/kkdY5r';0n`^LQ%6^1'i=BV4\U%8u[7+
%P2Lbk5G*m`DT1RW7F-0)o5RrV\-@Am0DROAm9Q=J@)g4'+PX:WWPC1Z2LCV+#Y?dm%fRYbI.*dhKCke'E[n(0;=ae"0eCDGUL9?A
%jN-TK!2=L[S4</Wb]E0Pm$!%OJbWDi)V'eMd(>gqhY&7/5L>]sj)V\SQkb9c]fF+9)'0Qj'(Y@pY/F*oj#XnEoo?#R8[p]O!QDSp
%jc9T#TlsFFk"sfq9I77Ge:,<QX%Bf6EOJUan+2)``.Ujk%%^EK9!eWq85E+hnrRW^0WQ0$?@g`h6>2<5eN@0Ehd*0J&=Nmo9J0.Y
%?)s;dqcN5hEft]][0(32&tKc#%,Y+8B8-SXcLbID\?t%/%Uc5PSIo#s?<r++!?f:Z]6l!PCPTHR_5l#(`o?ZhnL;P>Wb9Fn&%Ro)
%H\[uojn6`92u1MQlNMU)=']a74oR^;!bDCGYlb^_Coa;$FCmSe8nrSSQgmZk4@mXH#JTr:@OWkACFQF29pc>X=aD4-Ultc4MM.BL
%Q@b#U&Rk0-9APfl^nj?Vj@RR>?#I+k3jZ(Q//RL=FDlc</E[0Q7B?:WYE>h7ckG?l;P4^?.m]DNfX@eN_C7nuNBOQ""&A&f+hr8J
%hHoGV'\oNBeQag0+<ftjDbTtm_jY6%'X.heTUK.jiY2F,J/"Tk9-_oG2-icBZ4!HB([+b&c`[<--E#QQb.?5G;j:P&`0R?,B?gZ.
%\:e7IP.eb/miYPjQYnK-Wj@"V'CKD4C#Oe=m,b':QlV2lN=8riLd6i)4.P1F#NDbTeZnCnO>TH)BA+VP_m9aRKFFXIA.gQM.GMrR
%c`/>O0l<dBcg4omo.(^7Vg2Y)=>"?n0,Q),X;;eu8:<7%I8'#?V+1/"Wi0.%VPoC.<r#(/k8@??5i2&]do8`OrQq^1DD0$=!p7)Z
%>Hg<8L#BYi6dH-Jc/Eue2,?V\8R?6s#-[-sOF>WsgKG%dME]CJI0\K:^"F%R\c)kRFtU9geKbC&REO_6PusW5H,sB*e//uAgO`Dk
%gi]=?1([uSmaINDoXgWs3?JCI<!E5d0PiTBkj6f@TC^#WE,;(+Fb4d]Qo>@qMboQgZ;9*EaEL-[1dBQ/0[atY=R5IcOU)QjW?[^h
%^.f'dUff+^Jt)Wof+(PrX7>/Q4;)]D3sD5_2DUuk1M11dKHMj[F\Oate""K(h<`ft`:IQ4\*Y(MHaJT6.<CFf/_@o5bj3qm!12hM
%!sK@j(N#I/el<+e`ZY+N7igXHJ`u3rWop#7<R`S%eVrWV?ghg\[&>3kWP!uq7BERS7D*=lB_nE4[Yp<DBu=Ic^.Wd6::Phdd4N^+
%DcUuBLM(#;kAnQf;loYh:uM*+D?"pZ="_jZc4mq;KstZl7M`R<`5kP"\R,fJ1MYfH+,((G5I38'T`(dMS=FDmct<si<_\aI`pm>8
%#Gm1&Pl2L;CZu+SZhU;WH]GXSJOf-3/&*U6'HTTMqZe^+Y,\Xl`(n1+_KoC)?RiR?O:Y)d_a;ARC;%ueC(iB.nL(qQnA^.GEVrS4
%]W]Iu1?fA&j]i,tf.7`7JooU_2kf@P%(&\PAHcujpaS1.e$5'nX[9YYVZ\f,mSP?\&an=>9O$ZXG-)em@Qr6i+AD$)hepbKp)KA%
%bNsN;oc.#Ym:l7kFF([X^g3Z8;oQiaEEJ"BQ\h5DX;rJ=MM^WbGqK/"-'n+WOX:Y6V%EQ.-]9TrASLHU*f&?gD+9BG!Rf2N[=A+K
%HD#Fpa,nH[:[9&\PD6c>YOj3:p+0*0/EU7Q*E1FlbVka>R46@<a5mf83nT?T%)f`"<s/n%ItcK(:1t08Si,"L_JoGB]R]l8b%i&&
%N%7Kk_(:#n+PjlmkVrVN>HA**R72dG0;QVRp,%MBAM_DCQF,pa,Dd5P2@E==C#!\/>"eD`,r-;!gJ!/2>Ii@!H3+5Bc*>L.;>j`k
%K?2as`c5?WqXUQMP$ksHSX[;7$^'e&bS=rWb.2[aiA$2E^b4i&HW&Hcqs5KGjsmgr#%.S-FpcW'I>W)Jea`>qT^'])U"t&49$fns
%A0$`]Xrme9W3?R5hLs'>kM:NSUP(QujM87^9A$rMVqoPAm:FDKr3l8T$8\@Nc-e![N@<E6N^c)tU[U(^hu&GMc7"*(m#8g+Lhb?)
%Ae\iHo:)/qcHBm6ATV;WYMh'Q)ZebY5em?<dg'Q!"13+MqHsB3nGq9G!.Aedg)0nXr-t=357\F)N<dqXK'@mie&HoPkJ+C5?eW%D
%fmN%?`W#8(rtb(`[L9_'_L@OepXss3OF$6VjSWskJi1neO2"pdA`aQ9Gk!bLSpbJs_gnPuKHBHs,MOP'/RLUL[Y8?=/3+Lag=7a(
%Fu@d\(8bE<P9p(8=$$*0$4k2AS29-eWm6oW`J5pdd4"te%+]5`*iR[l4ZP?*g#g-VK2]6+n\Tjf)AYhP8^ZP@ocn65,*R*A7F=E6
%m>)ZGpGN^)Yqu'3aHf)A;QD3@KSU#fZifWdO#9+,*W[;[jcW?/9#N(Q6Dk&SU]mK_i``cPBMkPJ$mc#X[/2)udghWMKH]suWG8de
%DPYZEY)Fc5"OLqXkgq:n",E25T!Y6>b.0AR#GAhj`0eOjC3I/lfS]gj.V`EPj9:R<;IQSf$S'&dnS:EcefT^\Ocl8_maQo+mS%YE
%ZW^ELo8HF&YV"DY%_h)W3!>Wh*c!2C:r!9-Cl"gg\5T.h\soQq)BCOZ`=Ob^lpmg8E3&Yf"QJ#XQS7spY%M^`2bIPY8\1=ICCQ2C
%i[b47'a.nt@`_h**7$X*)\Q22FJE3AWqI%T?Gk[kOV])H'$@a]'EX.4nrN8@SK+f2KKj=?9AV:D*4I:D:)F+/6,+7=6,OfZN@C<d
%eLdt:QW1m:N]#!>S6WOcmN(7&HZtb#!jL[9SCClh5(r;!f1X;9,A$m@ao47F"4_gW)_KB"P+1D+fqh9V&aQMk/*I=sj3Af[2M86:
%-T@o_au5U;QP]f"Lq`bn<Rmd!H!LDZ=3d'6r`'DqcHH^aH"[Z+J99_`ANg!</mSJZV!8#NcLW)RVr@=O$bNJ"ab7j<\jjRb!a9@/
%ef\IIoO(aSX,kntFiIg1,F?61q=AD"JS$K?Q'79M/H,E5IOrU<^@,"qf@sKt^H(OA@e4@oTp[0OWIt3_[c(EU+EBPLHoBj(;u+Ud
%o7ni"rVE!JJ2I8k5?umf?X7#0?iTj"qMTh]+hoLDCe4-t2ndcpS<]hFHQ<_71EV9)'%-":7>ULW`<^DdA\JkrM;]-qPNIc7E9V.?
%lRsL`#.P)+>u,O37(r/C+4MgZfqWitM.'q/1Y**ZTNX,'Z;dQh_IL+S1m6^,%N[/%k7A2%bVRV++N)5#P?/Hg.N(!YjF"23l&$0T
%J]5i0/)n]Pg'GCU]-E5q:HP8;kK=+.67k[GZfY.2.l`@j!3^CaV_D0`PKISb%2?*`lP8HK#C6:%BHlT1k-.jsPs!Bl*CsWCoo,er
%ikq!Ts3:n5%8"J-]A:W@f7T^d9].c0e&qs1%\\sY?$`99hHto<USoZoEk+*%C]Bo^lDZ3j_cq4j^hOZgmi(<fIa(4#`.te3#.K0V
%1fY].pYf%e1&bJP$-o1JX:kc=E?d9B5hi5=nqpBAIH);/igPG3CVFmMHN`1-p'4R&+2%ttEaFff:'#?ZVdl0cdkTHDdh;k8:Y.lG
%X\$HB+lDK?:Fu^8KQLM&f@qT9dPW<OCL:#<USFl!*4OVB+f.na$AJ*knmNP07aHI8We76SSUuT(V3@O`-4;%c-n@d*r8a"SN@<mV
%H:"&f:jGU6LC(KB-"jLC)(NjU=#*5WEKBqD3W4*,-\\%*Y#*NZSg'UBLJS$mh!QjBPR2Vm[[gDL\ph#XTded<+KmF,#q?OY1_C-9
%Dt>Te&qMAuPNssn`eK^>>(RlBA],j-;kTgVK/-2j+bqahXHKY^'9EK[5Y#s/bP!VA7"4/`olR2r^j/j\BLRSIp(`!SF1W<U%=L#_
%C@CXsLS5*.1dqFaVkjm&HY@<'3V7)m9M27bH*uk38<T_W!A/^,XpZbKap+'-=o:dT7&C(nL6?!g*CHm*9?g`qN-6d;g-me4:QT7N
%RS'2Ed8+DYf/"+XThc$.ink98,Fo>hga0KG8dS/thXFJjE_nG\[PdMO]V3&"jP4];:PQGlN.C&1VDE=cihqADSmH]DJ0GE(ZiEoU
%(gsqT\DC;3FO2*JdR5>+keb]3GYipl[;%eO'C=R0$FT\7X.?Pt2FfL7Y"bqc3kaGX*[qn3RfusJ[CCt<OAoR+2%Xe;KYXd.nG6+d
%'!h#lOhN;RFbT<YR6X@rg-ocls$Eb1"4"JIkWm+uP7SpZ;+nLreQ0d\26mnl$NO;/]Eq^U`c*%S;oFa]Gi40>k_`@(X`Ygn[+79)
%0CT(IV22^kSe>sb87I31Y?\H@;Mo(?YQ3;2G8@uf\Ke.;,G9;=<Sng=R'C,]5\RHNcn/R,f/:KWf*arC*GQ=qU5S[W*sDMj6.l(-
%[cYeV'7GuqGp<F==aft993lp"g(1?5-SV$M"t!IXT,NJ%fd[6[<ihd?g1-@-aR;/#dU]!Xd8;.HXoI=4]k1%6mBV=hBmR;IApFG\
%V^PVCR8HZ=6_&[%#Qj>^2_TcHI.!G9]X;OId;"e1>GLDBau-r\<,ukq2M3R<<UF4d2'+qh&Nr9BeNYNbT/FP>aL"UW"=k1!:r4MC
%JG^+%XY,[B]S>W9CZm#qqY@`Pdb3?48ZE21F]"UM5tn:bgnVD43Sio=0(h4kM5I!tCVJ8E4LNTC33F^KGH71jSPJ\=k^lkMiL^n4
%oaq&5Uge"`OQiLmEJ;UD6!b!De3+LorEsh!9KJ3s+];PM[XXi+)EMI:"f>%>`QWj(,H**(ijJem+/CA>E(3oirjohX1`h,8$H.5Q
%]<$;Rh03g8YZe5h$lmac"Wh%[]#2hYmiK<3jp^T+(Nud8QKr]E1=Q<:q:A3G^.Tr0,D]LQ,Ko=G%"+ooBI]HW]nK_GopDSRca.(*
%f+;Rb1(_%GDq*'V/SCM2fC.-b6(R]&p(0n@B&Fcb=^'dlPl&'jD<F%*PV0HYD#cdMqLs_Lnb/u]/\jVQX+Se.Jbqsqb)2f!!%&5A
%`7'p7j*:U,BlX%V:^_m"N6K'J0SG^K3tGYdUd#cJSWGR8^ZUNW$#%?%3$QFX'V:]`h;AOPH1D"V?1>jhiq&apN4LVYXM(!i4f\a,
%>qdf70q"EO,D&/Z4XItc%97k[/!h6R"37BB7YmjT?^F0\)6$mS5*?eYc[D?*qCt*)IW1@=&=.OqKhgl$82P`N/O1D13A[E]o#+>N
%Ne^'WZ^.Z;N71?&=.BFfie&+#5TWRaE"a%.^i:R4+F--]7:n@ubhZnA<qJ)L)$M4MpF'DT3C)%?```QZ%e&rA0Sgier%=MdmL\ei
%P5:QAS(R<:M)qnc5uur**f8gQV]ot7[EU5h0^)bPNTui1B,hn%%;)FT!oUBM@=1rdQ^o3e@l3fL)BlBdisZBg/43//3T!!!,Oi#E
%l2unjY;7qbA%^5rK%Yqa:mC>[3nLo<Xf[us`\^<97q_n(l#(Wq<,J[(E%%[STd_+.U\,WoO'PQmp51b="R?RF/Y4l>fXm_/*3GsK
%!d%SNYUlPLi?&l9!1W;TC@QJ<l@a+Jo[O\2:ER)uUT@-a@PIa/0(/\b[=bp>NsV]<(&N2>iu*ql^*2GK4a$kW](g)fm//`p<m7Hr
%XV]U=T:D?]h#M_3A^Z+h[1"`')H)3idFSYa/h?]>qRE+2V23>#=\p#'R2X(tIUP9hn'+NjrbrKn(-jL9VL^MSeQ&'YLs.`0"/lZ/
%BEs<bE7;q/!u'*8J-T]X4GeL%`t*c`VB.lFMAZ8U8FK(qW-D3)C5A_VM"m'nQVI$WV`p:nkkc_R6T(A5I\B0`W%\R;>I>hacgR;c
%f1XZV%$\cr9-ZUoc;*PR\_P+Ed%[ReK1/-BR["BRA%M<UM.*7fs2+HrMd9<\&T[-Q#2]\AV%D-u7(Y))"J`*:UXD_NU;sC;%O>;C
%_AM#BQ_"7;dn%^Trj$^\CF\S9id_4\Xi!P&6s-,9Uj1n^,bbs9"L,K$BT8Giq@#T'(5&o@<RESTR]>1u23g.(FD(4s`R?%QRYk(l
%i#dJAX/,*NFpZ:kL*&0#<6Gdjs#A\:+!d`2N0%l<(!&0V$]o.;d/W^`2A"G%'c#0-K%eP4?n7I^iK@6o>!gE2o/[:*-@`O3<H3uL
%!F5/XMcLkcL;_Uul\`28<DpT7au:?S8a3G8o(?l^_;<\%-"d)Jk;]Ge>;_nfIB/*cRNQd5LJQXM5HZu<S\642F_q;ArDCh/7X9oe
%L$snNVL2QU(U&Vr5g`G+ai'*,CA3J`/NJYhkslJ9*ZE]:s1ahYWmIk1GZ?_LNAD[p!2O1or&X%]?Va%['6UG,CS8Dd5pEp1?7l?s
%4_/"X1a0#W9^1J]P:]G+LZdM>lZEXC0peVt26%%.ljKb30Zja:[M!6S71CCa/NHu'NK/[Y9+5OjD0D4cXTMH!Xu-a-:8R*-&hl%9
%""Y_#BB+Y%q3E[9bH%TDENSQm*CWngMpIIdRa,od73[S=2t6*d%!'^=XTD('Om94"%dNkTe6PCdPm1jo1DXgqXumFA.sZ0/p*ZDR
%*&+ONE]nT=0bV']@"/kn/Daan5UPRN4c)S$f@-^c8g58*JTsE9/r1JX09$k:U[,'l10uc&%@m(sjK31/7$PYTX'='X>QM!6O%E0U
%2WF.-_!EL%3CH03aO[O(UoX]:)Dt31!n_2i"`Mg_^XeSsgF=irEjYO!q7!FEp_PiZra8ek.+U6H8N[aTT?&)oVD;-ccVt@/n"D:=
%F<?WqlS4>Q#Fo(B1_fMt#\=>h"$qEIFb!g8?u(Jr5B'#PXK"I,l9j'F[7.@tR@_HJR?2p"9'LY<1\/4e=&#]Q<Zmff.&oB9R7df&
%d`Q/[WSXZ=DSSrD:++]V2&,A6Y>/e+nKLe,./MRi4p3i/Y.)_ROV%R\\N3]k>e/o1[6:1oTHd>j;\YM_Z.;;<C@dY5eL<I[/iE@0
%T4F6$r"ZJ?YN\IiEU@B=a"+"T+%:X0rb_qoXDjDo^?Tbn.9U`ih('E]?[SdYmnpkt*&V%3q]ji`62R5u'^LUWBO%a+H7D1fCRTER
%nk"Oe]1k(09@]S`l_$O&7]J#)/Wc/a8"#1:'a5FhL-/sCKs]F#q@;*^6%s#OTOLnmT<D#jH/V\bC3&2Fd%/MaQ(/n.%E6TW]!3b*
%J7Oc'QeRLs8Z<2meB6r#r.'i13;gRZ]7'cLi6&+7`7sE#s/8h90`DLE4?2,3;!ahP"]').S<qPB*[5B!'QC"2X*m+BdbfJl"3r3c
%J4%*^Y'@bUU-YoeN?X1b3!!Y2O`#iE$L'BG8hd%_m"Q0q";A!")FnPjC8\i(PQk"$3I!\,4Jcg;PE/sEWFnSJ<&ZAM!GW2hZoYqe
%GjgIO,b^t_V/L7Zib-?ViGasX!k6<,.Ph\l^o2mZ[kL8DY7b*Np+s4nf8cq.Fe9It(GM\qQE6?e=jA[f(,!'M!JCcqJ1Gu%Q&:0%
%B`a3LBh>C)^sMBrWfWs3#J!5Z5i2bWd-g:X,(.fOV=7'aZ)X9W4H^";(cfQ-iL>I3m]VY&Nalq4"lrWE,RppdQ.)5IR"?KO2[)-M
%\6d2n=9Qjqfh)QO&]^m9#UK\LDQ4"1N1NKrjfm`PUQhs,Nkf1e6EiZjd7Qt[:^'`2VM[FH@VH&!1S:N]&bT+pI][L]ZaKJMfPZBb
%(GfFj^^q8h6TXgRAZ/Z8-(t`AG^qX&mYX=t/Um'.dM7);e\$6g*[l6UNCKX-<Lh:T1a<erZr[e`p/jLF_^GK(8^U?"=StTn+,u;T
%f<#_iJZn;N]l5k>+XkWu8&/]-?nIU!?Y=3SJqn/<+C8DJ^0P$Z?l+^38?>(m-kSjmSOl)2g7,F3CfO6lBnD'f"Y$8EHr.#Ypk+cj
%8Ws4WJhQZZ%5MeKDQQ[L7?rINC?Yra8jb%+)+nPeA.q,&9[?SX7su=#B^h,K+O=Sa;'?HA:8O7OKr(%_^kbr\4#K[]=#HBc5:\k*
%mK25c?pt!7(D*\jdMldh0T=sA*I=[Qonre"Ueh8S^4X!.da1q9PVO%N?hkj#KuN.\(8_);K_g>tT]VMaRn_I8=,pLccM?]A3+m/,
%g9-P.dD@ul8J@"e6=`KnR<)Rhe#HXah#FbWD35O2<d0^uA^gH07=(e>>tA\KHkC"XQ.M`V#9NT'T1oLW`($)IB]Rr`/o=k6Od%iu
%88+!m/M2=>U"0bTeV!X2Z3tf1L4r8%iSAp!\QErFLSZ8[*8lahcH2:RQ>I68AFmUL:\K9K7\t>F=4P5\F=CjQf</$b'@St0Uug:b
%4=AKcR?9_X+FZ(W&3Fe;g/QQkWf/O68^m2l>t1Do:;l@hRArSM+u4!NQ]EK.jp5i0W_"mDMA_D<Bb!#r<Q=CW9;I;C<6\=G:VCQE
%>&%<B,EU6=`#SSjW=Z2<:.Q/#b*:FFFV\jpnX?(5k?@2,/,ZF(2J."Di`a4VL\,2^e\n5SFgr]^!nP\Vag.Dt5tR8o8)2'SL_:!4
%!4d\Umj<+E&OAZE749?-()'&h!O8Q5JkW@L`4j-[lY)J9.Ho'8lRMB+5Y-Wm^f.%c-g3(j3`Ap7][0ObTgg?H,sBPN9^@5Mm>rY9
%`>!H=._Q4<Li2\?DOsU%f-S\iRS%SD;H.Z-)LuG9ik6B\PqAV34QIXl.Vc==VJ$b\USLhfkB,aLeZMLe^"3k</EaG3DbBh%#JPF5
%;d*IK5DTQC:*p=65Lbg`7WC20l;C$TDI(f^lIf+4ZKqYg:of0k0e-1-LJV-,5Z#;iqOj>jL#2$de#KGGLWDpZ+e7@-WXA\+fJ#>d
%X>3a$I):u(!Z=Tna/A4lb@q6%#b<Nn#V\J[I;3kC9sSpd7[sfKY5(FV@'1cdA^<IojsrKgY6mQoAM__.MqS1`5V?]Jr]tFS@I;Ib
%5*%m$4giJ?C5`gu3lMs^Q;Pn-)\gM$9g!lb5YP?)0(Juai)$O$K$Cn-i,>e"U7VP7U)%f:2M8T?r"X\-@_IdJ[4T>:Vu;#1+0JW0
%dAu1f[?D(XB@QdNT1DMj^m%)5rTYG(,j)t*(*Qtrb$DLfV8>11BPK8:X.=u&FZ6a=M\7L4rEZ,0GWMb>V(V18UQF%lWl>fSZf=K>
%5f@5H$S,4',P?rI%X";+g;72a>?*TgNcRL$IsSno7^s]G]QXp(TK`nk4DAu=1jZ=/H:C,X9<U`.,^/m_&/'Lo#,R7=B3qG%m57OF
%7DA.p.cK!%.70-mJ8f)l>I?T3MZWo4!ntf`9hLHHZH1Xr9CsnSJ++_iTQO@Y1bdG&lMFL4jI1k:'%E$JdOW0;GpLM>)PgMnfN"1?
%IlAt4"MdMF#rbY.q(V"t-4C$`jN]I@J2<ogSq_Q#OsqULcSZP4oY`MH&e"488:jfET6EbOLb;H/8cHLVM_s46AHVO*P?Yh*CYt$c
%+W$\Re,pZoSbi6Q*=*o]3g0=?R]r]BgEo4?)UKQW,<EHH/3,sm5lB2C'*`kUc.ql7?sQNqL/IT@ac?;p@D`7^V1KS`h3&5(ll9h(
%>mg<M@uMI<);=)W3sbsYUQpULLXH4tBh$j=]QRs&eMEGQ=d<+i2#6j=X8pi43od_#$In$=Ti%@MEfNDG91,..PW$h[e[GB6k"u1`
%,j`4Yb-VM3Jq`e:+]!=2MqgBRZ_sRk0"jJ0+Unta:&RM5b_K_FBUaT,O\-*Ka?![*O9B-_RtY.>K2i@PR5-Y"6L*V\"pRMb!^]d2
%e#YQR#,7AF=fRS-q3*]F-&b3kip-,)23[u,EO!eII(bCG+;M;"8rV5QC.41?S6JrPWlU=VZ;;=2$gS((:5_Vb[ns>XP,fcYr,Y8)
%MklQ8@#3N@*T&;p*0R>^m83H)RU]7V!$t2lhD?]/NrTnUZAcE?(pUE4FG#$e+D2]&5%<Y!i)Dc)9MV9&!HjOh"(kG"r#1adJn"jK
%@)6Y9b'ZJ/5f?2_4T25c$CQer`.D0MdP\/JI83'[d@DN%S91@M=R&'nRMED(Ftk(d:6?@VPkAHCjPh`acdEo<lLGajNT)V=neo^1
%CuJBr#eJU2/mD`+du?I%I%=_dTh[tlM-O^67TpOZ7u85&q#R$RP1Nk_mLcZ%+MhJQ#dL@-P/;3?fh.>^jrk9gdV`G!Vfnp\&NCkS
%E6JNS-V3:?ECi6p2/O<Q;eh^m?!uffeYNtr*X)U>'?\%"6X=F;_PG=Z]/f<%U6L4_7@MG5NdMG.J^(L(!A-1)l@_q0$#t#gk4UXs
%\kg@P6UJV7NLnB:lse:SLgl2Pc5(M?ZIUL[=BFO&A`_?:VNmb^n\c.$M#dtMEj&Atf94iT)@nApC_RdL[6V!jT1o\Sl`3C/ed5kE
%\V\+)QL4]8P#X8'Dot`"hEYaEBHHKP`p>[?3*96::e%5\WBba'PGQRV'Q.Po/\A)L&RUcFcuhAl_j4bfnSrjp67VLk$Etf0<$St>
%aT=RmBM8*BN(\J?PA6])k(4!l)<bG-'&'hF:'TRGA1_/*Fjcs!X0=%R[NUsU2=pU)7:1UCT;OP0W$PG``WfQ]jg#Yn'Aib'j/I8h
%Ma@?KlGij935cfFlbI4/.s*6)?E"%2FsE_b=q@q]??uZu[:M:?V=(!3WL<%`d-,.[%945sD%:g<X:?q=LWWYrRu9dMI%n8RCtlc;
%]7F7[fQ(TpG6L/tA6cE26`ALNpNc1^![OJeo`1KG5R3:cphCIMn<?AZFf+IseG6BlrR!I._g>;@RU18S-L3U$2UbElm7"VoSdQb+
%F\QOD$[1[pMG0@^MY:N]#]^(MVC"taRd)Z=U(3GWT:\IJ7FeGqYnqbcr3.X?$"PsD&A$Gc1>0*daXsg@g-p9+*_kRK(eV5\*,&G5
%L(MC,X?]rE]d(-%WA>W<IT<.JMSm]Z;<;anAhH"^j;eY0"tNrq@Kj8(^a%S)nnOhpIKiF,<.N8CdR+tc94QZ;C4qs"U]tlV:Qtl&
%;TE7Pa[<eq>4UF;'&^K1g7[*=iHX!gOmj!"6Pg,,Y;XSl[<cKP5)N#?,Es*-s&uj`@EkI1C#CI=7O(,fA0=quH"&HW*OR&[PqtUK
%/JGi+V-^N=L&b=2*D;FJi)Gd9\pAq'm2=YY"O@-O^PL8pr+^eicX<(?s'm)Wmm#%4P,$#FiXCZ?Aqe72(i'6.A6NRWCrnP+#Qnh?
%I7Zlk3cc[0de*;ARs-Ih$:Fk#UsQmW3^4A>V]J3nlIhCk\`?V;qKC0!KE0(%kqdL^)UeAM\,8[abaErc$u,U`r!8qUVpm]<M%iAs
%rG_7=el,PS2;<"!Kr!EfR.?L-!*12;O$ho_E]ZU[MSDLOV:.^t\XB6V&6lOcGWh!@(g-!p[3TYK!C:&[;^0U4Mg73j#)6Z%Z@/?=
%D,N?m,N_r1MKbD'i@Z()*7.a3Ok`hjV+QV0&/(l88Q5:Kp:n/6OCe5nh)6:8A5m4#;,5h>o2(30kh]_i$G?nD.B*>-JCL&%Tt5RT
%[kG6MX[eog1?k,VYl%4'b9[E`WjkIA@LgdTkVjj-c<r=9DDjo3A9h:H95im+h)A!?8otfY`n5U-Qq%"TWY,S'`n<g4#*'AmRgYA`
%8I"OI/N*$l-/F4k@YW*@Z"uWOk[=@JNC/::$75)FXCD<H;A".h=Nk,iBZqlU6FHTNIUTca^QLMZViqON#>`W'P"bHZ>WEsnM?i8<
%0a*uf,7[L)'tKLi'^)Hq+o52=A9eBP!0H]ucT5$gl!F+L</PJbfKP7B_/;u%8lJ%tgalZnH3;lC&_9mn+aIfDEc36p:&M)a-ttbM
%@Alg1D0EJV,X&b,I((PFQtmI)V0Ek3;Q6N`4TpO=C+.^=:Pu*mN'p7oXXU*896HWYLkM2:fhRjo>XX<eAe^#$NNHaDngmrTWqoUT
%C@"nB-&'[!s%[3:6brWeV8H.Zfui"L9LcaZ-g6uU7QHMmUkU-^";TgKWr9A[fatH["SA?R/?XocQF$p*UX=Xl6d;>M3@Rcd2cM7a
%.b-*[M$_%\^o%T`eQgUt+ZoYQXl*BXfrCYe3`Y!=R4s\FF18p@/DLL-'gV0ZgQ5af1P'`/T3'Z=(k:"@C$4\TiP/^rmGG^,rVGhE
%o]&Aih.ZEZ%M%\sR9-u4(3L*i?AnCNJ@S*o2j1fhjOMTijHU_R=?<`\O*@A=]@#WG&hd5KV\8GfLY"#gI.p\#h.uMo/+?_lGC2RG
%GPCC7)spo]n+'SHo'Th.f;cGi&(03mjK8Z1QZ2IH\8/c`%u9#Ej`W5O^#X?$W9s#kG'@-%+/F(^Ztgh<V6k$3h'HZAU#!E-Y%;e>
%:HH*LRGAB']-4K'7GT0"4,r'XfX2pV94E+CYe(S$rLg@+PLg7d>uBdO]']fCh4;"B:0RCEZ>Ks6lIVB,Y'"lhDABIgTrP.$HDp+H
%7!1jqpZj!%)iD3BOErA@mK@YkHFb8t42661dg\0?WF^dPmS6IMPEtW39%Q\H?V_j$%m%9@)-s<,k$.^OC.B@6F>k,Lmh334cs>?J
%[t=$C5^0,uqa!DiVk1L4ci'N-]9COJEpaRS[;t\*iEXOng*C"9\aQi7;U$4hhaDO0R^kN%g^f:Q42K^3?LA'/>cZsI]*bt$SQP:b
%Xk]IHDCFUMD(Uum57$B=FE0;q\U0UsSOdX3jNara7W(cXIf6@0]+`8n5-AJ+QU#HPj*JUhl/V3mEHg]X+2i/Cg:04Yg^hQ;)e%Nm
%0!8c*p!0/7\6DtgDT_"cWjl81gl3ZK:(m;R,48bKpIu0"Ek#/VIELO:e8R?U\9fg_SJ85lE0hE?Ui8OHiGO<fG<35WKBj39-%ig.
%_;0q*IaGmd8`5=)Y*B)V!V_3HmS<e*,CfSVrH9Q;]@4L%oW=G>6htmQI(Rk@r?-I!;n_"DhL<hah+?Jk'Q62AhJW"(GB10>[9JRF
%C1c@4[l^_H%oTkuV;&-!m0B3:NQgcZjn=>Jm7u\b,B:=s\@'->\oA,5mdt?\aP6.4D(TY+(O:qnm^6n!g@jj/CqC@hrLdr<PI95G
%g29>rGFGr`Br`nBV!VL9p0H$gUM%3*ZOJeHYD8M47a(LXPjM5f2M>m0(.,GOFDTiGCj.A;+%0p4_tI^T>AMm&^q)@=pCanr"l#Su
%m0ESnbL`n2B)PoVf4r.Zo!KRhCFrlip!g/#8_7.VG%E56EpZ?+p.`$IZF/P;*jW18eQRm^cEF-ZD-t9WT/CD.P-n>lm9^CCg(/eC
%)njsr>]$FiIf1fu]@3d.Q`AjleS^%T6`7@VFDA9?[;[,2XGXLpXLTdJZR$ZT5M:4gm$K["R't:,8\J`-,F1B%PV5IGV`iSX'9Qr\
%]dFnCVdr+6S.jE*R6YbUN3[dmO<:dU(rTER'[k[c%b8HZO#+B.,tKrq=:j[*qp-KX-Y",FQ$Ttf=,<sP8>"DN+7ekYCli^$!5E6q
%@PArmX>)eqJKn`("9EdMIks,`r4".a*c"cRf,;8J8bCON$JA/$A)--uR[5-9L'sN-p.,gRm-Pb,o"pu'?Y>EAG2#!`2Q;eb61^Zn
%pZUpZbK:@_@m1BD0Op-omL?d:Q?bV<:AsEiWGN-8"@;*kLY=^J[sO3SA3J*)WT#=&?st)$1JC'eZ4KR/mc5jaNY>fT3u%'B+Z>ue
%AED/*g.n#aab",F`tkdL]/W-&/rZF<T!$`T<C$Ti$8`_LXEQO3^uHC=hnVN"maqPO"O\lG2HB!:_.3kVkXF75Zi\MB#(5:=OVB4S
%-:6iq/6^g\':$PDm?ZAKe@56'&t;&W3+Csh8b>qD5;5$3P1uLI_UQ1/NRuX3fXK]\@&(W)*0kkRM6K,X,+Qo,$BlGV+tN/>_lF4p
%+H)m*D;,ZOW#rHhE%p].;@>/a/^\T[lmabF"u.EC^^d6J#0n)hUI7fRc!cQEGQT12=lrm#N+Kd)8W3rd2*bHPDk@'K;]*@;<WFtn
%64j5R+rs8"FDj.VFL$.!=_(H"i=^/VbOd+'Um!>OJEc$n!IsIE"F8/K@MZ8ASKp`YYF8'SMM`m?Zf:H_+f-dIKToMo1PUhJE7sP\
%%<<%CMcR_Q1W]gV@C.GK'+a1QRYJ>6j,iH(SpEBWaM]=!"#@+\0kllDUTM&e<9Y(#9VI5YDQu@_!UscFA_b8:OU/Y>1@0!U?_cD?
%![9Za7s96^+uEFJhkSI\^X[trUoJJFZqs&i&U"FW[G"Q5kh[:/G=>l"R8tJ95!9#,+*aS>B08U_UduW.<H]Tm0p1=S*'H[[\tEl,
%.87mHQW;W;H!"<3U,jb0&I6FMed7d3FDM1Ym;<Mno$j%0EYe<X8fonbT7g1c^(H.522ObXf-5"r+ed'>&+:!okMX%nRcmLq1otH#
%`Zj@mOr*i=)H$D,2h-*Jn'j`680bC6A5_aNY"/.eE_8!7e7R6H/O&XfkcdrFi)"Jmc-Wj*@lZHZZ:jj64BWq(i/a&=d_]EYQIC1J
%+\a>*OaO_cQ4IOt#*lJ:?%-A^911Y=a6l!EoXa-W/Bm:aM#5kc=HLJL/O\6P;`P2R[lR9a#Vo'pdGC5ki+\p\+:hqjpQ&hbReTQ#
%JkQ:YM:>L[&NaaUc_MPVP.HO$()G0EHW3C34@^XnTX-&454OOlhEAI3A.RKMa89rk'gq1=])"g%K'%?3"$Y!XCI=Z?o*8,'SN)JA
%"<OJhD5*DE<o!m1L3(?EU*-l_^fbrR/r$=N:B-B]S]\Ts0CX!PS>VUkP"tp8R)/uDP+uP+!G:QfNALBi3n.??!T%D.m,B4q_jqEg
%7^#7p"_[.Yh37\<eu:%NNV]%:b6U"?-R<E,.E4C3H:j&4XHY6i/7j]I?Af0%F"HEgfq)N.`@!'hC6h;@<-etPaTR:[=qA_tZU;f7
%08LiU#9UUc1)b"L2N!f(rTi2u\U$YchGo@Y)0Kg':1%!m-BFWj#L@+pSgjC'3aq_*aciOq+Oks=*0a'9Lsb5d.tG8R)SJV\=":$\
%4l(c8V&TaN0ZA\X7?4E];o@Ig[A2D!pNfma:m7$gO)q4'&QJXFJGVTT-,4)-eO&.ec,c4$$d7g=1TT!(WC_Uk(g@HS="Pb0%!XE*
%3(SAj>`sE#YWj7&e.,;@HDmt+/Q_%QX^Pq1K"]@u+)V^U%7)r\mAfm_@d%HaOqc&]3le12"$fV^`>WBm_WjFE'JeWgg"nuG:_W,i
%$mkdNTiR3&q2uFgeN>O]A5HusqBlWf;@5]b>T0glU:PO8D&n##!i.m/<0m^`MOT?q4cVDbN_'V^\-S7.+]\_=cCQR7$FqZj/+U.,
%=/P+:I1@_8.&75]bE-s#>)P.3NZ:O23?G<Ehp(g8.S@@I_AK[MR;S;I3'i8S'<\sZaBkc3A!BB:_nTpd-;orGLti<IaYQD!d4/`I
%ef3S#b%Le,9,m%n:Y)EVNJ/_/R,j"5O)5UO:Pr6#7]88O)&NXD_I]4gX*VFo2A/VTO?]Q/$$OcM7EfZn+\D0(h[dCXPoqH#fd&m`
%l)LQ.=U,$U-rJ-L9.4j',M%tC3]($6=C2#*&_u#5)9l)t6Zu(0/)VX0g./roV3lI!nY%I-)bSXhf5s?l$oqRj.\B>^@[CaL>T6UT
%6Cs#4W2;"U#&)coX;j+Ke+2KYi;1#o'JG+VAN%oMU/.OV,\q[gKWrglcm:s==uMh@#:91QEDr,%:_9d%7QB6cOIRTT;.47BN#I6_
%_7:[dK(bB@PF!A['o$?XB-(=cs$MeZD68C?XskF2'3?9?QG5nhf?Y!>p([<M!">s$G/W:e_dL>c`fk4>C,&])Rt;W7c5'Df\=aJ>
%`4R3SNoQj3G<4*7SS:A"%0KEq)NX/N&QK_d@V:nTT+ad'cgRm*-5+?+Ep;AEddKk$b+9a.nu5'>9TW:%;2]0qe#H@#dG$^2qi^AY
%`b2hZ%']nt2u0T\p+R93E8](b:1csS;mFVHPo_2N3KJq!)6Xp#"=Xo;IQH)>3Xj+Ep#9@S;u+^jc#n^^PUhpX%K2u*er6%5K)["$
%39Z(WD('\p9mQfp<_t/?67Jd;Z8EU+QrB'Cm\QA]KFt"_O4XYJUmr7trCFZ`">X)2NUq<[.U^?jlr^%sDf#,XkCb6h*6Z$4OVRtY
%9!;8!:!H.*O>;b6OH]o=d'X2A<VJUFM8DXon:mBq^]]$b@2+Ek;Y8R3N2W$-]*!>p(bMBs(fGQS6\g%iBradAl]_HXmH\ruAuk[#
%ZRU69eotb)p&M=(-Q3Tn)?#@(Zf-3],]@PbYuoXq9)6b%FhcuTnCLeF(f7&3bibAjZE7Pf;;D?VNFW<XZslI#6\$B;%h/lr,Gh3<
%T:d1h?ilgCISIq@V"ik^*_.(@+GHNU&,G%6OC,tIit0akV`tU,53]]#^pWB#2dKe[bifpc'2qE9J^3hg,rQ-O?bUA4iJ7-"A/0Gg
%_I#;IHnSLVT5][nF80p5Z$T76Jt";iA\WIn[p&CpjJf)@G^=fs"(KdD,4T$INQK)2UKdsH!+agu7E`P>$OC16BZh%;O2Wo<\0)$M
%>0K<IEjCk;M'jL6.E?m9ML<6aPf4GSkR``-)BFXQTcS\B'lbMV.)iu!V^',0WRGHoYp_M&)-\L;5rG)3=.m9G8a_5j33!Ee?3H[N
%h*cSDKZqV(Io4J9A&c=h09nL^P4)@IdE!0Afd[dWmOiO885pu[=9?W3l`/B"JB1U1A/4?UNW;3384,mC@-08ej@E[7m.t8Dri=DS
%`7e/%8$`21]>;_CZd>VQAA#j12_B7u3j2B%P,sWDGB6hgZL%#MZou9Ke=7r_aAkC1o\_6a@1G:\S*VHYVTUp,GL<)erP$I4$Sb+f
%.M,oQkM(/N$<U_8.4:A6R*J$UiG`^u!oY'QNd<a8Tkl/716j+#pJaj=H'>u%F"B_@>Nr#4S\st^Zmd)8']nl9W;O#s5,_iXh&orO
%h]>\nF1ITh9Pe7^0A)4SW*_%S"IQj-,8B$2oATI?.W4WWhZ)l`GG'@DpnR;8hh-6XdmW:aV'=`C7WHr..&2GI'i;]p'8Gh7n&P(.
%,kT"HjDY(5(75Di%Z7<c^JW4R;U8)jC.RoXk0Xc7V^(D$foOH,<^As_=srVS@EZ3a\4]>f7`@Jp``O+7M0VkE<`?-XbcKd'-,L9m
%5<)Z'3.iCZ24$V%>boX(GH86BK]%D:jkO&Xl0L9l8r7F\#OJ`Q,.!E+!QE(cZ^nT[S+akp78PAr7@j<jr*>LTE_$Pq$`-#"9f^2F
%e:IW$'n8[J]M.TI=Y)l4AV)-\W<+,.f.?Q]3S:-:6P3=EKK<9:?ZS5Bo;_Xt[h:PS3q3lWq:'JMnt4$4`7M<2$GKl>JOql(n.0Gi
%6\WRZIGAs`Wq"?aE&(dgY*$3'p7_>3P)\uHfN!,5B`CS=Q%_J/V9L2LU*rf79!%!:<<N@TX%>T7iE%+7[7)g4,3j-NX]@A+5`,tQ
%]-!c4HKZV)M/V-;;a8cbWF@F*!!pe0m6*#On$)m5.DC8@EI=G/,jR7m0RK$W$T/71!\JBt&f]ZkigfCkCs<=UK7bosj?akDF^)Nk
%S%FabnTTZ<*6f1aP^-W?/LA-uk9f!Rpla^"Y>F9nf7=40Zg62u$;.g#C21l:OcZq%]CSsil=Vg5[:Q;tVD9W_+Q:r9S/mESE.jc+
%DP*U;assu3*E>k&J;qu2C]MS%dpkA*1e1AG_QWM!3kW<XYD0r'SI2K!+@[iQ8r$"tN_5JBg)]C3L$o<./?&s0W=i)ml4CX!V5)u*
%2@]g6UHIF.5,?rr[t]gjoch4@"Hn@$VQ;-oNf2cB=`3P4n63h":"b7b-b?P;K'OPpi`\6OP#UluqM_;L/='&OgW>uen7BIdlX3so
%Zt`eiI9i?u6d^Y?HP5>X0Fmg8R>egBm4Wb#*_=jF-/"^\29?"4cA[<?h"RW3,U8cr]tk:9\cdc:D$mTS:bAD0]!+%L8MZLOY*p%1
%N"J+9AD,MTm8RAt!KD!",SG,;1%3Pqc9;_fW<+h@J=<Ls2%G!)Z/M50X>j^DJ(o87D4L:cWu'NBD"[M!HFD==l^`VOh\bX,Yg]qJ
%T)"X)2naDk]tKch`_(14V"_\rcTZ[Nlf"UO)nl7D[*c4<T#Y.iH@$aTN=D[h+P3eJ(J&m<)EhUAaEIm1^&R-4rGglrB]mDaYV5$,
%&41N@?BB:)jbg,+!i`on#mM>]Rc),6T!Ar.E()_=TYeV7Dj465o5dtDVSl&%0][ihb;stm`tUh:ka,RP4),qRSG%q*%m/t-`V5>e
%O@!Z=NQ1R@]t\pUq%n:S*I]`)ZYH.s+>PB.,6=6\)1%R3T_0]?/4`\\Z>,o7NQTpSZ@BV-Rb3ia(auLM"gU.ceXhqH0nMS:bsH1C
%a).GBa4H,^A0UB)MmeFM>A'U41hQmH21u)0bs;;k"*03aYrk4tC,H]qNKU^b[l<<hTnHL6n=Y^U:Ka.7U]s5)hYO%HeF8`5HC=In
%!#]<g`PI:-h."C=\=!`_8PKQbZ.qr_N>VgK,M]Ydm0n&lqH+jKi1ph0gR&]uCb1[Bs-CL;FVbDBO4fN%&CC4[8]_Cs=$j7q+)5hJ
%\e#4L^Tt^qD=2<!iBLdF4I=7ufP!)9%:Ie32umGP]'F/2!T%/t'*?[\_N.S:M3&R1ViZc<;XsfNB#KtG?@*]+DG;hmF!oa;`>I'F
%A2pNDfr7RD#h3='Zudk,LdZSc1>RUJ3PaJcKkK$IPPj^ac4\VGhE5#Sa7>I92XOm0feiuZi)bDV*/<=uJ=sYO%QmA!EMks01`(!C
%$l.tS1\b]Qr9![VK3aV5e9JV*i+Y+QJ?e6)A=6(PbF9eG2fss\hO3<M%PJXHCIm(_4^UEVTM@-)WU6Ga\57lW>V^\#fXn:sU`1XO
%()^nF;qp5P*YRRFk4.q/Ed+F,IKH?+<WjaSi<`9BR[tM'AJdk%9i8+"au%bPs!"r#6#jo37)It&4Y`h16P9^K?_^W?0Z,>tX^m5J
%la`lk$QUe`:'rKATq2][7?B0+][T6`*\C-h*MI)F;9hGVC+]0!L%ZAOOM"EdbP;*\ie0b@;MWYB-gti'qA;))e%GPrj40%Oe<B,,
%<A)Ud*g.@B9TMK7S.\3_3hmKDFJ6)#L)D"qo3,euWQ7]E,'5C:Q_CicJs!mcI;L&^KiF7bU4cjX?m[\tjCI/%0P;"lQEh2W72#Ll
%;`WY6,RR_VJ$Fb9R`%$5K&(VX"9P3I8?/hZQG[gY/_H;$J/Df+S])M1NE,]EU;tirh8/a@6WOuOo8EI-s#.Cp&iJ+Bd/9W%cfkp%
%TZdSt4_d6TNi3S*P+5'W'tK\M8P`ZGP!2U*1?)`,_a5M@;BYfgX?\[^g+^P3()ab4j]:2Y%S>H%37)<FRq9Vgko=>GZ8FU/bWd,7
%3N\u`)EZ<ul5rm4T.L.eN^uYAW`.W)%^%6cA<&`oEmU?EMX$)4>d4r24&o?K:(MqG?m<o/Ej9(M%6>3VoS+thPFbbHPEKuKTm,tu
%hM,*oS[?8(ZQlQIl0&W+-YUDJ;UAV_#!UkT#l>^n0&A@t%=NP:0h`ld%MEC>Ak@WQ0*R(VYMHPW&bS7E*j&ECU$)QP'P_@e(_<tk
%!)4!q+b?6iV7MNH45qi^+Igcc0g`OO\W?I*19d%IqD-qq1=K[=oaJ%%$IZb6pRp0"8@Gq`(GSM+HIR\E<t@>-SJ+!bl'5;,i:Q$n
%f681c]?[*?LU<Xh)3XVX8I"6oW4@e;[k&;k>bX`?g3c!!,8Uor:b(,&S4tbk<&euJW':rc+LYj)#E7kHO$8'`>ni^"CEGO[<%(((
%$g.`B``,BA6U@UNkr712Lo$BDJA(i1VtBV3"*:>dEkok5SfC=jeSE0*aBUj7?o=qd%[gH>(iP28GR.J),g=4[*Af0:M<]:eg`uap
%Xq1$V9:Z*6PuTW<g:pS#pP;\B.*!,_JCt=+HSfP4+M"J`3]`;:(nf6Jr36?u(u_dc+Hg\r32t-JJpsL?e'U*&eWN$S6qHc_B$Io:
%mKC70lE@c0Q.;_tm=NBdU&H*-]j(3N$t4`#JQFZrJPl6qk^d`D,Jn`VfMjQf!>'o>eFche[s>PQ2Vn<Hgp]\CM#rF;Eeo?5]gt,1
%MuouG<7mCn0@_$RODc\VGJ/;In4Eh)=k;@UodV5c$"mjIQbr"9=B5AJg!-kHY=kM2!Tt-8XXO(6EY5&!E1N_?&K%Y8dd_uQghRH&
%=f$sP%l6\h4_%83idpIqV^S-*k3GTU.2.JeI$)e&c^`"&_3LMGJ$jBb*=bB?U@C\jd3TKaj#P8M.^sb@5TrZrRqh9T,O/t%W1B'[
%:(%L*UWPD-R23R6).ao8BS:AT2210P?/Nd[2lNI"g>9mfb17R=ICjJp7nI6ZD[t]^p\DEjcdS\0&lFZ%!.rc'-q![0_2sU8[HGhD
%T/8F/]GX<(JtmSu^D\?TBPABRA#ujd9Y-ZYV_86M54u_]>4j<Qe!,2.Z8NWq[S^p?O(!#hS>C*,GcnRYb\d_=?<G'nR&H&??]Tpp
%$8p,M9[\^]+hEemi>D_/l@_J8S**E^@)crSq':SG%8V!4!EFMM#b]%D,_M.#XsbT=f7]eJ)_#-9^oPKbW7)(ioUV*TG)c$rO9R0;
%Z'YY5d,B(;)qO+=/(#W<cmqiXUq*/6!Z>AH/0.7(GDT03;pI%IiA;p^TIPR]2ps7!$I<H61/)`GND*8Y\t!g"cijn(W](UX[p*>(
%qLAOo+92/Opnp@VDh%fATE"mds7!MtoH1jI(WOnT5QC%6rTX@]qTFBY0E7*JrUZZ]m[sL;O8neNq;]6hgV<cD5Q:MWJ,G@Wr6rF\
%j8],Irr15no1sl4&-)E+?iMohq-Wr)f0t,dj^3H7g]-jurn2cDQ>&V/@<;eBIn7#&q!OT'0N^_!^@c9'Xi\W8hu!MkX1q-:k+u;R
%&kBRac$k.WUV0<qD3WH)K[JksP&8o1V<hcm&ZLr8r;E;TH<nLnTnZ#Cs55<&L"N^(a(_V\)'dgg]/ht=FWPjJ4#sfp27SV_h".9?
%rI8ZaTWKWhRjQLo,g]9uaFZ\;V$HWF#IIJ5H5?[0f)c:.TQ"9K.A1l2TF_/c?U@"^*MAJp8hV3XO9*KW)5'e,RZTO5"Xlchnk0*6
%1k="I"DF\6oI^1:XoK.;5j`1bTQg@,OT29jq4CL`.1=U@oq.6=cUReE0E&4Srn.SWludeEp*W(8Il=;kHdSJ4r5fJoT8hpX#K<<p
%i/dP[qGZiq0DAtaT;U>f7dJ)m5Q9?&eB^VKa$N#`.J0suq0A>&Z-#jjWr,u[`sD+"aH&0,A7)c5IPr*/H\nA=KqER?T=qtb]=cHZ
%h'^-h68rG3qn-_ACnuK\lk:$mKRGbi4r[Xs]rKDjW)%+'UkbmEB_orF217BG4rZq_]qE]`T$KmOB<UI(&bF[hq<Xr*6HQ.>P^M>A
%I.fTb+leb.1-QWlT+LOLf<[km6Go]`1jn.+I.dn2+lLfk!^<=8di\ELHhj70mjV'*SrJ!@?G"8+4m=EO;sejU/,*/T-TJD)[qA1s
%pJUC(e*Pa<p1skY2L7NPlS1Tt-.fJ#l`jR<G_l#pX/?.[IYm`6[!FW.4aX#sGG1Uf:=!7DB;<n]&a9U]T'60.7aFPuB;<h[([-.n
%kLmrJm+$C<`HaAq4<_u0h!(-efdQI)$hN_-Gq@.fSuOml;''ND"T.-.jKTt+IRs%r'R@-=4P&P\%m?M.24goccash9RgtKZGbW<l
%<-[7WGc\\:?4&f!rLJ0*STjHA/+7_NhT@qK\i]A\44`2,1]3rW,KZMQPh`P'c?q,0lihU7\!*G14)].$HaTE(fZls%B.p[!;;0\/
%m;-og6=qT.A9L:NkBs5plpZ*S20Rh&G4l8)+gCRbf@e:3=C!:R;f6`KNO[8'>A#Igo<,1$'@tk$lFa1_I+QlQU/$fcjm^Cc#4;OO
%koli^4#r,r.t0c27mWa;9Gpi/W)B3Yf%sBYk[OR&aY=LmW>O-LV_67q($Aj9k?S\?H8m&h&UHETC,kZc3$4B(,T?WC_6F>BHDocg
%7;t.'3#`/D/)\o7Ma@GW,CoBgJ$YKVZ22^iWo%X2Dle@CJ(D?=oM)roD`5`sHf:HRm`e5p`i:sMOM+V3/:(6eU,P0YRuQLR]AUr'
%gs&4QL=UuDhB+.-T0NZJ6$3oCR?kP-I<X1fmc)1(:8>Ac@p`LW[%pi.WgbM8OE1%^Zc7k[_*qOb2=GiKDe_.VXVsj_e>H9*Q"oG[
%WQ%7^_54o3C,SC9)kEG29T<%eSg$&CW9I*;R]T!&7\OE=:p\]MYrka0b0t1VBt!"XDpgHXVTB?W)U$S$230:]@o8]g&>cWW:&@MF
%js<QNSWD'8.UK#bJtb*9W)CD>X6aU*+"PA_n30"!EjpB@/-^,6-:Cmk>jb\+R\eH<eS'50BR/3Bfr;;[S#&9T=ffhFT?8\tAm#Q7
%:hG")AKe!57C-17//q`XG>XYb8X?J$bF9Kp],8^lMWMG]bI\2+6\OQO9s/OR^N^(iM(hD9%:Ir8KPq(e%[.51[J1cJ>8:&r+2ZMh
%/lEqna!ohtnWX:3M1`H6K=hSECh5m`$8NZs+I3.53ZmW5(/#XcgTVgA],\n90p&LOaL`">AO+7&#%T(_ng4D./c`2Bs*,@[GaJF)
%8bdp<,YW_"^Uso:"ZbYZNugJh"=<Q,K_:&MNo),E]`P"P)k0RFjH-I"0Kg(fH&/"N`4IjZKd#/;(h,!'@8VjQ:kc,#7"8r<C_\,M
%ocW,A+J)aJQsU`V5orGt11RW-DQ>7_(3a/Hoi%'F_9[r/9R]53W&l/u\7@snJ5O;P$aB`;5[I=j9b9:EGr@8B9TX5mem&lo_2(6T
%"CG"9nkYat9-DI_Q&*PIGfl<[-H4e7h/uWG7b.EBI8i.&bG0uq(2>kEoh`DI:u+?aZql0dT(]*JnrM8!FXmrAOF&HpBjYM3D\MKZ
%N12q@_Ppn4;]IYPdYbK;ZO1cX(c>M]NS-/a_5;M@d[3UIF(*:gH0<SfZ"V@TaZji[bb.N<#*&F7jh[QDHfk=%fe`*PR<Rf;N]6RT
%RX+)?Qn]9LV8\fV?`(O311n_*#@6I\QC/qj..!l!ME(rh$<-=a%'Pk<C(A3P!oMrr@u\hqPCa:,e2=-pM@Je6m[;qE'=1G/2t"mN
%q9CuTj(,e>-g$onV(]E:aX68g2DNgZ4h)hCVTFR*@[]meM.X&)R;>D@k*YcGa(34E0u)d<0DS?qGu.-bS5H\.:*=3:$j1*,_9=e]
%rps;/NmfG5XPaH.\B'WY$`<2>GU>2,iAm\=0gr)S6OIa8Le/c]-A@g"dU&.L'1*,>>(htr3f(m#jZs+H^]f"]JsZkmSkP4t&`fJf
%@N%dddQmLW&<T61AR6pL%1-Rk!SL:7bQ-m'#0<)1o$78kFSEcS&H*gn9S<:Pm`17^nX]IFUjZVgn#kAe<)>gioJ*DW'%\C;0g'5^
%AP6=Q*H6h&"tBuB%.%a:TUNbYm3[1IlJ_$eU3_27H>I79@X41<m[f0H\`EH.H'mW34uaU\Gf76$MME&jjh^H=&3T[aNd#fi41euq
%mauM@9^V%>C<)XnYp":,GTC!lLKPYZ`Th[qFmM+/U3+UJkqJg+]a,W?3l`2-j$Df%RE2Y,EL=[!?6kR"'TO2bj.3sT:>[aP_dJ.e
%^%"kS0R%"j\/SZ;`Z&tDL`>_Mg^)b+?W57_N=B`7_qGCE`])JgL9tC77XIrip5Ft?@:R4,f[;Y6fc'<iN@e5lSZ38qNW*=#m"cQu
%4H2:g`Wqe6?/bE"BpbW'`q[j_N?(7$oSiB-cZj)8CrmR`g^I+;nr&sA@qN@e1X+%`2_?7V)*L5/An;)o,JQbe_9#5$:<&$O&WD\?
%_8lmK`q^`fD#"ne3lX6#@nXgdk@2)&0m66LG9TNG0\VG?Z)(lF=;W5j4?47U@!Gi2'T@5?`fkrCNIS40?^Q7=*pa8u0?SopZ/]-n
%ojYS4([oQU'/.!h(@NG\(ZRrr#hDFkYqEJ\Mg*Ic469qp\9KB+Qu?t-^mf9TI#Ie6hr:2En]nQKZA%/ti`_^aTcQXA/O[#1!eUX/
%,.JDnb6HQBW#"bh[J5SmnMAR%ca29N/BkEXDqm1-/^#>/(@=PrGir1F.2M@\Mg'bAn10f.O80MVY=LUc,1mY%Aln??'u@$905e`j
%[A'h*pX]YV,)@!$7B?c$`H^o&[^:p9<^i*"lAJX3cD_(A`VH6-]JD%GKSo5GM?f^3-T8r09_$E)Gc+FBPJZ;)@T'iP.Gf=a3uZ(t
%ak^F?h]^m.pmsG(3rn0u-bsra]uuE0IYW:=dG=otSe&("44\`hp"gh)2aHiIGrlhWES^`fI\=>4+R_J5q`D_X&DlZ&nD48[2u)eM
%]R,S)%WHW?J@dbmmObgC*SLAqm,$a5hdG:/W:']ST^I=$GQ7G^J,AEDqfdP&^(F30s"`eV\0'8'2ef1Bl=QUuV"Te)5)X"$d<.9S
%"FVmpPXAs6FH=P@g0D7U<2B?8\EXjfC(Od9;48CjY#DXU4[/W83kC,F"&(K=V-^5X2sYE3&7qT:mAj7mPC];+D[&n<h1DLBA_3ts
%`LISahUL8_A.!2-@Wr8,ibEJ9L%&,c`u10*:@*Kuq3c8_O(J_paCgPJ@0H.W5!3B(E;7JWGYZ9!>`^6]'4PO:?3/7i4T_3:76#Vu
%nD$Z68h0oeaHL_VPM0cMJfL9l&q0#n$1)X7#1>$P,>t#iOEDu[G#T6<*Ken=+Lk$Oq\gEO,uP$KJ\r>pM?%S>h-!%Q*!mFFRjpWX
%L8VhI1.a6u!"$YV5;,c.\"GQUel,[)MYD#OUKB%97[L[Jo2\m0lu=\D#(88nQ*-IhTYM"AdQY)&RKf*89+#O%aP/!XWI>1$'E]p%
%\Jlhh?USi&M#Z22LgNl8H?jM+A]=a,lK-$JCr\i,jgO2?[i\+d)02ON,=d&_EhqHR,Mf4:Rd](dO1-i6H9-,CYia;R[5WkEfeVa;
%l]\QB.fRV^,<bBR;YY=?GW%>@8E%qSTNr<ReBsRP7s^VGR"T>J,35,SbB;;=[CB#+gMlDe43"J5ICGGJD`\W"aH\no8HMI1%3S!)
%l,S1RSlDNtq>O"!a_E<JeLF/HQ"CXJ)i^[m%=&)B)OUh;<7&OB<`d"CfKla%)k$eg4!g"PA&=f#T>B4(#+ok(U2;]0jT:K'/a7En
%&_BaKo]N=F`EEhcSTg6&ifs?S,oEe0`mmYjd!]5Tb;=mDauKdu.>4dp\<(#CII3Un4<\$b(D#:m1)h9r#W1'BK>%#Pgri1H=i9M)
%?usK_IZ0X7;P<m2?U'HuN`J=9F*?8WGTLguG%qgiN:LKY@Z+X7I68WO&PXg/Nd8Um>fg7D1!#aD<&+7:5(8F_C:=c!<ni==0A,#4
%,i+1ul/`bFDTe.6ndJ)u)A5d*gGL84[NR)I6WtHC7]5%]+mJ52P$Z]_.D/"naXm#p/aqdBP/9CNQgjJT8M:1.F?>;SYRp=/&LJ\N
%>XWt,h`ubbne"I&O[sdYM54]/P$VH=l"MIg0>8[U*Xbl0=g\%lrX]a9K:tps`o+,e(C9!)l4JfS7b"H,%`g17U`\FaN"RJiX-\N6
%$4iQgNS5)_8'YPJRhRb9>4Tj,Aihm$XLZUEdd;L]=`__+A*mp\Kh@@!YduiIVihegq(osOn(S<Di+%(KW(M_??_(,cA5$)f1BFDP
%&,7pN9B"qJ1LOA]V;'0H^!-CP\G=MSh;$D+Zc`J'KaV(ARp@pc.=BL0T/K%-jr$p-l",R7m"KW$Tr*L^Z\&V=.HP30!7oO@&nt>o
%)WT5bo5PYPp5Au2;>XMIlpup%"dJ4[B,['RhVM2dm`XoAh.A%La'&`jVQ`-rSiA_S6lV_r$bRHTdaRb4h4?"Y2EaVbf9:=2Sttj=
%&T#n8-h.FZkE@`/6,;l9P*Yo8HF]ZDVu925q4FJ;!%#;u:f:Dg86^LfTVO8-$(U/FJs*tTL&2;uP]ZeqUmDZc$7D'GVVG3#.D/Ka
%UNEP_ZMT:o8p]0aUo,;,H5WHQE($CcITrPBgCkl,;9lR$N9DPo]jJFNAp4D,Oj9sii"JXEZui'S?F0'Se%B95`MmZN*gTQpF/eQN
%qV@$\`hCDG*-fI@a49b=8M:aKFM%%<Yi3u:YRaP.g.oq\\(CpT&+Z$^jKPKhR18kagNHkT_f6V(UAln4$%+!n`tad?.@@,?:DW?e
%HB00r85.NiEgk!sS5kt.XrB0R"?RM#3Z'T$Ph:r.n!)4T-_[=\LgX=42K%Ss,7YjeO4=*nV;(8+PZG;#[Bce_^9QWcoDJY6N,P>1
%:eHT[.k%P_DPgbA`BMYXs)2uAdORtRA`\21r?'=\,T,=V\%+ZW5n)sMK3B`-"'T/g;G!lR,-+mM%>]LpIqrnBO)pB$!5tO#FiuQ"
%KKnh.TAS?2eEkY[8tr3@NfffG*tp5-1Oa$/68ML0BI\d^EDTUen`l\S+bQ]Gdt'K9.[f'E\U3Z]6FWCT)@7__g=ms?1i=qF>aB?.
%m#<>t:5,<)G9+^K;\H'.1<a^A:e@5<;CY8;Otm9qp#?W7M,.k4O'G7=H6nV[8YfgP#,c!'I*sQk6qcN:/U:l",'?OBimB?7=5f<4
%\Kl(WP"3,0*q>C`]d,e`QTY*jnHbMXK#s,gcOqSU0QG4aX,>"D@hQ828N]<dE@[Hq,@qLk=sicqRDc4>&s&PS9KeS15ng]l=%/=_
%,u*CM1l4`P,]6VGG[sP.<S&K;@?\3d:#_9nM-J^[*c[Bg<B#c!2fT<TohFE]3/LTo&PdgJSAZe7P=O[Z*gMqR3SF!<Zd),LSW%i%
%V:'Z>SK,2j=mG(q3f+P4iNHGP`,hofReD)'kL=Ku"Ac+DP+Gf2@65O\PP?DMo&u[`,CGZs-e!pXoZ<kV&td*<;Z4O&$WI$MohSap
%Z5,]N'N!eQ"NmKj&h/F,$^M-W#?(igd6WUb67Agd;KCeK0%%8<:uW'SH.5Y7j\Ttph0LL>#bjG=.$9Z@LKBq4*M5_s*`\H7APqI7
%7>V^JOg)`f7Yt2`P^(,Di`8R+7iisoI?_5F;W<m,as3#]WKEpSVqj#hm\,Zt<(YKMH^./oSWl:8WJ+4kV3H5#;BDs)p`u0rW27EW
%Qh'@:6jfejcc;>(d&U^"UR;aUBZdHG'";[LlDE4]HP'"uPZ&d&;cl5mG"SQT$8:sN:Pk<3RE2/&T+[388h-bZ3Ok1QM+9oZ5)H56
%MMc1cVMrZmUCo#OEd4!G9C,YNjj?t_7ni#A;irB"\g",QUqQ;mVilW]Rc_)Ras3kuO/C&EWY/?4a_os*=!\nrPuLf3TVYY1:/,Sj
%pa!$5W2mi]YO^nX`$;MW.'1?7M3ZRmd;Ecc'cj>RAgM>cPt,L64t3Tr;Cdl5/'=s#aaATf<c5I5pnYB^Jh&YHSr,%a>hO1]>B;)Z
%=6q9HWifHI`@Krq?(&P[Oif3PfirbK?F<jf#2MGcDYY$HMS"d+D?Uf4r(;Sf?:@sa5>R46emY8q/X9E^V-##B1<!AT<K0F`r8K<o
%(1\#2hi]O1CU.(?HhRYge5\>A@@"Eg=_(-nF;D>FMf]9N4jWfQ^Mk^16qXgo93S0gjp<T,(,L4lVt6Y4,,9?Xk:j;IN3GJchO8I:
%HAm]^HW=mE??5h'4eaO-g>]LmfbWs6kdJuGlK=Rlj@?^+;Rn*M>O!2BhJ9!5Mmj3HpZBJ+rK_[2>TO'88-tX=S"hiG,"5c!ju?@G
%ifS5+FBmfoaQ6HCM'&NuVNsk;@P4YBU(?.%/ue$>kN5mQSRf($9B8-rVMcdr<F+UMFcfZ!2$NUn?^+hA=PF@iZmkE`9ogal'">Tu
%ANWbBQ["X;;%i%KiHW^;UG>K*9o%sB6`Z0Q)i=KmCE65a+u87PQ"%2DVc?/VkB*ifTNI<4:^NVG/%Bgs,@g60:rgYbZu6'aaYedQ
%J2sL1`@!sA.2*Ao'4]">D*)CPn?!EMgg#hXl&at8GUf0t@l.<V:/*`\=mMHL0hcr;`d"[[h3dNQVK,@43bH*Y><O<Nq&!Pj9A$nH
%$8TJ3>=0`86mf6U[u=#93\o,G:4-A?alIcVQqY/maiJ,&SkRpk1>8]OF+I7g7XT-Tb/C?^N:mqnbJ^M6A$M8;#'>aG8C?)\1@[qC
%L0$cr48530Xe"15]h]6\_]BJOYM+OM_L&k$&Pr:GpgP@+Wlti?WI$jT[ptNH=*e_QDfL\u(&ZMl*RXuMgI-*&b</aRW#\mVMrpu9
%MaG[3CXg9S;BlsNASU5UWR8p,LL$&ZXVqR'fS`D5)SL^>NUV)r2!;$^3CR^-<GQVJhZ$226jbqk?1ik#%s3\pIK]nQ[d;.^M06@C
%k;?Tt-AO0F!kh2-MI'e529W6r8`g%"`[`K8Hb"<(?]Q`FrD5R2,2MHc34qDS([C+6B!^"1"mq11\gI;r[S_Z]7OCluSS)-DDUJD.
%lM@Hj7`r<>GLhb@IY;!.+d;@J:t=rFPt&V_'nOPiPO/@F<B8cO\8"-Jea;M"7KQV341Z$)Oc3:gGZ%Qe0rqt+)mgMT=rhhPhlP@Q
%@&r%A>E+EI]"3enDEe-M\-]%IcLGutDMIBb0o]7ll,8t/%ij%)16!*5ksUrZ$d80sRDrm.l,9"0__Z^kVI?35T&ekKrsR42*c,XT
%gt2iO)\4t&6-$tmG3f<lNJAR%j(%-.a!O'[j`J*@Z4B8[?5Tt,6oJ@"ZAZ3]rN7&rPbrV++LS26^UV7^j&W(<Pc)f4HZLt/eu+O0
%Ja.IoWoKDDN^oj*DNX4/<3"tYVE.VQ\tjm[7cm[P<#mDfXmEsTWfC/cl?LgYj-Ha+8$=sk_<SNFX5d3c3ZcQ28C;1K*iEaq4L3Lu
%DKU=>Y'uV9j,pKn[&YFjWtfWElIGDr^7(_:jW+(jX6TqM90@pL4g]th;Y"7'F+i5GqIp1N8lG#dH$76+)Pr$U]k<a`8%7E%UuHZ+
%cn0MaWHhg?4j!,l8+h6e[iANLa&9#4K%9f!`[i.SG#*JoFXgp(;.C\kK0?l0+r^S`DR4RWZ)/ZOWLkHT)pL&uR&#l?`2XlrrF=3c
%)@;Afet.u.lEE(l)Y_Yj!L$.0L2-E&>m7%4q?re?#Nh#7g0NiAZ3u`BijqDl+]O)lf]nOVPY_sZBS`FPQsF82*<R6.e%3l`^]C:i
%!'TFQS5*+PRNdAe'i\eIDoQi(id*Rd?$H%L*B<q:Nk-]0Xu@Je3PS7;fq)K)3#gRf3mIrpAj`C\\s\+lI3%eok?Akt$5qPH+D09t
%[]s$cA0"j`RCf7Ni*(?;K^Lr>(n#bSfM6QY'2J+]CgjXQOYt=U1Fi3.YBb>/kcU<T])hH_)8s!%^iXUD:`Jh1qEU0`MT;qIS\;Np
%RhK[U:kJlNEVA3l9*Z>aN0V53b`ESpEk3OlH;HY1V](4'[?AI#,=+uTB,'neITi8b!)Co^XW+Vp3>%/UJ!TD?lITZ/RKtUZ`bLM1
%gdolrs37rILS-[j-";jhT/q<0SS!N,?2-'r<PeIHUD2tZ4WF4T>E!^bpF\[_CgPN<go:G`I5coY]BR&-.:*7!J3uX)4Cgr=n:W*g
%1+4KR(FOIeT"8S"dF14r(#n"\Y*TR#Ob/_L$AZ4AZAn'PG%)\;)-%?T!NNs&P!=B[4r^2C')i,Ed]2@WT<#@G?^S,BR8DMg!l"4:
%M0PC;e*2D!Cug=/T;j;Wm]MX_C.IDsG'0ci/&RUCR;5]I&j!(+hRYi9m-k1>k,;!fU0bT?,X^baNps[QLO]eP,Y3n?-GPR;=)H&2
%7Y^9;]>25R7q'R@<o/Z3g7,)DZD\:fO&dKm.>dWp[OLD%1+>2U9K?;:MN^4\ORA,=o?kIa-c6;DF%(feTdnc(mgSNOc%:oQ4L1f_
%!ki[=SgUR%6,?f/.?1lDX7hRkq$a+?WnV`SGD&t[810X-;i]j.rHcMUU%O>'X*_j0r7YTnKcQ'O"`o55(@E$do^6\`[4&6G%[C]&
%&&jO6C=[AT?W;er)!2JnqlBRXeAFt[RqA`h]K3Mr;=V#QSFA'BR0\fG9,tV78;/ni5:?Wla.+auC(qG#2,>!"Zo`C:gCU>'I<M;S
%Vp,Eq@Sk)&0Lf^TNpJg;hWnj(U+@<oPa[BP[cHeIKBdi/]s)Th?[bM2nT<MLF-[$jCL2-YX7#p2Gjd#kdfL-T4P._fq@gbZfk+Db
%[UH(7b/HmV5C-$LL.:ds[8A"1@_r_AL"[Kp"643lG<t<2(_59^c?VJL\[+&-)mf.*'gFqiYhDXd27_8(5>4;^p"3t\F:CNS6pb[W
%1\Po+TG/Ug7od-IkQTAj>kQHf-Pr6ZmCc*]I`c1s&p:*FBY\gH&hsZ]Z,>"n@jk?RIUSB>FT1PH/++SnES9KDAk,"Ah$RbQK-#EA
%B"W:`9&^;#=!Wh)872&lTXoTI@?.:;m0ap5&_X!Kj@o0A_b_IK0XLheU\&@#*2i9>LEX@VR[6!t[6VC-3->MGWb?"PFAP@nA@C:T
%n3"P3S5<h63W'd%^MTDjCjHR-dHP_#pJ;0dUSG1uqEXHR2N;c?"%:0%;ECt2+0QlcbSB"3iC`/sOO1YPY1Q,4W&^*FVor1<O,HV+
%:^i;RVdl*9#p1c$A!QC5L/lerqpW!uY5:M?je5,O4*TbkJrs3gU"U,4nW$bh'$%'DSosE1E$i!%<_((hLJl^QnG'1EW&[CU,ipSE
%*A%oM7Y70@8N9#Ul.2l)W_Z#Kf]9eK6KXY-.P1'I>Zh<YLk_:rMBu<5\+slBEGDLg$NOU2qUj)2,OIet'"31qo>KA9;Y.;XVXi<H
%3=t"HK%b%O;EY#d*lBLcq;0`&i)RW5+&;\g-Y*O*(=_d:,5h2C,B[&/k%UYqFurf"K^,`OP4/1)*%l)QDXB2NNXq)5,_SfSS^8Q:
%L3R.hQInr@5B`2*BaUeFik"S2&C-E]A5p`:1OPch(QmZd$b7;]hVjSTa$ECQc]-2p\`-`AgSuK_I1@(l;RNG:A(!C":XUjsr&=hk
%lFqDl]3_<T2^pm28+?o1Kd^3NCu65Tka4Gr,5gfHEc+KRG%NYPJsM[;],U_<B<ZpM>?2"B$Z=:$9K2.]h8Pc"j8(0";b6+f?==@[
%N(m:C1=XX?3j-*$lO6^8baK;5U"j.&di(;H.dQcnEN>/mh..\KMX-.gi]p0tMTBTY2nkGY?9I<-TL9FtP?[M&-Vc><brs6t^"TIS
%OJpK^+XsnnWO5c"rjk4#o$'N$P>88jf\Ulr\>5],Mj(ERmEA2Js5EsG:4e7+0k8hZSjc*h6^CkBhYF,D.%,S:mZ#,o\P0Ag#_"r+
%54a_,Ku4cC^+OYp=!gLM.OoBiM^sIl/8"oN'it1c><h]4ET_.KX0hls#'tu7H.jQuF*AWt?&<tMC<X5[rcN-fEX>qRjg*JZcs&u:
%lnqa'f/pVo^\5rM'\;O7d$24d?L+6[3Bl/2'UQLem6j)EA'I)5gNcltrUo,0GGm4g>$C3MfBH*\RAJu"G?V+V8k8?Gc,s*`nJ$mR
%m!_Pq:J#'79=cX1a5ZEa$d:8(4_)@Y>*p^i<3f?5$ISf;0q>BIe$nkuFH>%=IrnmVRb'na%3OC_G(#L)pl_O0W&=G[4f"lm?1m(!
%1ZBu3V7)"hE2*h?IAG]@^CS@-\Za.oG#<uf)Gh"m0+jDlH%dm?@+q0O7<,.E(J_P75<0r*1q=?#<p9+`oYW;h$@P"5Y_P\:)X4D8
%1.jJ2[p77\BPI>D3plrdm:BD2KOI3A)aBpj8PC\XE\L^k/"N.=6AVoo82<JHYrd9&>W[[J(VsFL8^m[ZFHP=hgV_!^Xnh:iAG3AN
%!Qs[<gAdh-=8.-R!rHU/&s\9b"(5C%l,nSb[MZ1O5IXaCnl,Wjs(Gs?S.hTC7Q#6O"2*m$bP\4EpqkKr=R2:NA8Hq5Y(l))?U)eG
%@(g]$>1_Z?ES*4;Rrt/>[,lJi=)D0gfA-k#@?-&*EfDu'4IM5#m!TbpnN+oZpt4QJK*Dr?_r+f3HgNG&W!CBc%54u0W0ustjIfn(
%mk1)0K)Bc.R,5]ZhRMo:?"\9eY01Y>TF(:RhHn%WI9!6EgZqfB_fZ6p^RR#.d15T7L=FIu>T=BO/4AgYrS*E3Y)/ni+jCF$k-=/>
%n/#)AaCH6FWt:aSdtd*o\%JNl7i+\dWWq;U)RGf3,C5o?Z`JBPmWib>DGdXYk6m?ucI7G?lW/2IVs#"AkDtC6`)5oa$nmPQ?Y-'`
%L-jgqkaj+%3Ut?AERUWKPF/X1crEd7j0Ya3I5j&e2BgF),eLu*%:<'u%R$3=@Q/$,ouQou@R*Z<D$JHfInu=B?WPjF29di1M*X%W
%-d8Bhg<d!(GKh_VB=\n('A5+t%Zq:oFK'[tau@-]]L8f,mB3_*pZZd:LRA:85Ma;Or0-3]#@"GJrJ1X`@,<SZ?1ZKT!gpUNUs`13
%%WCh?RelJj-hKfsLTt;QN8'/)Uhk:<I^;H^kOmRjqh?CS\ka\:+kPo.VVJh8=9P\[.t`A;i(&d*PjuZ!Lum,MWjkmZf]mY:mA_.+
%^.Xo]A//U,*O_>LZGcjCWqU>d>R5%GbF[[)fkjo9kR5$eM@GghXJu`c2)\^eZI:@i*G1YkIN:q)7RB=9Hs$8+$PR_&XJs"<6ZHC[
%Ni7;fX70tdrRfT9lr6aMnol`b+9j=bB3t"l^TF6>jsnj%*d6CcrR\FE=IPO]#rT2!Iusi;[lYpjlcqS1B?H0<l]FF=5f"fDN_YF'
%Yn^(s[TMkn255Ad<dYo%DK.p,efJah:r_puV\2_V2,npOCbrS)MhNBR>9hH*kD9/_R[kp^T$'$p$JY26:R"De^JN8PL1k!2So!&V
%9T;GfBMPElV`=--2XfoGU[Tt^hpg-@#qO*b\^a[3G)]($,\GhL</3$X9u?["06pk8Tamu=0^pQ3HbRt`Gt1O@)l`l*!le8/0>?9]
%n=/j=1l5:mX@?6!19a)2,C[:a=j,A1;Rn];lbuTk95^N_M)H4ZI^t^7H?U<oDFf-GRd$gSP@Maegh74u"<^rH>(Om54*QjWgNF[V
%Gi[Jo:hO=$0h*sHKf1;e"IFb@KD&";*d,s"o=UDYafCU>S_mPI>XU/aVSN"mfa-5km#A8U4"fRdj1;oa=0F't;/jbrR_N)"IS6<]
%T&@h`q?kP,8;YqJla$n$s,l.Ep7W79&CLB'GbUB_OIG#`9_t/gL.A*X?rI<hF\[`PkAUb-`2VkAr;/;qO!kHY6t>$_X>k1Nhepl[
%o*,WAE-"dN.dNcV(SYsX7L3oW$,Gl@LF\`;'&[hCa-4a^SpE-I;5S6lo0e,gZr?NiD9M3Vd-";KR@(IgOd,QPBTS5nWi<$=cosB9
%@A)8=_\(l8)*l1Let\MK/+pYrQ^DTH523NANfN>aBiD+)\H)HrTs?/])s8.X3?h64cD#+!0t*#=Xg(cP$s2l47EX=]BJ.`dla\MP
%4_Dh`5J-$@/N#D3#a?5"=B3Ce+PY1K[n&$26CMd'e#LgoaLW++IR^RF&#&+KNf4Q]([\TNFdICp3dO+3q/_)BrG>,7Q'?kAG3!<R
%06Rp![Ssf62Aq6SqDmm\eMpGdn[cog8K5N_q\7Ms8%]<>*KHH#W3d6O0]f!$bL!jg;m,9Z.'b&R70q1=SH%n2PTT.2l>gs^#8/O5
%ohl)t+a;h@8tgEkNLD.S=Ech]9HZKlT.SN7\60gNe\4[VD\c-TdZ5Qb!hak/*sUkGC*YJpbWXiAe$),=%JS'88N"^29jp+n;d_\<
%XI>J=07?ZO$++AeeMNUV-omt)H?0:k._+^S!dg!DAbh8j#;G&HPuH=1&'QKbj_j/k%Vla+J.aa:C':K2@*1dDGL(Ee-0/]rCRQ5%
%h6Xk,QeG50gTk<!8[HgGjJn5'*X0Z42u.IKW@OCkk(#?p5iS%AI)Ad("%<r=opRnJQ;pR($B>f1)PK1=c/</-?2k?kX"jcK9FV`@
%d/.*hQPO;`P>toELM%4@%S@E,<#m+0`'f2Qb+s;MVq<0$]-maRJl_X6or+o.]H`1=p'sG&+n1guRdo37f='L>[9CrrAJ*0@g[0)l
%NSXSq?EJ%C0c[+PB\cs[X)jcaGaUIfK0BE3E!(oT$jdt]p/SH^YN)ER9+iI_J?i^T=08/Z*dS!$q`42^Y.A84*4,%:!*q`&DRcR!
%['mV[*SRjI-c-A&)aki8GB!aifid_WO:n8._X57a!XKVUH%Y8KHkXr\p?jh<4*'KQ`^(d9`3<l$p"6$2Ei/7?BAkAoc"(jKKDK\I
%&Fe2d\&P;JP8)EIH!gj`HMHH@L8\NpX:UO?G-e4Mgk=K^=bc6N_@OhWnKtYs0oscN"q;Gs*9*3Ng39BsP3IP"gfsVK`J*dO.b2a[
%s(Ed#_+-?npAF,?\uDY4_`"-3N7"PMQ-fbMeS*#k3S3oJO@M7jf^6TUeeuJ?ag(_"/0*3$A*a7<F+EH('5,tJV"iL*KHtpjSHQM$
%P#s#]?/0=mQrD*KQeIep#9#$/@K(Qp%RP)K#eDYP'RAIg#jUe%I,>ljF+#&>Sj!>>DVT`:*&W:1?ALaJ_#(`ri[eS@-/jC`+S_CJ
%QAoS+Agn^>Z6^JYW+L5:1aH_;/V7!6;/IR"U7#Y]f`fhi1:u)N.m59#>UU<AHTqe$M)QGGLML<(kUY.1e\^-S"SKs+mR5dn1fpCQ
%BjmbfWjgMufGq2*TjdWh!KgK)AUmSl<^#WdZ)3(4%-`Vk2Vko#YVeSIYp^X]9-8`hIG!ou8XeZlN;@4&cKC!MJ^uUqq7>Aq]ddkA
%(S)\n%Mbl_ig'B=D!iKYDp7GI%cg14#/Lh:)Gm_2k=_#Xkbp^Z1_rcKW.C4\[JmW<@rF!mEkmTV:/*W*n#GqF'8XY@a&s86pQAI?
%7RU$F,.^1[<H.-^J1BYO[F1i.*3iBijihXQ=_(87++c`cSkO::2Q70;o]k?u^O8.*b#@PobMjeZFZka3*AMd.D//pWSd!I>W*Ud7
%'\\.H16jF`5.6)8cSP$Z':Y$K&Ch=\kf?K^3*^f`EIPCu#+*%s\l]7DQ_DdW60j01=1>7Pa<]6\eh]Lc$/t.`80X"HMqIQ9<Hj.Y
%j(7BJF,)%sjk(S0SuGZhaVN+?c%&!P6qWVB;Ek'sRJ+lgM)qXm4DR[:6Z1PB8M9#8f*EYW."8n.9,mH,%sKW<\&KoG7Voc6:/Z^C
%PP81k,GCpGLVr?`@60-.hBP?##2Y.LA:u]V_.)-E/FHc^*-Es,qT^i(+WGMO-&ZeU<V8a?O"d*`@8&Gd8jhqL>EX_;#b'+%>D<N&
%.$Z%$Xngs,-cCjCY)JdE5"c@rW*5/1e(F>UnlLc=0Cs7-N!qNUK6M?q.NdpU[<"B!`3kH@JsCZ7cFIO'iJh=O!a<^6M:5fWYF$dY
%XX?8M<sGMGnt\'_+MbQ>P+gjWR/sM$T&-#AFkmt.3t9cVGZ#ekHQ1e3Ss]F(nL4K[1QFn,#=isVGAXm/:u(<3K#)Stn0Jl8E<CoW
%O/u<WMR7aZj5Un*.KIWMIFW82c&u+1P9d\:+;gYP1+9c7?!YsSOC!-oZks&9,\^9D89m@r#Dgs'9%HSXhPp29!e]:`G139YXfIDA
%B6Dp!lOrTtAjg,1gM,pc9l7<W-*Q^f945.W1?MP!gSrJr>qeLpRBb"ZUI[@UK\l8E(QCd#mCD=dg/.\SYUDV`'dZ&ATmt9C,<&Ik
%B]+b[=1\er63.W$ke,3H)3[!KgrR"9Y-,Nc.Zr*%+'87\=`,f9j0L.3O]mAmXFrcCkYT,J6![0SZKF_R*$5g#]?_A7qECr7#a_-;
%@aKdU2AJWECq@I_,sn8`FE'rX<N*iCO'B)b=u%Du]Kk8BXV2d<PTmJ.b9,#,a^F5X384_GL/JRb\$p<(km5K5nYogm"#mt:[mRm?
%FdVgW!?70_'-ku^Ck)G-AGWuQ^T\`o%ct+5M\[3h^/"\<ot=mRnVb7u'M[mLf9o%ql`B(i[aI/L>jtG#MeYV(P1;]iC/f:F.^_mH
%gJl7YCfRku/_.]D[VVrF;;TGA;qUHM]&F'ETZ_7ej.dkoS"qu%<BY6UFX]n[+/jl7RA.YV+!(W\?_efp'>D_s`Y2N377+tFZ@a!C
%p:"fs72&7%+k33j2VZJ^d%d;H63#SrMq%t)q+`fRM!D"sERV"Kp;>u$]3G7FJRb88Pb<[).tci@VJND%V1'8PN#N#R*\Lg<Si@eG
%bAag3C=9LP34_$n)MSqJ:]0!Wqh,h]?9EkX_DcaDSlt`F[r;$MX5bIr7<E.BhSmRCDf+nR_j7mZ9mB%;n6>T61g@ua@(qV&;ZDWR
%.@NJ+'@5t&=I$Z2Y(PtS>BO[]IRb6^7V0P!dWWN<*c=TcjfUKqHYUgRDo4(M#jaFkHmtOD7jZ\Yp@&gO=kproZUh\V5>6;`/%Bgf
%B@cehIl/=8nms9nR(k8)V0J'R"]]:QF1B6RS97jPS(tt\)Pu<S+N;"^3HSZoEDRtV@O!Fm`OG+^S/_fW'D'p9f=rEW!.]7V5'/+i
%@MIui.(%]tq8nd(/4K4dkFP3drUm0'N89(?1nhC!Ak&A^kIkma+^jje.o-kZD9.i7(I;'CM0$^S)d?@kmB/"[:77+#aD0X^=#rmI
%bXo&KV\,rOG^To4=mq6uWP6`P)%^M0RkblMC88=X?U6&92=d4c;&AV^HtR6OD`@`^XHo%JiOQgB\.jL.FW*ci,`iDSXr*1-X7Vke
%'H:q0M^Bb!"@R[&WKGO"pRBhQPerDl84HPT";RN0b8d9K2Z$Z'NE#?)Zh^Bp3+nY/-Q8fWpnYeb!Irm-Z;h]Z)\(1;$4'RM:1PfC
%r(oSo-lp:A9j>W#);_X^X`!M$Wh#`_EN0%s^-,`oHr/@@h5A"^1rJ]-kS;La5tu8TV-5,W&6#%`2@H1fWYq#`VN@`2L=F>qVUE'8
%XQ#odXPkI/Cp1]WR&=UFM_l&me1@IhU!Dd_g-K8<Rabq1Woj/^MQcBknQ1)2#a6,h#\^5d_1h#l<\AknP!@flVVn+Z/#4'O[4#XP
%$nRl#V(N`k,5@N_JQ.Lk2`=!8$/?Q2KgZ9;qpOYA6FKj5RC\l:#33mg':#APD"38hV$0"NQ**VF0.E`%b,*uk=+qOGg$iKi,#TY&
%_7!;>5'rSj&r/iZene`jNn%5l.S[CDm7kZR1##[+C.a,*r>B)M8bNR^eWF-:W\jWm^K!X/IOHpc!\1Z+WC+7ip>d_(k].esD`8Jl
%]%`.CCG*\R70C>>XP+`DSn)I2i0;ZNabZT>;&7+<h$D)oA/;a']k7a8Hun)B$c:hM*F"4B6#>@8@<SC5&9o_nO?Z_7R9N@K!lNfJ
%"T]sml%6dG'H=Yo=0M0GC2_cq<4aCc7Lg*YqHtk;@Q.[o?[o`:SX2ePcI:a3h*G1J(:8RQ02r55@;&EGb#+o^K4,^tJu:"8Lul`n
%3/l0,7-Xh?>(c+.[8*V_#I^=4Z49g=>fhSTXIjW:^n,U\S=;+U(5\G12r%`pY[a:gItMC``>`qM-q5gnCHo-U0$.=QCJ`^,=u$L;
%_TIOG;Zn'uRsOa\6F$'@#!k6YN#,/6>6ZUGiOu4K@aoIJ<.ZN5`H)-I`X\>TYiaDW3Lf](>\KaHdQJ6J']d"ccIZm^VGF&LKrWCS
%]bt/-I^^RECrGW6QKLCmSEYo2!-.]k@lYUNNG[kn/e+Y,[b:5aK17So.T+6uWsO9!CJ:>QVj))1]4c@di.1hK9T)o3n+VV):^Ql`
%:Ipqb#l"8W+:H%r:6@4W`QfRFWrKNUd&ne:[$9L\q@YQK6KjOq,@\?q<b;%c=2KgVNBW,cO8<O2WBOfAi+&kClV]PV__^ma[E_I-
%IYU;/Yq)6RQj@'fqtj)+E(Qcl!gVssOMjAeK8oKrDQP6jXS\g6qKhE+QL=%!^]'RJHWmMInO0\W&?J.spQX<&ZcLVWh:d:0o!&eN
%&T;*m3S4cUV-DUCl'VLFG_$^2nKUSXEEHM-eFD<mI7pDa]O&nXceqcD>!?7H/\b2loEEZP7#MjS,$L:_QEPP!"e=[)RO.'[?gd51
%R)N<r1%/+IQ8_p3-'^nqQFY'Lb4:8.neK9P,-n;#/EX4%NurTt.iaI]/Eb&(NF`Q/8UTnhLP;oh^%NK\^%MoJG/^UiTkiPICKKHJ
%"h/Z7X^+b==4#Y[bh<f;f#68u%s\h("fs:iHJZ<g"g3#;X*k)N?*S,\W7iNI.NJ1LWa1-i=.Iu'R+`:OFp4jn_l-9tXWqb@W*KsL
%hZ7InHs5QEm9<@KXm*39^E,G<iO!bp-Cf7uVDXfc!b?4+Xi[qs%\$-B0Q!FLimPQWd]TOUL=5pn'2&.V8S]Sgbmhrh=qbTZd[ik\
%2aH(3O4H9orQ0nkI7'beN7Jj<$):e2B]#Ir=!ZK7Lj%%:?!q>I'\YJWg(f6`KqNi]TNqS3]n&Vt9`o(RT@MG;jj+i0>B:i(5J*Z9
%^4FV5fX!+#ll5N^$9\3N4)=2aB?Ua,G"%s-6"f(/B33/W'5&[8cc"Kq^fg8@IHcqS]>Dh,U!9`JZX6kA6Hr7Xb>"E_BNCb;6*i)e
%ll418MDAtgXKeE31Ace\]0a`E#d\FLZf]G[I!`]Q0'KTZi3FlAXO4=PJAQ!Q2-JL<=[s'AYcP@?2(,W=ZGt%5!l&2U7?sE@KLqI-
%$C+mQAPJD[OYLu!/9nHnRd>VP]-,4u3O5O')P!',f`a`d8W[6I@ni")3@&pPfs0Xomk2\dk/L0[S[bq?C93i.hKZApF+K9U"(TZY
%WrMdEM`!*;.s99L70D<-9"erD?XU-N`U7e4XOoJ1fG,iY"c@`GM-XP!Q^$-HOP$aq=<h8a&"8;V'4PUi+UPF9_rc=_*d.R>2&b$S
%Pm7b60WaZ/"N)jrYY-AqrJO^0!RT>I5`%m:Oo^k$DpiCF'[jE=p<)?IDr7WWIiV0rJ>2=e1q@"]jrr*g\A=V>@9piop!6@2X,*o:
%$7F9P4P([+Xp^c#@BL(V-d6^iEa=3#NH*KQSJ]s9`-$WM>l\-]psoV]Fb+F9K3K/E<^U(3#u>7#)e?"<2/HbV-*MMV<7GUU@]*)@
%03WaoEPH.28HmP$<.1raHVEN;cM3qqTgN`u3>9?*0?;ltJ62+&=6SoN\baj=s7qB1Bi(VYOU6pC2/SEs3KYgcj;U_P$50mW6lHXt
%?/QY6\KjSG!0Ko<j:]nOA9>OOF=mii$UEko53H!0k>s_-igK\/]]#kCW2^6&lC+Z_i2J>BWb[pcJu$!9W4o%*&it@aWO>](90kEu
%d4)$f7SdkIVj;(4H>c_V/]H4GU,]-Kp(G>I8ZAhVeD:S4V0q,ee[2XA8m$)0X8#.bEM]\&U5Chq5B>Y"1_j)TMQ*Of10?"UVP'[(
%*^Rc1SmohkIXHLl'N7]QBYI\EEM]MAOA^J$Upq%8>j<_dO\u%VU::h59FXG:S^^J`,GCJ3MS?r,:eUmYgES/?\=*CX23oGs$]Wr,
%7.)"Jgm(.m66Gr]4Dq1Z[X%]jl55UBmW:FbNk6(I9l8[WMa5\APf>k,B9kCB=rB8QEQuh<0^_OLpT#k5=&n#i`LRoW'#e-jikC\r
%I3WR=d^<?%>,J<2IG%aSC0=neQA)3t6IPFaU?+_gEi!FE?I&,$]]2W?0uY.R4\B_72qj9"BucLE@gY:m1?fKr>j4:%A0'R+3j(jk
%=.5.f,TR\YNXJ.n2gUK73QG*?Zp1*rNc2iUQWfCW.7YmK*clCk@D%kej%@A^X,Q(?'h=0Ac:MOYa-DCSC<2Dlc)-*Q9#*1S)nf6^
%V>ko<`m4^<^WJ&ZWkZ1[U%1+qh!B_=r$ibtQ4EgB*,+$@RN&;<"0EGS)u1'TA7><efPMR,'_6d/U2X;.S3XC:O)E$]>4]6;K>m&]
%Rpo^<mgAglnp"d+Fp0J]8"j\9(]W\Q>(s5XOm;Y1Y8W@,'H"(oNN74bqE^gY8E^@HO1]?R$f?K]<ugiI#5nu74X'#F]7=\.@\CJ%
%TW\Xb.ffF7J%ijnYNY.fi9)Waq$MQLL4$]8T::21jYX7*VOkQ8aT_<a`B6*M]R<JW$0:n$iqWq+md.$9aiQVObb&V)?AnPAMl?k&
%er(n<0Ca@$k@jr''%tp`1k_BeA7Zr`-cj]sNK&R-g+o[%f)2<iLRAWFao+&$#r/Jt0'Cl)#F`P8D4k3Uf.f+kUdB0Y<0n1B//sl$
%I(ka3s">qts'%ngs3SV.6DT#dW0O3jj]@ElbieNT%Lc(^k!GSW?!dET-d*ZkNG5BO.48aHXT:QG&C?:?0/9cn(6u"jm\_>2r6HSH
%F%R^A$Zi*T,7GU-&"P=QV`$,Ol713AqBl1(^"Kla6]F4g29U-Bd&VEV0[gM!XIDoOl%p;m:XLK&Hm%\O.VYetro!8jhXP@kLD!!o
%[4gR.5:s&(flKjXTK81AgYH4\iY$qlT!SLSVbUQpZNq.N0CMNZkYI'Y`"NrO9F#6dTtfjXfTINPR@,NCqfXCUT]<?#8`NTQc_^%^
%bYg!u9&U\(U@3D"GZl:0o?e3)RqbjT^.IWLgJ;[nl=lA@&I)NBjGY:Vi'SuS3Yj.Qq0#Z^*%m*"W[`>:P\X7@ZX$ZU8!YfFZsEQ_
%hK:7@/"W"LHGN_',+('T)XMdBc\gVAZeXNaa_p@#]TL`]*5/qHKA6s!"%%*b2G^JD&cQ\ur2P'!j9/GNb'lHGb[f_SnfqLFBIK&P
%Z!j8Sj3_e@"nJ\VhXK<UGE6e%aKD%n/l7C@Y"nZ%hbM$QS7N&P<&qU3hkQJ"OfC!l,bQ-$btnXe0F\B^F0!DFVtmG;I1&S]RbnJ#
%.3Pa,?F!W*(6FPH62FSH3Z\Ih><k6N+Ph'5@2R"Z+T3c4XZ'sO13]sB*:'$]VrsJ*JF<_*m@F+TVaXSV!CMM,R^;YY,(?7)*&VGn
%3`6YH*[0rQ*UZHADQ[sDE(:7To.['PpZaKY#CL;lh%Ee8^`8=(+t9)O";Z*]eskb%=,N=7NZ=a@]uLQ?qA'ClZ-=a!\LS`;(8h?Y
%m$34q:HW)lY?G6%LiqNW?'/T%SM=i$*?V=$RC>`-V@bk&ACWU,OhqcE_oWY]7CtS];d#SUA5KF%DW0Zu[SOM]aJ"Q?Q"6Om\jZ+:
%UC(1O;DsGqJeG3c\fa&njPV/MFrWXm(6NrRa\csi8Q)An.B:1=He7u)\>=J[\+nd]IJ7MPZpkbggT=<3$81#5_u0?+6LWFHIB/c`
%RC`MPe$t!-2PH18Dn2iVL2MjJ&uh,c/&%5Wi7?4qGLU5HX8#-+pb=$+^RQN5grR,sWam,d75dlU*8MhC#.mKLcoi%u<jq.%_s7br
%DN)P^I7":Gj7SC`ZQVL0qmh,8]R;qZ[P_s0;GM?%q<4Z!GR@KRi;,p>5Uj#d";e+bS8]!m'rU>gA:sF2U?[K`/^:nmr/&]ANc32C
%cX'@F=h@lMI&,phCnG-7=\_(<)mVa&Q^ce@SC'?D"]*P$,CW.'d_T-VJ0d*sSQ%Y4C$Xb,&[cQ'AZDJ1OsrN$:qBBo3f8j[\cCTh
%mUk>=/uT>25oJ='c^.6U3"qW'k_-f&pS4\Tl7=+jKZC(o4t?QREc$5QLmF(qfSXhjcs?VsAj@7AF:5EBE`O7E1`U5nZVr=Gb0bY(
%(=V;%!,]sLq*]pi*3[\U5%$@[?9#fEl1O!)8rZhTXWo&0&5\I!aojT&)/elJ8J?pb7!Z/>6u33$-lbSSRN%G'_s1\0r/X@2l0gh9
%H[S3[lp(H\huDNirp,Vprp`e`rq`18qXH66ak4+fC])GLrr$22"97Y)gOK3l5Q7#,s7F'Uq<cqGCZ'F:iMSp<nfNAYl+d2k?[hmq
%^\G^=J,5ePI/NWW5Q9mhY'^'ClT]gqiO<1nr"";Rm?`kus49L601P`brIs/-mVi+'^\Q'fpci7H8=]~>
%AI9_PrivateDataEnd
